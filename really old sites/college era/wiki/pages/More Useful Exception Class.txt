[JavaScript tidbits]
{
//Exception(message ??(, innerException??))
//  a real exception class for ECMAScript
//  -message:
//     An error message
//  -innerException:
//     An optional cause for this exception
function Exception(message, innerException)
??<
	Class.inherits(this, Error, Exception, message);
	if(arguments.length === 2)
	??<
		if(innerException instanceof Error)
		??<
			this.cause = new Exception("ERROR: "+innerException.message);
		??>
		else if(innerException instanceof Exception)
		??<
			this.cause = innerException;
		??>
		else
		??<
			this.cause = new Exception("EXCEPTION: " + innerException);
		??>
	??>
	else
	??<
		this.cause = null;
	??>
??>
//Exception.unroll()
//  unroll the exception stack and create a string output for it.
Exception.prototype.unroll = function()
??<
	var out = "";
	var here = this;
	var prefix = "";
	while(here !== null)
	??<
		out += prefix + here.message + "\n";
		here = here.cause;
		prefix += ">";
	??>
	return out;
??>
}