


--------------------
05/11/07 06:57 / 64.8.50.160
--------------------
IÅfm organizing a resistance force against the Free Software Foundation, GNU, and Richard M. Stallman. I fear that we are not doing enough to stop them from destroying computing for eternity. IÅfm only one man, I can only bicker with just so many Torvoldians and Stallmaniacs per day.

If Richard Stallman had his way, I wouldnÅft have a job. The GPL is a virus that infects everything it encounters, and IÅfm not going to touch it with a 50Åå pole. The GPL is specifically designed as the Software License to further StallmanÅfs agenda of destroying the industry of Software Development For Profit. He wants to replace a DeveloperÅfs long established, legitimate, and defensible rights of property with some new, imagined set of UserÅfs rights to do whatever the hell they please, including underselling us on our own products.

This isnÅft a case of Ågthe GPL isnÅft for everyone, so if you donÅft like it, just ignore it.Åh I believe that, like any disease, one must take proactive, preventative, and destructive action against this pox upon the world. As more developers blindly release software under the GPL, unawares of its true implications, an ever growing library of GPL only software grows. Avoiding it will become more and more difficult.

Because of the viral nature of the GPL, an entire subset of the computing community must actively avoid anything that has to do with the GPL. Anyone interested in making software for profit should avoid the GPL, or they run the risk of completely invalidating any legal claim to their own work that they may have (assuming the GPL will hold up in court). Surely, this is contradictory to the stated goals of the FSF of the advancement of the computing community as a whole. In reality, it is not, because the FSF is composed of Communists, and they do not care about the Capitalist Pig-Dog Software Developers who sell software. To the FSF, there is no contradiction, because they do not see this large portion of the computing community as part of the community.

If you want to ensure your UserÅfs freedom, release your code under the BSD license. The BSD license is great, it literally lets you do whatever you want, while still maintaining control over your own project. Under the GPL, once you release your software, itÅfs no longer yours. It becomes a ward of the FSF, like so many children whose childhoods were destroyed when they were forced into rigorous athletic and academic training by the Soviets and Red Chinese.

!The GPL

LetÅfs take a look at the four ÅgLibertiesÅh of ÅgFree SoftwareÅh:
''Free software is a matter of the usersÅf freedom to run, copy, distribute, study, change and improve the software. More precisely, it refers to four kinds of freedom, for the users of the software:
*The freedom to run the program, for any purpose (freedom 0). 
*The freedom to study how the program works, and adapt it to your needs (freedom 1). Access to the source code is a precondition for this. 
*The freedom to redistribute copies so you can help your neighbor (freedom 2). 
*The freedom to improve the program, and release your improvements to the public, so that the whole community benefits (freedom 3). Access to the source code is a precondition for this.''

!Reviewing the "Freedoms"
LetÅfs talk about them in turn

!!!'''Freedom 0.) The freedom to run the program, for any purpose'''
Freedom 0 asserts the userÅfs right to run a program. This sounds reasonable, and I would agree, if the FSF and I agreed that the user should pay for the software first. Stallman would ideally like to see all software as free of charge, as any good Communist would. The fact that I charge for my software infringes on UserÅfs rights to run my software. Sorry, but itÅfs my software. We all have rights, but my right to eat is more important than your ostensible right to run my software.

!!!'''Freedom 1.) The freedom to study how the program works, and adapt it to your needs.'''
This is economically infeasible, as it eliminates the incentive to innovate, i.e. massive profits, partly to recuperate my losses during Research and Development, partly to reward me for taking risk and displaying the merit to pull through successfully. However, like all good Communists, the FSF despises the entrepreneur and profit. Unfortunately, Communists forget that, without incentive, people will not work. Altruism to the computing community as a whole doesnÅft feed me or my fake kids.

People are greedy. People want things. ThatÅfs why they work at jobs they hate. I personally want a few sports cars (thankfully I actually enjoy my job). I canÅft get that in a world of Free Software. I have a right to pursue my desires, and I think that right trumps the UserÅfs nosiness just a little bit. If you donÅft think so, donÅft try to convince me, because I donÅft care about you.

ÅgBut people making Free Software ''are'' being innovative. Look at The GIMP and Blender.Åh No, you look at The GIMP and Blender. The GIMP is the single best example of a bunch of nerds making cool features, doing 90% of the work and getting bored with the last 10%, and not paying attention to user interface. And Blender, oh Blender! Blender started out as a commercial modelling package and FAILED. The GIMP and Blender are examples of what I like to call [Zombieware].

!!!'''Freedom 2.) The freedom to redistribute copies so you can help your neighbor''' 
Barney taught sharing is caring! Yaaay. Screw Barney, he was retarded and his show was insulting to the intelligence of children everywhere. With this one point, you the developer completely lose any ability to make any money from your software. You canÅft realistically sell the software, because anyone could take the code and sell or give it away themselves. This already happens, look at XChat. Nobody actually pays for XChat for Windows, they just find the other version from the developers that were actually competent enough to port XChat from Linux to Windows properly.

ÅgOh, but you can sell support. Huzzah! LetÅfs all be like Red Hat!Åh Yes, because Red Hat is taking the computing industry by storm. Red Hat can be successful specifically because their are so few Linux support groups of measurable quality in the world. You have a choice of paying Red Hat for support, or taking your chances with the Slashdot crowd who demonstrably donÅft know their heads from their asses. ItÅfs the law of supply and demand, folks. There is only a fixed demand for Linux support, and new suppliers in the market are only going to spread the pool thinner.

Also, because anyone has access to the source code, anyone can start their own support company for any software. Red Hat does this already. They didnÅft make Linux. They took the software, put parts of it together, shined the surface a little, then put it on the shelf with a warranty tag. These people are used car salesman. Hell, they are worse, because they do all of this over the phone. At least the car salesman has enough courage to screw you in person.

!!!'''Freedom 3.) The freedom to improve the program, and release your improvements to the public, so that the whole community benefits'''
Here is the nature of entrepreneurship: if you think you can do better than me, then you should have to take the same risks that I have had to take in the course of R&D. ItÅfs only fair that we all have the same advantages and disadvantages. If I put down the cash to start a McDonaldÅfs franchise, you do not have the right to waltz in and take over just because you think my management sucks. Open your own franchise and let the market decide who makes a better product. For all the derisive diatribes coming from the FSF camp on how corporatism, profit, and Capitalism in general are unfair to the populace, you would think they would understand that these Freedoms are fundamentally unfair to the risk takers.

At any rate, this last freedom is just another grasp at getting at your source code. With source code, they can do anything, but most importantly they can deny you compensation for your hard work. DonÅft let them.

!Society's Squeamish Relationship with Capitalism
The really dishonest part of the GPL is that it puts up a smoke screen, Ågprotecting userÅfs rights,Åh to hide its true nature, Ågstripping developerÅfs rights.Åh Where will we be if developers canÅft make money off of software? The demand for software is too high for hobbyists and open source developers to meet, and there isnÅft enough demand for support to cover the total cost.

Where I work, we sell software, one-off development contracts, support, and server space. We have developers who write code, a call center that handles the support, and an admin team that handles the server issues. Each of these profit centers funds itself, as is standard accounting practice. It is very bad business to have one of those profit centers, e.g. support, propping up another, e.g. development.

And this is why we do these things, for business, for profit. We donÅft run this company souly out of an altruistic desire to help our customers. Yes, helping customers is an excellent motivation, and we seek to do that to the best of our ability. But we do it for the end result, gettinÅf paid.

It bothers me greatly that people today donÅft seem to understand the concept that profit is good. Too often I see people get insulted when they learn someone else made a profit off of them. That is the entire *point*. They wouldnÅft have sold it to you if they werenÅft going to make a profit. Profit is their reward for taking the risk of aquiring the item in the hopes that someone like you would buy it.

I used to know a guy who was a really good programmer. He worked hard and got tasks done under budget and under time. But he never stayed with any one company for very long, because when he learned of the disparity between what he was getting paid for a piece of work and what the company was making off of that work, he would get pissed and leave. ÅgI canÅft stand people making money off of me.Åh He didnÅft understand the fundamental concept that he would have never been hired if the company didnÅft expect to make money off of him. And he never figured out that he was free to make his own company and keep his own profits.

This is the core of the Marxist ideology, that people should not be a source of profit for other people. If getting you to work for me isnÅft going to net me something more than I could do on my own, IÅfm sorry, itÅfs too much bother to handle otherwise. If risk and hard work have no extra benefit over punching a time-clock, then IÅfd rather tune out and punch the time-clock, itÅfs the rule of the path of least resistance. 
I just have more important things to do with my time.


!So, how can you help fight the GPL?
First, avoid it completely. DonÅft use GPLed software (yes, that means Linux as a whole), donÅft release anything under the GPL, donÅft use anything that even smells of the GPL (like the LGPL, which is just the GPL in SheepÅfs Clothing). If you want to release your software but still maintain legal rights to the software, use a different license like BSD, or, gasp, consult a lawyer and write your own. If youÅfre truly concerned about the advancement of the computing community as a whole, or you really donÅft care, release your software under Creative Commons. Once an article is released under Creative Commons, it stays in Creative Commons. That way, you will ensure the world will have unrestricted access to your code.

Second, save your pennies. This battle is going to hit the courts eventually, and the Resistance is going to need deep pockets to finally put these curs down like the mangy mutts they are.

Third, IÅfve been considering a much more devious strategy: playing them at their own game. The GPL merely states that source code need be made available, it does not say how, nor even if it must be included directly with the binary distributions. It might, if one had the time, ambition, and disposable income to waste a lot of time and ambition, be worthwhile to download a bunch of GPL software, make some really great changes to it, and then dig oneÅfs heals in on giving those changes back to ÅgThe Community.Åh Require users to request source code by mail (not email, I mean postal system). Require a nominal fee to cover shipping charges. Ground ship the source code on the most inconvenient format you can muster, be it tape drive, 3.5Åç HD Floppy, 5.25Åç Floppy, Zip Disk, or whatever. Better yet, send the source code as reams of paper printouts. Whatever you do, this is definitely the Guerrilla tactics in this ever growing battle.

Stay vigilant folks. We may survive this yet.


--------------------
05/11/07 07:02 / 64.8.50.160
--------------------
I'm organizing a resistance force against the Free Software Foundation, GNU, and Richard M. Stallman. I fear that we are not doing enough to stop them from destroying computing for eternity. I'm only one man, I can only bicker with just so many Torvoldians and Stallmaniacs per day.

If Richard Stallman had his way, I wouldn't have a job. The GPL is a virus that infects everything it encounters, and I'm not going to touch it with a 50Åå pole. The GPL is specifically designed as the Software License to further Stallman's agenda of destroying the industry of Software Development For Profit. He wants to replace a Developer's long established, legitimate, and defensible rights of property with some new, imagined set of User's rights to do whatever the hell they please, including underselling us on our own products.

This isn't a case of "gthe GPL isn't for everyone, so if you don't like it, just ignore it." I believe that, like any disease, one must take proactive, preventative, and destructive action against this pox upon the world. As more developers blindly release software under the GPL, unawares of its true implications, an ever growing library of GPL only software grows. Avoiding it will become more and more difficult.

Because of the viral nature of the GPL, an entire subset of the computing community must actively avoid anything that has to do with the GPL. Anyone interested in making software for profit should avoid the GPL, or they run the risk of completely invalidating any legal claim to their own work that they may have (assuming the GPL will hold up in court). Surely, this is contradictory to the stated goals of the FSF of the advancement of the computing community as a whole. In reality, it is not, because the FSF is composed of Communists, and they do not care about the Capitalist Pig-Dog Software Developers who sell software. To the FSF, there is no contradiction, because they do not see this large portion of the computing community as part of the community.

If you want to ensure your User's freedom, release your code under the BSD license. The BSD license is great, it literally lets you do whatever you want, while still maintaining control over your own project. Under the GPL, once you release your software, it's no longer yours. It becomes a ward of the FSF, like so many children whose childhoods were destroyed when they were forced into rigorous athletic and academic training by the Soviets and Red Chinese.

!!The GPL

Let's take a look at the four "Liberties" of "Free Software":
{
''Free software is a matter of the users' freedom to run, copy, distribute, study, change and improve the software. More precisely, it refers to four kinds of freedom, for the users of the software:
*The freedom to run the program, for any purpose (freedom 0). 
*The freedom to study how the program works, and adapt it to your needs (freedom 1). Access to the source code is a precondition for this. 
*The freedom to redistribute copies so you can help your neighbor (freedom 2). 
*The freedom to improve the program, and release your improvements to the public, so that the whole community benefits (freedom 3). Access to the source code is a precondition for this.''
}

!!Reviewing the "Freedoms"
Let's talk about them in turn

!'''Freedom 0.) The freedom to run the program, for any purpose'''
Freedom 0 asserts the user's right to run a program. This sounds reasonable, and I would agree, if the FSF and I agreed that the user should pay for the software first. Stallman would ideally like to see all software as free of charge, as any good Communist would. The fact that I charge for my software infringes on User's rights to run my software. Sorry, but it's my software. We all have rights, but my right to eat is more important than your ostensible right to run my software.

!'''Freedom 1.) The freedom to study how the program works, and adapt it to your needs.'''
This is economically infeasible, as it eliminates the incentive to innovate, i.e. massive profits, partly to recuperate my losses during Research and Development, partly to reward me for taking risk and displaying the merit to pull through successfully. However, like all good Communists, the FSF despises the entrepreneur and profit. Unfortunately, Communists forget that, without incentive, people will not work. Altruism to the computing community as a whole doesn't feed me or my fake kids.

People are greedy. People want things. That's why they work at jobs they hate. I personally want a few sports cars (thankfully I actually enjoy my job). I can't get that in a world of Free Software. I have a right to pursue my desires, and I think that right trumps the User's nosiness just a little bit. If you don't think so, don't try to convince me, because I don't care about you.

"But people making Free Software ''are'' being innovative. Look at The GIMP and Blender." No, you look at The GIMP and Blender. The GIMP is the single best example of a bunch of nerds making cool features, doing 90% of the work and getting bored with the last 10%, and not paying attention to user interface. And Blender, oh Blender! Blender started out as a commercial modelling package and FAILED. The GIMP and Blender are examples of what I like to call [Zombieware].

!'''Freedom 2.) The freedom to redistribute copies so you can help your neighbor''' 
Barney taught sharing is caring! Yaaay. Screw Barney, he was retarded and his show was insulting to the intelligence of children everywhere. With this one point, you the developer completely lose any ability to make any money from your software. You can't realistically sell the software, because anyone could take the code and sell or give it away themselves. This already happens, look at XChat. Nobody actually pays for XChat for Windows, they just find the other version from the developers that were actually competent enough to port XChat from Linux to Windows properly.

"Oh, but you can sell support. Huzzah! Let's all be like Red Hat!" Yes, because Red Hat is taking the computing industry by storm. Red Hat can be successful specifically because their are so few Linux support groups of measurable quality in the world. You have a choice of paying Red Hat for support, or taking your chances with the Slashdot crowd who demonstrably don't know their heads from their asses. It's the law of supply and demand, folks. There is only a fixed demand for Linux support, and new suppliers in the market are only going to spread the pool thinner.

Also, because anyone has access to the source code, anyone can start their own support company for any software. Red Hat does this already. They didn't make Linux. They took the software, put parts of it together, shined the surface a little, then put it on the shelf with a warranty tag. These people are used car salesman. Hell, they are worse, because they do all of this over the phone. At least the car salesman has enough courage to screw you in person.

!'''Freedom 3.) The freedom to improve the program, and release your improvements to the public, so that the whole community benefits'''
Here is the nature of entrepreneurship: if you think you can do better than me, then you should have to take the same risks that I have had to take in the course of R&D. It's only fair that we all have the same advantages and disadvantages. If I put down the cash to start a McDonald's franchise, you do not have the right to waltz in and take over just because you think my management sucks. Open your own franchise and let the market decide who makes a better product. For all the derisive diatribes coming from the FSF camp on how corporatism, profit, and Capitalism in general are unfair to the populace, you would think they would understand that these Freedoms are fundamentally unfair to the risk takers.

At any rate, this last freedom is just another grasp at getting at your source code. With source code, they can do anything, but most importantly they can deny you compensation for your hard work. Don't let them.

!!Society's Squeamish Relationship with Capitalism
The really dishonest part of the GPL is that it puts up a smoke screen, "protecting user's rights," to hide its true nature, "stripping developer's rights." Where will we be if developers can't make money off of software? The demand for software is too high for hobbyists and open source developers to meet, and there isn't enough demand for support to cover the total cost.

Where I work, we sell software, one-off development contracts, support, and server space. We have developers who write code, a call center that handles the support, and an admin team that handles the server issues. Each of these profit centers funds itself, as is standard accounting practice. It is very bad business to have one of those profit centers, e.g. support, propping up another, e.g. development.

And this is why we do these things, for business, for profit. We don't run this company souly out of an altruistic desire to help our customers. Yes, helping customers is an excellent motivation, and we seek to do that to the best of our ability. But we do it for the end result, gettin' paid.

It bothers me greatly that people today don't seem to understand the concept that profit is good. Too often I see people get insulted when they learn someone else made a profit off of them. That is the entire *point*. They wouldn't have sold it to you if they weren't going to make a profit. Profit is their reward for taking the risk of aquiring the item in the hopes that someone like you would buy it.

I used to know a guy who was a really good programmer. He worked hard and got tasks done under budget and under time. But he never stayed with any one company for very long, because when he learned of the disparity between what he was getting paid for a piece of work and what the company was making off of that work, he would get pissed and leave. "I can't stand people making money off of me." He didn't understand the fundamental concept that he would have never been hired if the company didn't expect to make money off of him. And he never figured out that he was free to make his own company and keep his own profits.

This is the core of the Marxist ideology, that people should not be a source of profit for other people. If getting you to work for me isn't going to net me something more than I could do on my own, I'm sorry, it's too much bother to handle otherwise. If risk and hard work have no extra benefit over punching a time-clock, then I'd rather tune out and punch the time-clock, it's the rule of the path of least resistance. 
I just have more important things to do with my time.


!!So, how can you help fight the GPL?
First, avoid it completely. Don't use GPLed software (yes, that means Linux as a whole), don't release anything under the GPL, don't use anything that even smells of the GPL (like the LGPL, which is just the GPL in Sheep's Clothing). If you want to release your software but still maintain legal rights to the software, use a different license like BSD, or, gasp, consult a lawyer and write your own. If you're truly concerned about the advancement of the computing community as a whole, or you really don't care, release your software under Creative Commons. Once an article is released under Creative Commons, it stays in Creative Commons. That way, you will ensure the world will have unrestricted access to your code.

Second, save your pennies. This battle is going to hit the courts eventually, and the Resistance is going to need deep pockets to finally put these curs down like the mangy mutts they are.

Third, I've been considering a much more devious strategy: playing them at their own game. The GPL merely states that source code need be made available, it does not say how, nor even if it must be included directly with the binary distributions. It might, if one had the time, ambition, and disposable income to waste a lot of time and ambition, be worthwhile to download a bunch of GPL software, make some really great changes to it, and then dig one's heals in on giving those changes back to "The Community." Require users to request source code by mail (not email, I mean postal system). Require a nominal fee to cover shipping charges. Ground ship the source code on the most inconvenient format you can muster, be it tape drive, 3.5Åç HD Floppy, 5.25Åç Floppy, Zip Disk, or whatever. Better yet, send the source code as reams of paper printouts. Whatever you do, this is definitely the Guerrilla tactics in this ever growing battle.

Stay vigilant folks. We may survive this yet.


--------------------
05/11/07 07:03 / 64.8.50.160
--------------------
!!!The GPL and You
I'm organizing a resistance force against the Free Software Foundation, GNU, and Richard M. Stallman. I fear that we are not doing enough to stop them from destroying computing for eternity. I'm only one man, I can only bicker with just so many Torvoldians and Stallmaniacs per day.

If Richard Stallman had his way, I wouldn't have a job. The GPL is a virus that infects everything it encounters, and I'm not going to touch it with a 50Åå pole. The GPL is specifically designed as the Software License to further Stallman's agenda of destroying the industry of Software Development For Profit. He wants to replace a Developer's long established, legitimate, and defensible rights of property with some new, imagined set of User's rights to do whatever the hell they please, including underselling us on our own products.

This isn't a case of "the GPL isn't for everyone, so if you don't like it, just ignore it." I believe that, like any disease, one must take proactive, preventative, and destructive action against this pox upon the world. As more developers blindly release software under the GPL, unawares of its true implications, an ever growing library of GPL only software grows. Avoiding it will become more and more difficult.

Because of the viral nature of the GPL, an entire subset of the computing community must actively avoid anything that has to do with the GPL. Anyone interested in making software for profit should avoid the GPL, or they run the risk of completely invalidating any legal claim to their own work that they may have (assuming the GPL will hold up in court). Surely, this is contradictory to the stated goals of the FSF of the advancement of the computing community as a whole. In reality, it is not, because the FSF is composed of Communists, and they do not care about the Capitalist Pig-Dog Software Developers who sell software. To the FSF, there is no contradiction, because they do not see this large portion of the computing community as part of the community.

If you want to ensure your User's freedom, release your code under the BSD license. The BSD license is great, it literally lets you do whatever you want, while still maintaining control over your own project. Under the GPL, once you release your software, it's no longer yours. It becomes a ward of the FSF, like so many children whose childhoods were destroyed when they were forced into rigorous athletic and academic training by the Soviets and Red Chinese.

!!The GPL

Let's take a look at the four "Liberties" of "Free Software":

''Free software is a matter of the users' freedom to run, copy, distribute, study, change and improve the software. More precisely, it refers to four kinds of freedom, for the users of the software:
*The freedom to run the program, for any purpose (freedom 0). 
*The freedom to study how the program works, and adapt it to your needs (freedom 1). Access to the source code is a precondition for this. 
*The freedom to redistribute copies so you can help your neighbor (freedom 2). 
*The freedom to improve the program, and release your improvements to the public, so that the whole community benefits (freedom 3). Access to the source code is a precondition for this.''


!!Reviewing the "Freedoms"
Let's talk about them in turn

!'''Freedom 0.) The freedom to run the program, for any purpose'''
Freedom 0 asserts the user's right to run a program. This sounds reasonable, and I would agree, if the FSF and I agreed that the user should pay for the software first. Stallman would ideally like to see all software as free of charge, as any good Communist would. The fact that I charge for my software infringes on User's rights to run my software. Sorry, but it's my software. We all have rights, but my right to eat is more important than your ostensible right to run my software.

!'''Freedom 1.) The freedom to study how the program works, and adapt it to your needs.'''
This is economically infeasible, as it eliminates the incentive to innovate, i.e. massive profits, partly to recuperate my losses during Research and Development, partly to reward me for taking risk and displaying the merit to pull through successfully. However, like all good Communists, the FSF despises the entrepreneur and profit. Unfortunately, Communists forget that, without incentive, people will not work. Altruism to the computing community as a whole doesn't feed me or my fake kids.

People are greedy. People want things. That's why they work at jobs they hate. I personally want a few sports cars (thankfully I actually enjoy my job). I can't get that in a world of Free Software. I have a right to pursue my desires, and I think that right trumps the User's nosiness just a little bit. If you don't think so, don't try to convince me, because I don't care about you.

"But people making Free Software ''are'' being innovative. Look at The GIMP and Blender." No, you look at The GIMP and Blender. The GIMP is the single best example of a bunch of nerds making cool features, doing 90% of the work and getting bored with the last 10%, and not paying attention to user interface. And Blender, oh Blender! Blender started out as a commercial modelling package and FAILED. The GIMP and Blender are examples of what I like to call [Zombieware].

!'''Freedom 2.) The freedom to redistribute copies so you can help your neighbor''' 
Barney taught sharing is caring! Yaaay. Screw Barney, he was retarded and his show was insulting to the intelligence of children everywhere. With this one point, you the developer completely lose any ability to make any money from your software. You can't realistically sell the software, because anyone could take the code and sell or give it away themselves. This already happens, look at XChat. Nobody actually pays for XChat for Windows, they just find the other version from the developers that were actually competent enough to port XChat from Linux to Windows properly.

"Oh, but you can sell support. Huzzah! Let's all be like Red Hat!" Yes, because Red Hat is taking the computing industry by storm. Red Hat can be successful specifically because their are so few Linux support groups of measurable quality in the world. You have a choice of paying Red Hat for support, or taking your chances with the Slashdot crowd who demonstrably don't know their heads from their asses. It's the law of supply and demand, folks. There is only a fixed demand for Linux support, and new suppliers in the market are only going to spread the pool thinner.

Also, because anyone has access to the source code, anyone can start their own support company for any software. Red Hat does this already. They didn't make Linux. They took the software, put parts of it together, shined the surface a little, then put it on the shelf with a warranty tag. These people are used car salesman. Hell, they are worse, because they do all of this over the phone. At least the car salesman has enough courage to screw you in person.

!'''Freedom 3.) The freedom to improve the program, and release your improvements to the public, so that the whole community benefits'''
Here is the nature of entrepreneurship: if you think you can do better than me, then you should have to take the same risks that I have had to take in the course of R&D. It's only fair that we all have the same advantages and disadvantages. If I put down the cash to start a McDonald's franchise, you do not have the right to waltz in and take over just because you think my management sucks. Open your own franchise and let the market decide who makes a better product. For all the derisive diatribes coming from the FSF camp on how corporatism, profit, and Capitalism in general are unfair to the populace, you would think they would understand that these Freedoms are fundamentally unfair to the risk takers.

At any rate, this last freedom is just another grasp at getting at your source code. With source code, they can do anything, but most importantly they can deny you compensation for your hard work. Don't let them.

!!Society's Squeamish Relationship with Capitalism
The really dishonest part of the GPL is that it puts up a smoke screen, "protecting user's rights," to hide its true nature, "stripping developer's rights." Where will we be if developers can't make money off of software? The demand for software is too high for hobbyists and open source developers to meet, and there isn't enough demand for support to cover the total cost.

Where I work, we sell software, one-off development contracts, support, and server space. We have developers who write code, a call center that handles the support, and an admin team that handles the server issues. Each of these profit centers funds itself, as is standard accounting practice. It is very bad business to have one of those profit centers, e.g. support, propping up another, e.g. development.

And this is why we do these things, for business, for profit. We don't run this company souly out of an altruistic desire to help our customers. Yes, helping customers is an excellent motivation, and we seek to do that to the best of our ability. But we do it for the end result, gettin' paid.

It bothers me greatly that people today don't seem to understand the concept that profit is good. Too often I see people get insulted when they learn someone else made a profit off of them. That is the entire *point*. They wouldn't have sold it to you if they weren't going to make a profit. Profit is their reward for taking the risk of aquiring the item in the hopes that someone like you would buy it.

I used to know a guy who was a really good programmer. He worked hard and got tasks done under budget and under time. But he never stayed with any one company for very long, because when he learned of the disparity between what he was getting paid for a piece of work and what the company was making off of that work, he would get pissed and leave. "I can't stand people making money off of me." He didn't understand the fundamental concept that he would have never been hired if the company didn't expect to make money off of him. And he never figured out that he was free to make his own company and keep his own profits.

This is the core of the Marxist ideology, that people should not be a source of profit for other people. If getting you to work for me isn't going to net me something more than I could do on my own, I'm sorry, it's too much bother to handle otherwise. If risk and hard work have no extra benefit over punching a time-clock, then I'd rather tune out and punch the time-clock, it's the rule of the path of least resistance. 
I just have more important things to do with my time.


!!So, how can you help fight the GPL?
First, avoid it completely. Don't use GPLed software (yes, that means Linux as a whole), don't release anything under the GPL, don't use anything that even smells of the GPL (like the LGPL, which is just the GPL in Sheep's Clothing). If you want to release your software but still maintain legal rights to the software, use a different license like BSD, or, gasp, consult a lawyer and write your own. If you're truly concerned about the advancement of the computing community as a whole, or you really don't care, release your software under Creative Commons. Once an article is released under Creative Commons, it stays in Creative Commons. That way, you will ensure the world will have unrestricted access to your code.

Second, save your pennies. This battle is going to hit the courts eventually, and the Resistance is going to need deep pockets to finally put these curs down like the mangy mutts they are.

Third, I've been considering a much more devious strategy: playing them at their own game. The GPL merely states that source code need be made available, it does not say how, nor even if it must be included directly with the binary distributions. It might, if one had the time, ambition, and disposable income to waste a lot of time and ambition, be worthwhile to download a bunch of GPL software, make some really great changes to it, and then dig one's heals in on giving those changes back to "The Community." Require users to request source code by mail (not email, I mean postal system). Require a nominal fee to cover shipping charges. Ground ship the source code on the most inconvenient format you can muster, be it tape drive, 3.5Åç HD Floppy, 5.25Åç Floppy, Zip Disk, or whatever. Better yet, send the source code as reams of paper printouts. Whatever you do, this is definitely the Guerrilla tactics in this ever growing battle.

Stay vigilant folks. We may survive this yet.


--------------------
05/11/07 07:03 / 64.8.50.160
--------------------
!!!The GPL and You
I'm organizing a resistance force against the Free Software Foundation, GNU, and Richard M. Stallman. I fear that we are not doing enough to stop them from destroying computing for eternity. I'm only one man, I can only bicker with just so many Torvoldians and Stallmaniacs per day.

If Richard Stallman had his way, I wouldn't have a job. The GPL is a virus that infects everything it encounters, and I'm not going to touch it with a 50Åå pole. The GPL is specifically designed as the Software License to further Stallman's agenda of destroying the industry of Software Development For Profit. He wants to replace a Developer's long established, legitimate, and defensible rights of property with some new, imagined set of User's rights to do whatever the hell they please, including underselling us on our own products.

This isn't a case of "the GPL isn't for everyone, so if you don't like it, just ignore it." I believe that, like any disease, one must take proactive, preventative, and destructive action against this pox upon the world. As more developers blindly release software under the GPL, unawares of its true implications, an ever growing library of GPL only software grows. Avoiding it will become more and more difficult.

Because of the viral nature of the GPL, an entire subset of the computing community must actively avoid anything that has to do with the GPL. Anyone interested in making software for profit should avoid the GPL, or they run the risk of completely invalidating any legal claim to their own work that they may have (assuming the GPL will hold up in court). Surely, this is contradictory to the stated goals of the FSF of the advancement of the computing community as a whole. In reality, it is not, because the FSF is composed of Communists, and they do not care about the Capitalist Pig-Dog Software Developers who sell software. To the FSF, there is no contradiction, because they do not see this large portion of the computing community as part of the community.

If you want to ensure your User's freedom, release your code under the BSD license. The BSD license is great, it literally lets you do whatever you want, while still maintaining control over your own project. Under the GPL, once you release your software, it's no longer yours. It becomes a ward of the FSF, like so many children whose childhoods were destroyed when they were forced into rigorous athletic and academic training by the Soviets and Red Chinese.

!!The GPL

Let's take a look at the four "Liberties" of "Free Software":

''Free software is a matter of the users' freedom to run, copy, distribute, study, change and improve the software. More precisely, it refers to four kinds of freedom, for the users of the software:
*The freedom to run the program, for any purpose (freedom 0). 
*The freedom to study how the program works, and adapt it to your needs (freedom 1). Access to the source code is a precondition for this. 
*The freedom to redistribute copies so you can help your neighbor (freedom 2). 
*The freedom to improve the program, and release your improvements to the public, so that the whole community benefits (freedom 3). Access to the source code is a precondition for this.''


!!Reviewing the "Freedoms"
Let's talk about them in turn

!'''Freedom 0.) The freedom to run the program, for any purpose'''
Freedom 0 asserts the user's right to run a program. This sounds reasonable, and I would agree, if the FSF and I agreed that the user should pay for the software first. Stallman would ideally like to see all software as free of charge, as any good Communist would. The fact that I charge for my software infringes on User's rights to run my software. Sorry, but it's my software. We all have rights, but my right to eat is more important than your ostensible right to run my software.

!'''Freedom 1.) The freedom to study how the program works, and adapt it to your needs.'''
This is economically infeasible, as it eliminates the incentive to innovate, i.e. massive profits, partly to recuperate my losses during Research and Development, partly to reward me for taking risk and displaying the merit to pull through successfully. However, like all good Communists, the FSF despises the entrepreneur and profit. Unfortunately, Communists forget that, without incentive, people will not work. Altruism to the computing community as a whole doesn't feed me or my fake kids.

People are greedy. People want things. That's why they work at jobs they hate. I personally want a few sports cars (thankfully I actually enjoy my job). I can't get that in a world of Free Software. I have a right to pursue my desires, and I think that right trumps the User's nosiness just a little bit. If you don't think so, don't try to convince me, because I don't care about you.

"But people making Free Software ''are'' being innovative. Look at The GIMP and Blender." No, you look at The GIMP and Blender. The GIMP is the single best example of a bunch of nerds making cool features, doing 90% of the work and getting bored with the last 10%, and not paying attention to user interface. And Blender, oh Blender! Blender started out as a commercial modelling package and FAILED. The GIMP and Blender are examples of what I like to call [zombieware].

!'''Freedom 2.) The freedom to redistribute copies so you can help your neighbor''' 
Barney taught sharing is caring! Yaaay. Screw Barney, he was retarded and his show was insulting to the intelligence of children everywhere. With this one point, you the developer completely lose any ability to make any money from your software. You can't realistically sell the software, because anyone could take the code and sell or give it away themselves. This already happens, look at XChat. Nobody actually pays for XChat for Windows, they just find the other version from the developers that were actually competent enough to port XChat from Linux to Windows properly.

"Oh, but you can sell support. Huzzah! Let's all be like Red Hat!" Yes, because Red Hat is taking the computing industry by storm. Red Hat can be successful specifically because their are so few Linux support groups of measurable quality in the world. You have a choice of paying Red Hat for support, or taking your chances with the Slashdot crowd who demonstrably don't know their heads from their asses. It's the law of supply and demand, folks. There is only a fixed demand for Linux support, and new suppliers in the market are only going to spread the pool thinner.

Also, because anyone has access to the source code, anyone can start their own support company for any software. Red Hat does this already. They didn't make Linux. They took the software, put parts of it together, shined the surface a little, then put it on the shelf with a warranty tag. These people are used car salesman. Hell, they are worse, because they do all of this over the phone. At least the car salesman has enough courage to screw you in person.

!'''Freedom 3.) The freedom to improve the program, and release your improvements to the public, so that the whole community benefits'''
Here is the nature of entrepreneurship: if you think you can do better than me, then you should have to take the same risks that I have had to take in the course of R&D. It's only fair that we all have the same advantages and disadvantages. If I put down the cash to start a McDonald's franchise, you do not have the right to waltz in and take over just because you think my management sucks. Open your own franchise and let the market decide who makes a better product. For all the derisive diatribes coming from the FSF camp on how corporatism, profit, and Capitalism in general are unfair to the populace, you would think they would understand that these Freedoms are fundamentally unfair to the risk takers.

At any rate, this last freedom is just another grasp at getting at your source code. With source code, they can do anything, but most importantly they can deny you compensation for your hard work. Don't let them.

!!Society's Squeamish Relationship with Capitalism
The really dishonest part of the GPL is that it puts up a smoke screen, "protecting user's rights," to hide its true nature, "stripping developer's rights." Where will we be if developers can't make money off of software? The demand for software is too high for hobbyists and open source developers to meet, and there isn't enough demand for support to cover the total cost.

Where I work, we sell software, one-off development contracts, support, and server space. We have developers who write code, a call center that handles the support, and an admin team that handles the server issues. Each of these profit centers funds itself, as is standard accounting practice. It is very bad business to have one of those profit centers, e.g. support, propping up another, e.g. development.

And this is why we do these things, for business, for profit. We don't run this company souly out of an altruistic desire to help our customers. Yes, helping customers is an excellent motivation, and we seek to do that to the best of our ability. But we do it for the end result, gettin' paid.

It bothers me greatly that people today don't seem to understand the concept that profit is good. Too often I see people get insulted when they learn someone else made a profit off of them. That is the entire *point*. They wouldn't have sold it to you if they weren't going to make a profit. Profit is their reward for taking the risk of aquiring the item in the hopes that someone like you would buy it.

I used to know a guy who was a really good programmer. He worked hard and got tasks done under budget and under time. But he never stayed with any one company for very long, because when he learned of the disparity between what he was getting paid for a piece of work and what the company was making off of that work, he would get pissed and leave. "I can't stand people making money off of me." He didn't understand the fundamental concept that he would have never been hired if the company didn't expect to make money off of him. And he never figured out that he was free to make his own company and keep his own profits.

This is the core of the Marxist ideology, that people should not be a source of profit for other people. If getting you to work for me isn't going to net me something more than I could do on my own, I'm sorry, it's too much bother to handle otherwise. If risk and hard work have no extra benefit over punching a time-clock, then I'd rather tune out and punch the time-clock, it's the rule of the path of least resistance. 
I just have more important things to do with my time.


!!So, how can you help fight the GPL?
First, avoid it completely. Don't use GPLed software (yes, that means Linux as a whole), don't release anything under the GPL, don't use anything that even smells of the GPL (like the LGPL, which is just the GPL in Sheep's Clothing). If you want to release your software but still maintain legal rights to the software, use a different license like BSD, or, gasp, consult a lawyer and write your own. If you're truly concerned about the advancement of the computing community as a whole, or you really don't care, release your software under Creative Commons. Once an article is released under Creative Commons, it stays in Creative Commons. That way, you will ensure the world will have unrestricted access to your code.

Second, save your pennies. This battle is going to hit the courts eventually, and the Resistance is going to need deep pockets to finally put these curs down like the mangy mutts they are.

Third, I've been considering a much more devious strategy: playing them at their own game. The GPL merely states that source code need be made available, it does not say how, nor even if it must be included directly with the binary distributions. It might, if one had the time, ambition, and disposable income to waste a lot of time and ambition, be worthwhile to download a bunch of GPL software, make some really great changes to it, and then dig one's heals in on giving those changes back to "The Community." Require users to request source code by mail (not email, I mean postal system). Require a nominal fee to cover shipping charges. Ground ship the source code on the most inconvenient format you can muster, be it tape drive, 3.5" HD Floppy, 5.25" Floppy, Zip Disk, or whatever. Better yet, send the source code as reams of paper printouts. Whatever you do, this is definitely the Guerrilla tactics in this ever growing battle.

Stay vigilant folks. We may survive this yet.


--------------------
05/18/07 10:49 / 64.8.50.160
--------------------
!!!The GPL and You
I'm organizing a resistance force against the Free Software Foundation, GNU, and Richard M. Stallman. I fear that we are not doing enough to stop them from destroying computing for eternity. I'm only one man, I can only bicker with just so many Torvoldians and Stallmaniacs per day.

If Richard Stallman had his way, I wouldn't have a job. The GPL is a virus that infects everything it encounters, and I'm not going to touch it with a 50' pole. The GPL is specifically designed as the Software License to further Stallman's agenda of destroying the industry of Software Development For Profit. He wants to replace a Developer's long established, legitimate, and defensible rights of property with some new, imagined set of User's rights to do whatever the hell they please, including underselling us on our own products.

This isn't a case of "the GPL isn't for everyone, so if you don't like it, just ignore it." I believe that, like any disease, one must take proactive, preventative, and destructive action against this pox upon the world. As more developers blindly release software under the GPL, unawares of its true implications, an ever growing library of GPL only software grows. Avoiding it will become more and more difficult.

Because of the viral nature of the GPL, an entire subset of the computing community must actively avoid anything that has to do with the GPL. Anyone interested in making software for profit should avoid the GPL, or they run the risk of completely invalidating any legal claim to their own work that they may have (assuming the GPL will hold up in court). Surely, this is contradictory to the stated goals of the FSF of the advancement of the computing community as a whole. In reality, it is not, because the FSF is composed of Communists, and they do not care about the Capitalist Pig-Dog Software Developers who sell software. To the FSF, there is no contradiction, because they do not see this large portion of the computing community as part of the community.

If you want to ensure your User's freedom, release your code under the BSD license. The BSD license is great, it literally lets you do whatever you want, while still maintaining control over your own project. Under the GPL, once you release your software, it's no longer yours. It becomes a ward of the FSF, like so many children whose childhoods were destroyed when they were forced into rigorous athletic and academic training by the Soviets and Red Chinese.

!!The GPL

Let's take a look at the four "Liberties" of "Free Software":

''Free software is a matter of the users' freedom to run, copy, distribute, study, change and improve the software. More precisely, it refers to four kinds of freedom, for the users of the software:
*The freedom to run the program, for any purpose (freedom 0). 
*The freedom to study how the program works, and adapt it to your needs (freedom 1). Access to the source code is a precondition for this. 
*The freedom to redistribute copies so you can help your neighbor (freedom 2). 
*The freedom to improve the program, and release your improvements to the public, so that the whole community benefits (freedom 3). Access to the source code is a precondition for this.''


!!Reviewing the "Freedoms"
Let's talk about them in turn

!'''Freedom 0.) The freedom to run the program, for any purpose'''
Freedom 0 asserts the user's right to run a program. This sounds reasonable, and I would agree, if the FSF and I agreed that the user should pay for the software first. Stallman would ideally like to see all software as free of charge, as any good Communist would. The fact that I charge for my software infringes on User's rights to run my software. Sorry, but it's my software. We all have rights, but my right to eat is more important than your ostensible right to run my software.

!'''Freedom 1.) The freedom to study how the program works, and adapt it to your needs.'''
This is economically infeasible, as it eliminates the incentive to innovate, i.e. massive profits, partly to recuperate my losses during Research and Development, partly to reward me for taking risk and displaying the merit to pull through successfully. However, like all good Communists, the FSF despises the entrepreneur and profit. Unfortunately, Communists forget that, without incentive, people will not work. Altruism to the computing community as a whole doesn't feed me or my fake kids.

People are greedy. People want things. That's why they work at jobs they hate. I personally want a few sports cars (thankfully I actually enjoy my job). I can't get that in a world of Free Software. I have a right to pursue my desires, and I think that right trumps the User's nosiness just a little bit. If you don't think so, don't try to convince me, because I don't care about you.

"But people making Free Software ''are'' being innovative. Look at The GIMP and Blender." No, you look at The GIMP and Blender. The GIMP is the single best example of a bunch of nerds making cool features, doing 90% of the work and getting bored with the last 10%, and not paying attention to user interface. And Blender, oh Blender! Blender started out as a commercial modelling package and FAILED. The GIMP and Blender are examples of what I like to call [zombieware].

!'''Freedom 2.) The freedom to redistribute copies so you can help your neighbor''' 
Barney taught sharing is caring! Yaaay. Screw Barney, he was retarded and his show was insulting to the intelligence of children everywhere. With this one point, you the developer completely lose any ability to make any money from your software. You can't realistically sell the software, because anyone could take the code and sell or give it away themselves. This already happens, look at XChat. Nobody actually pays for XChat for Windows, they just find the other version from the developers that were actually competent enough to port XChat from Linux to Windows properly.

"Oh, but you can sell support. Huzzah! Let's all be like Red Hat!" Yes, because Red Hat is taking the computing industry by storm. Red Hat can be successful specifically because their are so few Linux support groups of measurable quality in the world. You have a choice of paying Red Hat for support, or taking your chances with the Slashdot crowd who demonstrably don't know their heads from their asses. It's the law of supply and demand, folks. There is only a fixed demand for Linux support, and new suppliers in the market are only going to spread the pool thinner.

Also, because anyone has access to the source code, anyone can start their own support company for any software. Red Hat does this already. They didn't make Linux. They took the software, put parts of it together, shined the surface a little, then put it on the shelf with a warranty tag. These people are used car salesman. Hell, they are worse, because they do all of this over the phone. At least the car salesman has enough courage to screw you in person.

!'''Freedom 3.) The freedom to improve the program, and release your improvements to the public, so that the whole community benefits'''
Here is the nature of entrepreneurship: if you think you can do better than me, then you should have to take the same risks that I have had to take in the course of R&D. It's only fair that we all have the same advantages and disadvantages. If I put down the cash to start a McDonald's franchise, you do not have the right to waltz in and take over just because you think my management sucks. Open your own franchise and let the market decide who makes a better product. For all the derisive diatribes coming from the FSF camp on how corporatism, profit, and Capitalism in general are unfair to the populace, you would think they would understand that these Freedoms are fundamentally unfair to the risk takers.

At any rate, this last freedom is just another grasp at getting at your source code. With source code, they can do anything, but most importantly they can deny you compensation for your hard work. Don't let them.

!!Society's Squeamish Relationship with Capitalism
The really dishonest part of the GPL is that it puts up a smoke screen, "protecting user's rights," to hide its true nature, "stripping developer's rights." Where will we be if developers can't make money off of software? The demand for software is too high for hobbyists and open source developers to meet, and there isn't enough demand for support to cover the total cost.

Where I work, we sell software, one-off development contracts, support, and server space. We have developers who write code, a call center that handles the support, and an admin team that handles the server issues. Each of these profit centers funds itself, as is standard accounting practice. It is very bad business to have one of those profit centers, e.g. support, propping up another, e.g. development.

And this is why we do these things, for business, for profit. We don't run this company souly out of an altruistic desire to help our customers. Yes, helping customers is an excellent motivation, and we seek to do that to the best of our ability. But we do it for the end result, gettin' paid.

It bothers me greatly that people today don't seem to understand the concept that profit is good. Too often I see people get insulted when they learn someone else made a profit off of them. That is the entire *point*. They wouldn't have sold it to you if they weren't going to make a profit. Profit is their reward for taking the risk of aquiring the item in the hopes that someone like you would buy it.

I used to know a guy who was a really good programmer. He worked hard and got tasks done under budget and under time. But he never stayed with any one company for very long, because when he learned of the disparity between what he was getting paid for a piece of work and what the company was making off of that work, he would get pissed and leave. "I can't stand people making money off of me." He didn't understand the fundamental concept that he would have never been hired if the company didn't expect to make money off of him. And he never figured out that he was free to make his own company and keep his own profits.

This is the core of the Marxist ideology, that people should not be a source of profit for other people. If getting you to work for me isn't going to net me something more than I could do on my own, I'm sorry, it's too much bother to handle otherwise. If risk and hard work have no extra benefit over punching a time-clock, then I'd rather tune out and punch the time-clock, it's the rule of the path of least resistance. 
I just have more important things to do with my time.


!!So, how can you help fight the GPL?
First, avoid it completely. Don't use GPLed software (yes, that means Linux as a whole), don't release anything under the GPL, don't use anything that even smells of the GPL (like the LGPL, which is just the GPL in Sheep's Clothing). If you want to release your software but still maintain legal rights to the software, use a different license like BSD, or, gasp, consult a lawyer and write your own. If you're truly concerned about the advancement of the computing community as a whole, or you really don't care, release your software under Creative Commons. Once an article is released under Creative Commons, it stays in Creative Commons. That way, you will ensure the world will have unrestricted access to your code.

Second, save your pennies. This battle is going to hit the courts eventually, and the Resistance is going to need deep pockets to finally put these curs down like the mangy mutts they are.

Third, I've been considering a much more devious strategy: playing them at their own game. The GPL merely states that source code need be made available, it does not say how, nor even if it must be included directly with the binary distributions. It might, if one had the time, ambition, and disposable income to waste a lot of time and ambition, be worthwhile to download a bunch of GPL software, make some really great changes to it, and then dig one's heals in on giving those changes back to "The Community." Require users to request source code by mail (not email, I mean postal system). Require a nominal fee to cover shipping charges. Ground ship the source code on the most inconvenient format you can muster, be it tape drive, 3.5" HD Floppy, 5.25" Floppy, Zip Disk, or whatever. Better yet, send the source code as reams of paper printouts. Whatever you do, this is definitely the Guerrilla tactics in this ever growing battle.

Stay vigilant folks. We may survive this yet.