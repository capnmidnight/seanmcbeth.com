{
  "version": 3,
  "sources": ["../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/tslib/src/typeChecks.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/collections/src/arrays.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/collections/src/PriorityList.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/collections/src/BaseGraphNode.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/tslib/src/identity.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/collections/src/mapMap.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/collections/src/makeLookup.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/collections/src/TreeNode.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/events/src/EventTarget.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/events/src/Task.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/mediatypes/src/util.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/mediatypes/src/image.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/dom/src/attrs.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/dom/src/css.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/dom/src/tags.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/events/src/TypedEventTarget.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/fetcher/src/assertSuccess.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/fetcher/src/unwrapResponse.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/progress/src/BaseProgress.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/progress/src/ChildProgressCallback.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/progress/src/BaseParentProgressCallback.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/progress/src/progressSplit.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/progress/src/progressOfArray.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/progress/src/progressTasks.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/tslib/src/using.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/dom/src/canvas.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/tslib/src/math.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/graphics2d/src/animation/tween.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/tslib/src/singleton.ts", "global-externals:three", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/typeChecks.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/objects.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/animation/scaleOnHover.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/cleanup.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/environment/Application.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/dom/src/fonts.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/fetcher/src/Asset.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/graphics2d/src/animation/Animator.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/tslib/src/images.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/tslib/src/units/length.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/Plane.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/getRelativeXRRigidTransform.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/examples/lines/LineMaterial.js", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/materials.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/widgets/Image2D.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/graphics2d/src/CanvasImage.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/graphics2d/src/TextImage.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/widgets/CanvasImageMesh.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/widgets/TextMesh.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/eventSystem/RayTarget.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/menu/MenuItem.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/menu/Menu.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/widgets/widgets.ts", "../../../../../../Juniper/src/Juniper.TypeScript/@juniper-lib/threejs/src/widgets/ButtonImageWidget.ts", "../../../../src/vr-apps/menu/MainMenu.ts", "../../../../src/vr-apps/menu/index.ts"],
  "sourcesContent": ["function t(o: any, s: string, c: Function) {\r\n    return typeof o === s\r\n        || o instanceof c;\r\n}\r\n\r\nexport function isFunction(obj: any): obj is Function {\r\n    return t(obj, \"function\", Function);\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n    return t(obj, \"string\", String);\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n    return t(obj, \"boolean\", Boolean);\r\n}\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n    return t(obj, \"number\", Number);\r\n}\r\n\r\n/**\r\n * Check a value to see if it is of a number type\r\n * and is the special NaN value or one of the Infinities.\r\n */\r\nexport function isBadNumber(num: number): boolean {\r\n    return isNullOrUndefined(num)\r\n        || !Number.isFinite(num)\r\n        || Number.isNaN(num);\r\n}\r\n\r\n/**\r\n * Check a value to see if it is of a number type\r\n * and is not the special NaN value nor one of the Infinities.\r\n */\r\nexport function isGoodNumber(obj: any): obj is number {\r\n    return isNumber(obj)\r\n        && !isBadNumber(obj);\r\n}\r\n\r\nexport function isObject(obj: any): obj is object {\r\n    return isDefined(obj)\r\n        && t(obj, \"object\", Object);\r\n}\r\n\r\nexport function isPromise<T>(obj: any): obj is Promise<T> {\r\n    return obj instanceof Promise;\r\n}\r\n\r\nexport function isDate(obj: any): obj is Date {\r\n    return obj instanceof Date;\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n    return obj instanceof Array;\r\n}\r\n\r\nexport function assertNever(x: never, msg?: string): never {\r\n    throw new Error((msg || \"Unexpected object: \") + x);\r\n}\r\n\r\nexport function isNullOrUndefined<T>(obj: T | null | undefined): obj is null | undefined {\r\n    return obj === null\r\n        || obj === undefined;\r\n}\r\n\r\nexport function isDefined<T>(obj: T | null | undefined): obj is T {\r\n    return !isNullOrUndefined(obj);\r\n}\r\n\r\nexport function isEventListener(obj: EventListenerOrEventListenerObject): obj is EventListener {\r\n    return isFunction(obj);\r\n}\r\n\r\nexport function isEventListenerObject(obj: EventListenerOrEventListenerObject): obj is EventListenerObject {\r\n    return !isEventListener(obj);\r\n}\r\n\r\nexport function isArrayBufferView(obj: any): obj is ArrayBufferView {\r\n    return obj instanceof Uint8Array\r\n        || obj instanceof Uint8ClampedArray\r\n        || obj instanceof Int8Array\r\n        || obj instanceof Uint16Array\r\n        || obj instanceof Int16Array\r\n        || obj instanceof Uint32Array\r\n        || obj instanceof Int32Array\r\n        || obj instanceof Float32Array\r\n        || obj instanceof Float64Array\r\n        || \"BigUint64Array\" in globalThis && obj instanceof globalThis[\"BigUint64Array\"]\r\n        || \"BigInt64Array\" in globalThis && obj instanceof globalThis[\"BigInt64Array\"];\r\n}\r\n\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}", "import { isDefined, isFunction, isNullOrUndefined, isNumber, isObject, isString } from \"@juniper-lib/tslib/dist/typeChecks\";\r\n\r\ninterface IComparable<T> {\r\n    compareTo(b: T): number;\r\n}\r\n\r\nfunction isIComparable<T>(obj: any): obj is IComparable<T> {\r\n    return isObject(obj)\r\n        && \"compareTo\" in obj\r\n        && isFunction(obj.compareTo);\r\n}\r\n\r\nexport type Comparable = number | Date | string | IComparable<any>;\r\nexport type CompareDirection = \"ascending\" | \"descending\";\r\nexport type CompareFunction<T> = ((a: T, b: T) => number) & {\r\n    direction: CompareDirection;\r\n}\r\n\r\nexport type ComparableSelector<T> = (obj: T) => Comparable;\r\n\r\nexport function compareBy<T>(direction: CompareDirection, ...getKeys: ComparableSelector<T>[]): CompareFunction<T>;\r\nexport function compareBy<T>(...getKeys: ComparableSelector<T>[]): CompareFunction<T>;\r\nexport function compareBy<T>(directionOrFirstKeyGetter: CompareDirection | ComparableSelector<T>, ...getKeys: ((obj: T) => Comparable)[]): CompareFunction<T> {\r\n    let direction: CompareDirection = null;\r\n    if (isString(directionOrFirstKeyGetter)) {\r\n        direction = directionOrFirstKeyGetter;\r\n    }\r\n    else {\r\n        direction = \"ascending\";\r\n        getKeys.unshift(directionOrFirstKeyGetter);\r\n    }\r\n\r\n    const d = direction === \"ascending\" ? 1 : -1;\r\n\r\n    const comparer = (a: T, b: T) => {\r\n        if (a === b) {\r\n            return 0;\r\n        }\r\n\r\n        for (const getKey of getKeys) {\r\n            const keyA = isNullOrUndefined(a) ? null : getKey(a);\r\n            const keyB = isNullOrUndefined(b) ? null : getKey(b);\r\n            const relation = keyA === keyB\r\n                ? 0\r\n                : isString(keyA) && isString(keyB)\r\n                    ? d * keyA.localeCompare(keyB)\r\n                    : isIComparable(keyA) && isIComparable(keyB)\r\n                        ? d * keyA.compareTo(keyB)\r\n                        : direction === \"ascending\" && keyA > keyB\r\n                            || direction === \"descending\" && keyA < keyB\r\n                            ? 1 : -1;\r\n\r\n            if (relation !== 0) {\r\n                return relation;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    return Object.assign(comparer, {\r\n        direction\r\n    });\r\n}\r\n\r\nexport type SearchMode = \"append\" | \"prepend\" | \"search\";\r\n\r\nexport function binarySearch<T>(arr: ArrayLike<T>, searchValue: T, comparer: CompareFunction<T>, mode: SearchMode = \"search\") {\r\n    let left = 0;\r\n    let right = arr.length - 1;\r\n    while (left <= right) {\r\n        let mid = (left + right) >> 1;\r\n        let relation = comparer(arr[mid], searchValue);\r\n        if (relation === 0) {\r\n            if (mode !== \"search\") {\r\n                const scanDirection = mode === \"append\" ? 1 : -1;\r\n                if (scanDirection > 0) {\r\n                    mid += scanDirection;\r\n                }\r\n                while (0 <= mid\r\n                    && mid < arr.length\r\n                    && (relation = comparer(arr[mid], searchValue)) === 0) {\r\n                    mid += scanDirection;\r\n                }\r\n                if (scanDirection < 0) {\r\n                    mid -= scanDirection;\r\n                }\r\n            }\r\n\r\n            return mid;\r\n        }\r\n        else if (relation < 0) {\r\n            left = mid - relation;\r\n        }\r\n        else {\r\n            right = mid - relation;\r\n        }\r\n    }\r\n\r\n    return -left - 1;\r\n}\r\n\r\nexport type InsertMode = \"set\" | SearchMode;\r\n\r\nexport function insertSorted<T>(arr: T[], val: T, idx: number): number;\r\nexport function insertSorted<T>(arr: T[], val: T, comparer: CompareFunction<T>): number;\r\nexport function insertSorted<T>(arr: T[], val: T, comparer: CompareFunction<T>, mode: InsertMode): number;\r\nexport function insertSorted<T>(arr: T[], val: T, comparerOrIdx: CompareFunction<T> | number, mode: InsertMode = \"search\"): number {\r\n    const allowDuplicates = mode !== \"set\";\r\n    if (mode === \"set\") {\r\n        mode = \"search\";\r\n    }\r\n\r\n    let idx: number = null;\r\n    if (isNumber(comparerOrIdx)) {\r\n        idx = comparerOrIdx;\r\n    }\r\n    else {\r\n        idx = binarySearch(arr, val, comparerOrIdx, mode);\r\n    }\r\n\r\n    if (idx < 0) {\r\n        idx = -idx - 1;\r\n    }\r\n    else if (!allowDuplicates) {\r\n        return -1;\r\n    }\r\n\r\n    arrayInsertAt(arr, val, idx);\r\n    return idx;\r\n}\r\n\r\nexport function removeSorted<T>(arr: T[], val: T, comparer: CompareFunction<T>): number {\r\n    const idx = binarySearch(arr, val, comparer);\r\n    if (idx >= 0) {\r\n        arrayRemoveAt(arr, idx);\r\n        return idx;\r\n    }\r\n    return -1;\r\n}\r\n\r\n\r\n/**\r\n * Empties out an array, returning the items that were in the array.\r\n * \r\n * @param arr the array to empty\r\n */\r\nexport function arrayClear<T>(arr: T[]) {\r\n    return arr.splice(0);\r\n}\r\n\r\n/**\r\n * Checks to see if two arrays contain the same elements\r\n * @returns -1 if the arrays match, the index of the first mismatched item if they don't.\r\n * @param arr1\r\n * @param arr2\r\n */\r\n\r\nexport function arrayCompare<T>(arr1: ReadonlyArray<T>, arr2: ReadonlyArray<T>): number {\r\n    for (let i = 0; i < arr1.length; ++i) {\r\n        if (arr1[i] !== arr2[i]) {\r\n            return i;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\n\r\nexport function arrayGen<T>(count: number, thunk: (i: number) => T): T[] {\r\n    return Array.from(iterableGen(count, thunk));\r\n}\r\n\r\nexport function* iterableGen<T>(count: number, thunk: (i: number) => T) {\r\n    for (let i = 0; i < count; ++i) {\r\n        yield thunk(i);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Inserts an item at the given index into an array.\r\n * @param arr\r\n * @param item\r\n * @param idx\r\n */\r\n\r\nexport function arrayInsertAt<T>(arr: T[], item: T, idx: number) {\r\n    arr.splice(idx, 0, item);\r\n}\r\n\r\n/**\r\n * Returns a random item from an array of items.\r\n *\r\n * Provides an option to consider an additional item as part of the collection\r\n * for random selection.\r\n */\r\nexport function arrayRandom<T>(arr: T[], defaultValue?: T): T | undefined {\r\n    const offset = defaultValue != null ? 1 : 0,\r\n        idx = Math.floor(Math.random() * (arr.length + offset)) - offset;\r\n    if (idx < 0) {\r\n        return defaultValue;\r\n    }\r\n    else {\r\n        return arr[idx];\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Removes a given item from an array, returning true if the item was removed.\r\n */\r\nexport function arrayRemove<T>(arr: T[], value: T) {\r\n    const idx = arr.indexOf(value);\r\n    if (idx > -1) {\r\n        arrayRemoveAt(arr, idx);\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function arrayFilter<T>(arr: T[], predicate: (v: T) => boolean): T | null {\r\n    for (let i = arr.length - 1; i >= 0; --i) {\r\n        if (predicate(arr[i])) {\r\n            return arrayRemoveAt(arr, i);\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function arrayRemoveByKey<T, K>(arr: T[], key: K, getKey: (v: T) => K): T | null {\r\n    return arrayFilter(arr, (v) => getKey(v) === key);\r\n}\r\n\r\n/**\r\n * Removes an item at the given index from an array.\r\n */\r\nexport function arrayRemoveAt<T>(arr: T[], idx: number) {\r\n    return arr.splice(idx, 1)[0];\r\n}\r\n\r\n/**\r\n * Replaces all of the items in an array with the given items.\r\n *\r\n * This helps reduce GC pressure as you're not creating arrays\r\n * and then dropping them on the floor.\r\n * \r\n * @param arr the array to fill\r\n * @param items the items to put into the array\r\n */\r\nexport function arrayReplace<T>(arr: T[], ...items: T[]) {\r\n    arr.splice(0, arr.length, ...items);\r\n}\r\n\r\nexport function arrayCreate<T>(count: number, make: (i: number, len?: number) => T): T[] {\r\n    const arr = new Array<T>(count);\r\n    for (let i = 0; i < count; ++i) {\r\n        arr[i] = make(i, count);\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\nfunction _arrayScan<T>(forward: boolean, arr: readonly T[], tests: ((val: T) => boolean)[]): T {\r\n    const start = forward ? 0 : arr.length - 1;\r\n    const end = forward ? arr.length : -1;\r\n    const inc = forward ? 1 : -1;\r\n    for (const test of tests) {\r\n        for (let i = start; i != end; i += inc) {\r\n            const item = arr[i];\r\n            if (test(item)) {\r\n                return item;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Scans through a series of filters to find an item that matches\r\n * any of the filters. The first item of the first filter that matches\r\n * will be returned.\r\n */\r\nexport function arrayScan<T, S extends T>(arr: readonly T[], ...tests: ((val: T) => val is S)[]): S;\r\nexport function arrayScan<T>(arr: readonly T[], ...tests: ((val: T) => boolean)[]): T\r\nexport function arrayScan<T>(arr: readonly T[], ...tests: ((val: T) => boolean)[]): T {\r\n    return _arrayScan(true, arr, tests);\r\n}\r\n\r\n/**\r\n * Scans through a series of filters to find an item that matches\r\n * any of the filters. The last item of the first filter that matches\r\n * will be returned.\r\n */\r\nexport function arrayScanReverse<T, S extends T>(arr: readonly T[], ...tests: ((val: T) => val is S)[]): S;\r\nexport function arrayScanReverse<T>(arr: readonly T[], ...tests: ((val: T) => boolean)[]): T;\r\nexport function arrayScanReverse<T>(arr: readonly T[], ...tests: ((val: T) => boolean)[]): T {\r\n    return _arrayScan(false, arr, tests);\r\n}\r\n\r\nexport function arrayShuffleInplace<T>(arr: T[]): void {\r\n    for (let i = 0; i < arr.length - 1; ++i) {\r\n        const subLength = arr.length - i;\r\n        const subIndex = Math.floor(Math.random() * subLength);\r\n        const temp = arr[i];\r\n        const j = subIndex + i;\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n}\r\n\r\nexport function arrayShuffle<T>(arr: readonly T[]): T[] {\r\n    const output = arr.slice();\r\n    arrayShuffleInplace(output);\r\n    return output;\r\n}\r\n\r\nconst numericPattern = /^(-?(?:\\d+\\.)\\d+)/;\r\n/**\r\n * Creates a new array that is sorted by the key extracted\r\n * by the keySelector callback, not modifying the input array,\r\n * (unlike JavaScript's own Array.prototype.sort).\r\n *\r\n * If the values have a number at the beginning, they'll be sorted\r\n * by that number.\r\n * @param arr\r\n * @param keySelector\r\n */\r\nexport function arraySortNumericByKey<T>(arr: ReadonlyArray<T>, keySelector: (obj: T) => string): T[] {\r\n    const comparer = compareBy<T>(v => {\r\n        const key = keySelector(v);\r\n        const match = key.match(numericPattern);\r\n        if (isDefined(match)) {\r\n            return parseFloat(match[1]);\r\n        }\r\n        return key;\r\n    });\r\n\r\n    return Array\r\n        .from(arr)\r\n        .sort(comparer);\r\n}\r\n\r\nexport function arrayZip<T, V>(arr1: readonly T[], arr2: readonly T[], combine: (a: T, b: T) => V): V[] {\r\n    const len = Math.max(arr1.length, arr2.length);\r\n    const output = new Array<V>(len);\r\n    for (let i = 0; i < len; ++i) {\r\n        output[i] = combine(arr1[i], arr2[i]);\r\n    }\r\n\r\n    return output;\r\n}\r\n", "import { isDefined, isNullOrUndefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { arrayClear, arrayRemove } from \"./arrays\";\r\n\r\nexport class PriorityList<KeyT, ValueT> {\r\n    private readonly items = new Map<KeyT, ValueT[]>();\r\n    private readonly defaultItems = new Array<ValueT>();\r\n\r\n    constructor(init?: [KeyT, ValueT][]) {\r\n        if (isDefined(init)) {\r\n            for (const [key, value] of init) {\r\n                this.add(key, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    add(key: KeyT, ...values: ValueT[]): this {\r\n        for (const value of values) {\r\n            if (isNullOrUndefined(key)) {\r\n                this.defaultItems.push(value);\r\n            }\r\n            else {\r\n                let list = this.items.get(key);\r\n                if (isNullOrUndefined(list)) {\r\n                    this.items.set(key, list = []);\r\n                }\r\n\r\n                list.push(value);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    entries(): IterableIterator<[KeyT, ValueT[]]> {\r\n        return this.items.entries();\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return this.entries();\r\n    }\r\n\r\n    keys(): IterableIterator<KeyT> {\r\n        return this.items.keys();\r\n    }\r\n\r\n    *values(): IterableIterator<ValueT> {\r\n        for (const item of this.defaultItems) {\r\n            yield item;\r\n        }\r\n        for (const list of this.items.values()) {\r\n            for (const item of list) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n\r\n    has(key: KeyT): boolean {\r\n        if (isDefined(key)) {\r\n            return this.items.has(key);\r\n        }\r\n        else {\r\n            return this.defaultItems.length > 0;\r\n        }\r\n    }\r\n\r\n    get(key: KeyT): ValueT[] {\r\n        if (isNullOrUndefined(key)) {\r\n            return this.defaultItems;\r\n        }\r\n\r\n        return this.items.get(key) || [];\r\n    }\r\n\r\n    count(key: KeyT): number {\r\n        if (isNullOrUndefined(key)) {\r\n            return this.defaultItems.length;\r\n        }\r\n\r\n        const list = this.get(key);\r\n        if (isDefined(list)) {\r\n            return list.length;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get size(): number {\r\n        let size = this.defaultItems.length;\r\n        for (const list of this.items.values()) {\r\n            size += list.length;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    delete(key: KeyT) {\r\n        if (isNullOrUndefined(key)) {\r\n            return arrayClear(this.defaultItems).length > 0;\r\n        }\r\n        else {\r\n            return this.items.delete(key);\r\n        }\r\n    }\r\n\r\n    remove(key: KeyT, value: ValueT) {\r\n        if (isNullOrUndefined(key)) {\r\n            arrayRemove(this.defaultItems, value);\r\n        }\r\n        else {\r\n            const list = this.items.get(key);\r\n            if (isDefined(list)) {\r\n                arrayRemove(list, value);\r\n                if (list.length === 0) {\r\n                    this.items.delete(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.items.clear();\r\n        arrayClear(this.defaultItems);\r\n    }\r\n}\r\n\r\n\r\n", "import { isDefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { Comparable, arrayInsertAt, arrayRemove, compareBy, insertSorted } from \"./arrays\";\r\n\r\nfunction breadthFirstPeek<ValueT>(arr: ValueT[]) {\r\n    return arr[0];\r\n}\r\nfunction breadthFirstRemove<ValueT>(arr: ValueT[]) {\r\n    return arr.shift();\r\n}\r\n\r\nfunction depthFirstPeek<ValueT>(arr: ValueT[]) {\r\n    return arr[arr.length - 1];\r\n}\r\n\r\nfunction depthFirstRemove<ValueT>(arr: ValueT[]) {\r\n    return arr.pop();\r\n}\r\n\r\nexport abstract class BaseGraphNode<ValueT> {\r\n\r\n    protected readonly _forward = new Array<this>();\r\n    protected readonly _reverse = new Array<this>();\r\n\r\n    constructor(public readonly value: ValueT) {\r\n    }\r\n\r\n    connectSorted<KeyT extends Comparable>(child: this, keySelector: (value: ValueT) => KeyT): void {\r\n        if (isDefined(keySelector)) {\r\n            const comparer = compareBy<this>((n) => keySelector(n.value));\r\n            insertSorted(this._forward, child, comparer);\r\n            insertSorted(child._reverse, this, comparer);\r\n        }\r\n        else {\r\n            this.connectTo(child);\r\n        }\r\n    }\r\n\r\n    connectTo(child: this) {\r\n        this.connectAt(child, this._forward.length);\r\n    }\r\n\r\n    connectAt(child: this, index: number) {\r\n        arrayInsertAt(this._forward, child, index);\r\n        child._reverse.push(this);\r\n    }\r\n\r\n    disconnectFrom(child: this) {\r\n        arrayRemove(this._forward, child);\r\n        arrayRemove(child._reverse, this);\r\n    }\r\n\r\n    isConnectedTo(node: this): boolean {\r\n        return this._forward.indexOf(node) >= 0\r\n            || this._reverse.indexOf(node) >= 0;\r\n    }\r\n\r\n    flatten(): this[] {\r\n        const visited = new Set<this>();\r\n        const queue: this[] = [this];\r\n        while (queue.length > 0) {\r\n            const here = queue.shift();\r\n            if (isDefined(here) && !visited.has(here)) {\r\n                visited.add(here);\r\n                queue.push(...here._forward);\r\n            }\r\n        }\r\n\r\n        return Array.from(visited);\r\n    }\r\n\r\n    *traverse(breadthFirst: boolean): Iterable<this> {\r\n        const visited = new Set<this>();\r\n        const queue = [this];\r\n        const peek = breadthFirst\r\n            ? breadthFirstPeek\r\n            : depthFirstPeek;\r\n        const remove = breadthFirst\r\n            ? breadthFirstRemove\r\n            : depthFirstRemove;\r\n\r\n        while (queue.length > 0) {\r\n            const here = peek(queue);\r\n            if (!visited.has(here)) {\r\n                visited.add(here);\r\n\r\n                if (breadthFirst) {\r\n                    remove(queue);\r\n                    yield here;\r\n                }\r\n\r\n                if (here._forward.length > 0) {\r\n                    queue.push(...here._forward);\r\n                }\r\n            }\r\n            else if (!breadthFirst) {\r\n                remove(queue);\r\n                yield here;\r\n            }\r\n        }\r\n    }\r\n\r\n    breadthFirst(): Iterable<this> {\r\n        return this.traverse(true);\r\n    }\r\n\r\n    depthFirst(): Iterable<this> {\r\n        return this.traverse(false);\r\n    }\r\n\r\n    search(predicate: (n: this) => boolean, breadthFirst = true): this {\r\n        for (const node of this.traverse(breadthFirst)) {\r\n            if (predicate(node)) {\r\n                return node;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    *searchAll(predicate: (n: this) => boolean, breadthFirst = true): Iterable<this> {\r\n        for (const node of this.traverse(breadthFirst)) {\r\n            if (predicate(node)) {\r\n                yield node;\r\n            }\r\n        }\r\n    }\r\n\r\n    find(v: ValueT, breadthFirst = true): this {\r\n        return this.search((n) => n.value === v, breadthFirst);\r\n    }\r\n\r\n    findAll(v: ValueT, breadthFirst = true): Iterable<this> {\r\n        return this.searchAll((n) => n.value === v, breadthFirst);\r\n    }\r\n\r\n    contains(node: this, breadthFirst = true): boolean {\r\n        for (const child of this.traverse(breadthFirst)) {\r\n            if (child === node) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    containsValue(v: ValueT, breadthFirst = true): boolean {\r\n        for (const child of this.traverse(breadthFirst)) {\r\n            if (child.value === v) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected get _isEntryPoint() {\r\n        return this._reverse.length === 0;\r\n    }\r\n\r\n    protected get _isExitPoint() {\r\n        return this._forward.length === 0;\r\n    }\r\n\r\n    get isDisconnected() {\r\n        return this._isEntryPoint\r\n            && this._isExitPoint;\r\n    }\r\n\r\n    get isConnected() {\r\n        return !this._isExitPoint\r\n            || !this._isEntryPoint;\r\n    }\r\n\r\n    get isTerminus() {\r\n        return this._isEntryPoint\r\n            || this._isExitPoint;\r\n    }\r\n\r\n    get isInternal() {\r\n        return !this._isEntryPoint\r\n            && !this._isExitPoint;\r\n    }\r\n}", "export function identity<T>(item: T): T {\r\n    return item;\r\n}\r\n\r\nexport function nothing(): void {\r\n}\r\n\r\nexport function negate(value: number) {\r\n    return -value;\r\n}\r\n\r\nexport function alwaysTrue(): true {\r\n    return true;\r\n}\r\n\r\nexport function alwaysFalse(): false {\r\n    return false;\r\n}\r\n\r\nexport function not(value: boolean) {\r\n    return !value;\r\n}\r\n\r\nexport function and(a: boolean, b: boolean): boolean {\r\n    return a && b;\r\n}\r\n\r\nexport function or(a: boolean, b: boolean): boolean {\r\n    return a || b;\r\n}\r\n\r\nexport function xor(a: boolean, b: boolean): boolean {\r\n    return a !== b;\r\n}\r\n\r\nexport function nand(a: boolean, b: boolean): boolean {\r\n    return not(and(a, b));\r\n}\r\n\r\nexport function nor(a: boolean, b: boolean): boolean {\r\n    return not(or(a, b));\r\n}\r\n\r\nexport function equal<T>(a: T, b: T): boolean {\r\n    return a === b;\r\n}\r\n\r\nexport function reflectValue<T>(v: T): () => T {\r\n    return () => v;\r\n}\r\n\r\nexport type AsyncCallback = () => Promise<void>;", "export function mapMap<T, U, V>(items: readonly T[], makeID: (item: T) => U, makeValue: (item: T) => V) {\r\n    return new Map(items.map((item) => [makeID(item), makeValue(item)]));\r\n}", "import { identity } from \"@juniper-lib/tslib/dist/identity\";\r\nimport { mapMap } from \"./mapMap\";\r\n\r\nexport function makeLookup<T, U>(items: readonly T[], makeID: (item: T) => U): Map<U, T> {\r\n    return mapMap(items, makeID, identity);\r\n}", "import { isDefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { BaseGraphNode } from \"./BaseGraphNode\";\r\nimport { Comparable } from \"./arrays\";\r\nimport { makeLookup } from \"./makeLookup\";\r\n\r\nexport function buildTree<V>(\r\n    items: readonly V[],\r\n    getParent: (v: V) => V,\r\n    _getOrder?: (v: V) => number): TreeNode<V> {\r\n    const getOrder = (v: V) => isDefined(v)\r\n        && isDefined(_getOrder)\r\n        && _getOrder(v);\r\n\r\n    const rootNode = new TreeNode(null);\r\n    const nodes = new Map<V, TreeNode<V>>();\r\n\r\n    for (const item of items) {\r\n        const node = new TreeNode(item);\r\n        nodes.set(item, node);\r\n    }\r\n\r\n    for (const node of nodes.values()) {\r\n        const parent = getParent(node.value);\r\n        const hasParentNode = parent != null && nodes.has(parent);\r\n        const parentNode = hasParentNode\r\n            ? nodes.get(parent)\r\n            : rootNode;\r\n\r\n        parentNode.connectSorted(node, getOrder);\r\n    }\r\n\r\n    return rootNode;\r\n}\r\n\r\nexport function buildTreeByID<V, K>(\r\n    items: readonly V[],\r\n    getItemID: (v: V) => K,\r\n    getParentID: (v: V) => K,\r\n    getOrder?: (v: V) => number): TreeNode<V> {\r\n    const map = makeLookup(items, getItemID);\r\n    return buildTree(items, v => map.get(getParentID(v)), getOrder);\r\n}\r\n\r\n/**\r\n * A TreeNode is a GraphNode that can have only one parent.\r\n **/\r\nexport class TreeNode<ValueT> extends BaseGraphNode<ValueT> {\r\n\r\n    get depth() {\r\n        let counter = 0;\r\n        let here = this.parent;\r\n\r\n        while (isDefined(here)) {\r\n            ++counter;\r\n            here = here.parent;\r\n        }\r\n\r\n        return counter;\r\n    }\r\n\r\n    removeFromParent() {\r\n        while (this.parent) {\r\n            this.parent.disconnectFrom(this);\r\n        }\r\n    }\r\n\r\n    override connectTo(child: this): void {\r\n        child.removeFromParent();\r\n        super.connectTo(child);\r\n    }\r\n\r\n    override connectAt(child: this, index: number): void {\r\n        child.removeFromParent();\r\n        super.connectAt(child, index);\r\n    }\r\n\r\n    override connectSorted<KeyT extends Comparable>(child: this, sortKey: (value: ValueT) => KeyT): void {\r\n        child.removeFromParent();\r\n        super.connectSorted(child, sortKey);\r\n    }\r\n\r\n    get parent(): this {\r\n        if (this._reverse.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return this._reverse[0] as this;\r\n    }\r\n\r\n    get children(): this[] {\r\n        return this._forward;\r\n    }\r\n\r\n    get isRoot() {\r\n        return this._isEntryPoint;\r\n    }\r\n\r\n    get isChild() {\r\n        return !this._isEntryPoint;\r\n    }\r\n\r\n    get isLeaf() {\r\n        return this._isExitPoint;\r\n    }\r\n\r\n    get hasChildren() {\r\n        return !this._isExitPoint;\r\n    }\r\n}", "\uFEFFimport { arrayClear, arrayRemoveAt } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { isBoolean, isDefined, isFunction, isNullOrUndefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\n\r\nexport interface EventMap {\r\n    [type: string]: Event;\r\n}\r\n\r\nexport interface IEventTarget extends EventTarget {\r\n    clearEventListeners(type?: string): void;\r\n    addBubbler(bubbler: EventTarget): void;\r\n    removeBubbler(bubbler: EventTarget): void;\r\n    addScopedEventListener(scope: object, type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\r\n    removeScope(scope: object): void;\r\n}\r\n\r\nexport class CustomEventTarget implements IEventTarget {\r\n    private readonly listeners = new Map<string, EventListenerOrEventListenerObject[]>();\r\n    private readonly listenerOptions = new Map<EventListenerOrEventListenerObject, boolean | AddEventListenerOptions>();\r\n    private readonly bubblers = new Set<EventTarget>();\r\n    private readonly scopes = new WeakMap<object, Array<[any, any]>>();\r\n\r\n    addBubbler(bubbler: EventTarget) {\r\n        this.bubblers.add(bubbler);\r\n    }\r\n\r\n    removeBubbler(bubbler: EventTarget) {\r\n        this.bubblers.delete(bubbler);\r\n    }\r\n\r\n    addScopedEventListener(scope: object, type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        if (!this.scopes.has(scope)) {\r\n            this.scopes.set(scope, []);\r\n        }\r\n        this.scopes.get(scope).push([type, callback]);\r\n        this.addEventListener(type, callback as any, options);\r\n    }\r\n\r\n    removeScope(scope: object) {\r\n        const listeners = this.scopes.get(scope);\r\n        if (listeners) {\r\n            this.scopes.delete(scope);\r\n            for (const [type, listener] of listeners) {\r\n                this.removeEventListener(type, listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    addEventListener(type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        let listeners = this.listeners.get(type);\r\n        if (!listeners) {\r\n            listeners = new Array<EventListenerOrEventListenerObject>();\r\n            this.listeners.set(type, listeners);\r\n        }\r\n\r\n        if (!listeners.find((c) => c === callback)) {\r\n            listeners.push(callback);\r\n\r\n            if (options) {\r\n                this.listenerOptions.set(callback, options);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject) {\r\n        const listeners = this.listeners.get(type);\r\n        if (listeners) {\r\n            this.removeListener(listeners, callback);\r\n        }\r\n    }\r\n\r\n    clearEventListeners(type?: string) {\r\n        for (const [evtName, handlers] of this.listeners) {\r\n            if (isNullOrUndefined(type) || type === evtName) {\r\n                for (const handler of handlers) {\r\n                    this.removeEventListener(type, handler);\r\n                }\r\n                arrayClear(handlers);\r\n                this.listeners.delete(evtName);\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeListener(listeners: EventListenerOrEventListenerObject[], callback: EventListenerOrEventListenerObject) {\r\n        const idx = listeners.findIndex((c) => c === callback);\r\n        if (idx >= 0) {\r\n            arrayRemoveAt(listeners, idx);\r\n            if (this.listenerOptions.has(callback)) {\r\n                this.listenerOptions.delete(callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    dispatchEvent(evt: Event): boolean {\r\n        const listeners = this.listeners.get(evt.type);\r\n        if (listeners) {\r\n            for (const callback of listeners) {\r\n                const options = this.listenerOptions.get(callback);\r\n                if (isDefined(options)\r\n                    && !isBoolean(options)\r\n                    && options.once) {\r\n                    this.removeListener(listeners, callback);\r\n                }\r\n\r\n                if (isFunction(callback)) {\r\n                    callback.call(this, evt);\r\n                }\r\n                else {\r\n                    callback.handleEvent(evt);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (evt.defaultPrevented) {\r\n            return false;\r\n        }\r\n\r\n        for (const bubbler of this.bubblers) {\r\n            if (!bubbler.dispatchEvent(evt)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class EventTargetMixin implements IEventTarget {\r\n    private readonly listeners = new Map<string, EventListenerOrEventListenerObject[]>();\r\n    private readonly listenerOptions = new Map<EventListenerOrEventListenerObject, boolean | AddEventListenerOptions>();\r\n    private readonly bubblers = new Set<EventTarget>();\r\n    private readonly scopes = new WeakMap<object, Array<[any, any]>>();\r\n\r\n    constructor(\r\n        private readonly _addEventListener: (type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions) => void,\r\n        private readonly _removeEventListener: (type: string, callback: EventListenerOrEventListenerObject) => void,\r\n        private readonly _dispatchEvent: (evt: Event) => boolean\r\n    ) {\r\n    }\r\n\r\n    addBubbler(bubbler: EventTarget): void {\r\n        this.bubblers.add(bubbler);\r\n    }\r\n\r\n    removeBubbler(bubbler: EventTarget): void {\r\n        this.bubblers.delete(bubbler);\r\n    }\r\n\r\n    addScopedEventListener(scope: object, type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        if (!this.scopes.has(scope)) {\r\n            this.scopes.set(scope, []);\r\n        }\r\n        this.scopes.get(scope).push([type, callback]);\r\n        this.addEventListener(type, callback as any, options);\r\n    }\r\n\r\n    removeScope(scope: object) {\r\n        const listeners = this.scopes.get(scope);\r\n        if (listeners) {\r\n            this.scopes.delete(scope);\r\n            for (const [type, listener] of listeners) {\r\n                this.removeEventListener(type, listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    addEventListener(type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        let listeners = this.listeners.get(type);\r\n        if (!listeners) {\r\n            listeners = new Array<EventListenerOrEventListenerObject>();\r\n            this.listeners.set(type, listeners);\r\n        }\r\n\r\n        if (!listeners.find((c) => c === callback)) {\r\n            listeners.push(callback);\r\n\r\n            if (options) {\r\n                this.listenerOptions.set(callback, options);\r\n            }\r\n        }\r\n\r\n        this._addEventListener(type, callback, options);\r\n    }\r\n\r\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject): void {\r\n        const listeners = this.listeners.get(type);\r\n        if (listeners) {\r\n            this.removeListener(listeners, callback);\r\n        }\r\n\r\n        this._removeEventListener(type, callback);\r\n    }\r\n\r\n    private removeListener(listeners: EventListenerOrEventListenerObject[], callback: EventListenerOrEventListenerObject) {\r\n        const idx = listeners.findIndex((c) => c === callback);\r\n        if (idx >= 0) {\r\n            arrayRemoveAt(listeners, idx);\r\n            if (this.listenerOptions.has(callback)) {\r\n                this.listenerOptions.delete(callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    clearEventListeners(type?: string): void {\r\n        for (const [evtName, handlers] of this.listeners) {\r\n            if (isNullOrUndefined(type) || type === evtName) {\r\n                for (const handler of handlers) {\r\n                    this.removeEventListener(type, handler);\r\n                }\r\n                arrayClear(handlers);\r\n                this.listeners.delete(evtName);\r\n            }\r\n        }\r\n    }\r\n\r\n    dispatchEvent(evt: Event): boolean {\r\n        const result = this._dispatchEvent(evt);\r\n\r\n        const listeners = this.listeners.get(evt.type);\r\n        if (listeners) {\r\n            for (const callback of listeners) {\r\n                const options = this.listenerOptions.get(callback);\r\n                if (isDefined(options)\r\n                    && !isBoolean(options)\r\n                    && options.once) {\r\n                    this.removeListener(listeners, callback);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!result) {\r\n            return false;\r\n        }\r\n\r\n        for (const bubbler of this.bubblers) {\r\n            if (!bubbler.dispatchEvent(evt)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n/**\r\n * Don't actually instantiate or subclass this class. Use it as template to create new classes.\r\n * Make sure to decorate your custom element with the `@CustomElement` decorator.\r\n * \r\n * I know this sucks, but I can't get the type system to do what I want right now.\r\n */\r\nexport abstract class CustomHTMLElementExample extends HTMLElement implements IEventTarget {\r\n\r\n    private readonly eventTarget: EventTargetMixin;\r\n\r\n    constructor() {\r\n        super();\r\n        this.eventTarget = new EventTargetMixin(\r\n            super.addEventListener.bind(this),\r\n            super.removeEventListener.bind(this),\r\n            super.dispatchEvent.bind(this)\r\n        );\r\n    }\r\n\r\n    override addEventListener(type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        this.eventTarget.addEventListener(type, callback, options);\r\n    }\r\n\r\n    override removeEventListener(type: string, callback: EventListenerOrEventListenerObject) {\r\n        this.eventTarget.removeEventListener(type, callback);\r\n    }\r\n\r\n    override dispatchEvent(evt: Event): boolean {\r\n        return this.eventTarget.dispatchEvent(evt);\r\n    }\r\n\r\n    addBubbler(bubbler: EventTarget) {\r\n        this.eventTarget.addBubbler(bubbler);\r\n    }\r\n\r\n    removeBubbler(bubbler: EventTarget) {\r\n        this.eventTarget.removeBubbler(bubbler);\r\n    }\r\n\r\n    addScopedEventListener(scope: object, type: string, callback: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        this.eventTarget.addScopedEventListener(scope, type, callback, options);\r\n    }\r\n\r\n    removeScope(scope: object) {\r\n        this.eventTarget.removeScope(scope);\r\n    }\r\n\r\n    clearEventListeners(type?: string): void {\r\n        this.eventTarget.clearEventListeners(type);\r\n    }\r\n}\r\n", "import { arrayClear } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { isDefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { TypedEventTarget, TypedEventMap } from \"./TypedEventTarget\";\r\n\r\nexport type TaskExecutionState =\r\n    | \"waiting\"\r\n    | \"running\"\r\n    | \"finished\"\r\n\r\nexport type TaskResultState =\r\n    | \"none\"\r\n    | \"resolved\"\r\n    | \"errored\";\r\n\r\n/**\r\n * A Task represents a Promise that exposes its resolve/reject functions\r\n * as methods, rather than requiring a callback being passed to its constructor.\r\n * Tasks can be used to build manually-resolved Promises with less\r\n * boilerplate of nested function blocks.\r\n **/\r\nexport class Task<ResultsT = void> implements Promise<ResultsT> {\r\n    private readonly onThens = new Array<(v: ResultsT) => any>();\r\n    private readonly onCatches = new Array<(reason?: any) => void>();\r\n\r\n    private _result: ResultsT = undefined;\r\n    private _error: any = undefined;\r\n    private _executionState: TaskExecutionState = \"waiting\";\r\n    private _resultState: TaskResultState = \"none\";\r\n\r\n    /**\r\n     * Signal success for the Task\r\n     *\r\n     * @param value - the value to store with the resolved Task.\r\n     **/\r\n    public readonly resolve: (value: ResultsT) => void;\r\n\r\n    /**\r\n     * Signal failrue for the Task\r\n     *\r\n     * @param value - the error to store with the rejected Task.\r\n     **/\r\n    public readonly reject: (reason: any) => void;\r\n\r\n\r\n    /**\r\n     * Create a new Task\r\n     *\r\n     * @param autoStart - set to false to require manually starting the Task. Useful\r\n     * for reusable tasks that run on timers.\r\n     */\r\n    constructor(private readonly autoStart = true) {\r\n        // It's very likely that we will want to use resolve/reject\r\n        // as values to pass to another function/method, so we create\r\n        // them not as methods, but as bound lambda expressions stored\r\n        // in public fields.\r\n        this.resolve = (value) => {\r\n            if (this.running) {\r\n                this._result = value;\r\n                this._resultState = \"resolved\";\r\n\r\n                for (const thenner of this.onThens) {\r\n                    thenner(value);\r\n                }\r\n\r\n                this.clear();\r\n                this._executionState = \"finished\";\r\n            }\r\n        };\r\n\r\n        this.reject = (reason) => {\r\n            if (this.running) {\r\n                this._error = reason;\r\n                this._resultState = \"errored\";\r\n\r\n                for (const catcher of this.onCatches) {\r\n                    catcher(reason);\r\n                }\r\n\r\n                this.clear();\r\n                this._executionState = \"finished\";\r\n            }\r\n        };\r\n\r\n        if (this.autoStart) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    private clear() {\r\n        arrayClear(this.onThens);\r\n        arrayClear(this.onCatches);\r\n    }\r\n\r\n    /**\r\n     * If the task was not auto-started, signal that the task is now ready to recieve\r\n     * resolutions or rejections.\r\n     **/\r\n    start() {\r\n        this._executionState = \"running\";\r\n    }\r\n\r\n    /**\r\n     * Creates a resolving callback for a static value.\r\n     * @param value\r\n     */\r\n    resolver(value: ResultsT) {\r\n        return () => this.resolve(value);\r\n    }\r\n\r\n    resolveOn<EventMapT extends TypedEventMap<string>, EventT extends keyof EventMapT = keyof EventMapT>(\r\n        target: TypedEventTarget<EventMapT> | EventTarget,\r\n        resolveEvt: EventT,\r\n        value: ResultsT) {\r\n        const resolver = this.resolver(value);\r\n        target.addEventListener(resolveEvt as any, resolver);\r\n        this.finally(() =>\r\n            target.removeEventListener(resolveEvt as any, resolver));\r\n    }\r\n\r\n    /**\r\n     * Get the last result that the task had resolved to, if any is available.\r\n     *\r\n     * If the Task had been rejected, attempting to get the result will rethrow\r\n     * the error that had rejected the task.\r\n     **/\r\n    get result(): ResultsT {\r\n        if (isDefined(this.error)) {\r\n            throw this.error;\r\n        }\r\n\r\n        return this._result;\r\n    }\r\n\r\n    /**\r\n     * Get the last error that the task had been rejected by, if any.\r\n     **/\r\n    get error(): any {\r\n        return this._error;\r\n    }\r\n\r\n    /**\r\n     * Get the current state of the task.\r\n     **/\r\n    get executionState() {\r\n        return this._executionState;\r\n    }\r\n\r\n    /**\r\n     * Returns true when the Task is hasn't started yet.\r\n     **/\r\n    get waiting(): boolean {\r\n        return this.executionState === \"waiting\";\r\n    }\r\n\r\n    /**\r\n     * Returns true when the Task is waiting to be resolved or rejected.\r\n     **/\r\n    get started(): boolean {\r\n        return this.executionState !== \"waiting\";\r\n    }\r\n\r\n    /**\r\n     * Returns true after the Task has started, but before it has finished.\r\n     **/\r\n    get running(): boolean {\r\n        return this.executionState === \"running\";\r\n    }\r\n\r\n    /**\r\n     * Returns true when the Task has been resolved or rejected.\r\n     **/\r\n    get finished(): boolean {\r\n        return this.executionState === \"finished\";\r\n    }\r\n\r\n    get resultState() {\r\n        return this._resultState;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the Task had been resolved successfully.\r\n     **/\r\n    get resolved(): boolean {\r\n        return this.resultState === \"resolved\";\r\n    }\r\n\r\n    /**\r\n     * Returns true if the Task had been rejected, regardless of any\r\n     * reason being given.\r\n     **/\r\n    get errored(): boolean {\r\n        return this.resultState === \"errored\";\r\n    }\r\n\r\n    get [Symbol.toStringTag](): string {\r\n        return this.toString();\r\n    }\r\n\r\n    /**\r\n     * Calling Task.then(), Task.catch(), or Task.finally() creates a new Promise.\r\n     * This method creates that promise and links it with the task.\r\n     **/\r\n    private project(): Promise<ResultsT> {\r\n        return new Promise<ResultsT>((resolve, reject) => {\r\n            if (!this.finished) {\r\n                this.onThens.push(resolve);\r\n                this.onCatches.push(reject);\r\n            }\r\n            else if (this.errored) {\r\n                reject(this.error);\r\n            }\r\n            else {\r\n                resolve(this.result);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attach a handler to the task that fires when the task is resolved.\r\n     * \r\n     * @param onfulfilled\r\n     * @param onrejected\r\n     */\r\n    then<TResult1 = ResultsT, TResult2 = never>(onfulfilled?: (value: ResultsT) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\r\n        return this.project().then(onfulfilled, onrejected);\r\n    }\r\n\r\n    /**\r\n     * Attach a handler that fires when the Task is rejected.\r\n     * \r\n     * @param onrejected\r\n     */\r\n    catch<TResult = never>(onrejected?: (reason: any) => TResult | PromiseLike<TResult>): Promise<ResultsT | TResult> {\r\n        return this.project().catch(onrejected);\r\n    }\r\n\r\n    /**\r\n     * Attach a handler that fires regardless of whether the Task is resolved\r\n     * or rejected.\r\n     * \r\n     * @param onfinally\r\n     */\r\n    finally(onfinally?: () => void): Promise<ResultsT> {\r\n        return this.project().finally(onfinally);\r\n    }\r\n\r\n    /**\r\n     * Resets the Task to an unsignalled state, which is useful for\r\n     * reducing GC pressure when working with lots of tasks.\r\n     **/\r\n    reset() {\r\n        this._reset(this.autoStart);\r\n    }\r\n\r\n    restart() {\r\n        this._reset(true);\r\n    }\r\n\r\n    private _reset(start: boolean) {\r\n        if (this.running) {\r\n            this.reject(\"Resetting previous invocation\");\r\n        }\r\n\r\n        this.clear();\r\n        this._result = undefined;\r\n        this._error = undefined;\r\n        this._executionState = \"waiting\";\r\n        this._resultState = \"none\";\r\n\r\n        if (start) {\r\n            this.start();\r\n        }\r\n    }\r\n}", "import { isDefined, isNullOrUndefined, isString } from \"@juniper-lib/tslib/dist/typeChecks\";\r\n\r\nexport const typePattern = /([^\\/]+)\\/(.+)/;\r\nconst subTypePattern = /(?:([^\\.]+)\\.)?([^\\+;]+)(?:\\+([^;]+))?((?:; *([^=]+)=([^;]+))*)/;\r\n\r\nexport function mediaTypesToAcceptValue(types: MediaType[]): string {\r\n    return types\r\n        .flatMap(type =>\r\n            type.extensions.map(ext =>\r\n                \".\" + ext))\r\n        .sort()\r\n        .join(\", \");\r\n}\r\n\r\nexport class MediaType {\r\n    private readonly _tree: string;\r\n    private readonly _subType: string;\r\n    private readonly _suffix: string;\r\n    private readonly _parameters: ReadonlyMap<string, string>;\r\n\r\n    private readonly _value: string;\r\n    private readonly _fullValue: string;\r\n\r\n    private readonly _extensions: ReadonlyArray<string>;\r\n    private readonly _primaryExtension: string = null;\r\n\r\n    private depMessage: string = null;\r\n\r\n\r\n    constructor(\r\n        private readonly _type: string,\r\n        private readonly _fullSubType: string,\r\n        extensions?: ReadonlyArray<string>) {\r\n\r\n        const parameters = new Map<string, string>();\r\n        this._parameters = parameters;\r\n\r\n        const subTypeParts = this._fullSubType.match(subTypePattern);\r\n        this._tree = subTypeParts[1];\r\n        this._subType = subTypeParts[2];\r\n        this._suffix = subTypeParts[3];\r\n        const paramStr = subTypeParts[4];\r\n\r\n        this._value = this._fullValue = this._type + \"/\";\r\n\r\n        if (isDefined(this._tree)) {\r\n            this._value = this._fullValue += this._tree + \".\";\r\n        }\r\n\r\n        this._value = this._fullValue += this._subType;\r\n\r\n        if (isDefined(this._suffix)) {\r\n            this._value = this._fullValue += \"+\" + this._suffix;\r\n        }\r\n\r\n        if (isDefined(paramStr)) {\r\n            const pairs = paramStr.split(\";\")\r\n                .map((p) => p.trim())\r\n                .filter((p) => p.length > 0)\r\n                .map((p) => p.split(\"=\"));\r\n            for (const [key, ...values] of pairs) {\r\n                const value = values.join(\"=\");\r\n                parameters.set(key, value);\r\n                const slug = `; ${key}=${value}`;\r\n                this._fullValue += slug;\r\n                if (key !== \"q\") {\r\n                    this._value += slug;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._extensions = extensions || [];\r\n        this._primaryExtension = this._extensions[0] || null;\r\n    }\r\n\r\n    static parse(value: string): MediaType {\r\n        if (!value) {\r\n            return null;\r\n        }\r\n\r\n        const match = value.match(typePattern);\r\n        if (!match) {\r\n            return null;\r\n        }\r\n\r\n        const type = match[1];\r\n        const subType = match[2];\r\n        return new MediaType(type, subType);\r\n    }\r\n\r\n    deprecate(message: string): this {\r\n        this.depMessage = message;\r\n        return this;\r\n    }\r\n\r\n    private check() {\r\n        if (isDefined(this.depMessage)) {\r\n            console.warn(`${this._value} is deprecated ${this.depMessage}`);\r\n        }\r\n    }\r\n\r\n    matches(value: MediaType | string): boolean {\r\n        if (isNullOrUndefined(value)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.typeName === \"*\" && this.subTypeName === \"*\") {\r\n            return true;\r\n        }\r\n\r\n        let typeName: string = null;\r\n        let subTypeName: string = null;\r\n        if (isString(value)) {\r\n            const match = value.match(typePattern);\r\n            if (!match) {\r\n                return false;\r\n            }\r\n\r\n            typeName = match[1];\r\n            subTypeName = match[2];\r\n        }\r\n        else {\r\n            typeName = value.typeName;\r\n            subTypeName = value._fullSubType;\r\n        }\r\n\r\n        return this.typeName === typeName\r\n            && (this._fullSubType === \"*\" || this._fullSubType === subTypeName);\r\n    }\r\n\r\n    withParameter(key: string, value: string): MediaType {\r\n        const newSubType = `${this._fullSubType}; ${key}=${value}`;\r\n        return new MediaType(this.typeName, newSubType, this.extensions);\r\n    }\r\n\r\n    get typeName(): string {\r\n        this.check();\r\n        return this._type;\r\n    }\r\n\r\n    get tree(): string {\r\n        this.check();\r\n        return this._tree;\r\n    }\r\n\r\n    get suffix(): string {\r\n        return this._suffix;\r\n    }\r\n\r\n    get subTypeName(): string {\r\n        this.check();\r\n        return this._subType;\r\n    }\r\n\r\n    get value(): string {\r\n        this.check();\r\n        return this._value;\r\n    }\r\n\r\n    __getValueUnsafe() {\r\n        return this._value;\r\n    }\r\n\r\n    get fullValue(): string {\r\n        this.check();\r\n        return this._fullValue;\r\n    }\r\n\r\n    get parameters(): ReadonlyMap<string, string> {\r\n        this.check();\r\n        return this._parameters;\r\n    }\r\n\r\n    get extensions(): ReadonlyArray<string> {\r\n        this.check();\r\n        return this._extensions;\r\n    }\r\n\r\n    __getExtensionsUnsafe() {\r\n        return this._extensions;\r\n    }\r\n\r\n    get primaryExtension(): string {\r\n        this.check();\r\n        return this._primaryExtension;\r\n    }\r\n\r\n    toString() {\r\n        if (this.parameters.get(\"q\") === \"1\") {\r\n            return this.value;\r\n        }\r\n        else {\r\n            return this.fullValue;\r\n        }\r\n    }\r\n\r\n    toFileSystemAPIAccepts(): Record<string, string | string[]> {\r\n        return {\r\n            [this.value]: this.extensions.map(v => \".\" + v)\r\n        };\r\n    }\r\n\r\n    addExtension(fileName: string): string {\r\n        if (!fileName) {\r\n            throw new Error(\"File name is not defined\");\r\n        }\r\n\r\n        if (this.primaryExtension) {\r\n            fileName = MediaType.removeExtension(fileName);\r\n            fileName = `${fileName}.${this.primaryExtension}`;\r\n        }\r\n\r\n        return fileName;\r\n    }\r\n\r\n    static removeExtension(fileName: string) {\r\n        const idx = fileName.lastIndexOf(\".\");\r\n        if (idx > -1) {\r\n            fileName = fileName.substring(0, idx);\r\n        }\r\n        return fileName;\r\n    }\r\n}\r\n\r\nexport function create(group: string, value: string, ...extensions: string[]): MediaType {\r\n    return new MediaType(group, value, extensions);\r\n}\r\n\r\nexport function specialize(group: string) {\r\n    return create.bind(null, group);\r\n}", "import { specialize } from \"./util\";\r\n\r\nconst image = /*@__PURE__*/ specialize(\"image\");\r\n\r\nexport const Image_Aces = /*@__PURE__*/ image(\"aces\");\r\nexport const Image_Apng = /*@__PURE__*/ image(\"apng\", \"apng\");\r\nexport const Image_Avci = /*@__PURE__*/ image(\"avci\");\r\nexport const Image_Avcs = /*@__PURE__*/ image(\"avcs\");\r\nexport const Image_Avif = /*@__PURE__*/ image(\"avif\", \"avif\");\r\nexport const Image_Bmp = /*@__PURE__*/ image(\"bmp\", \"bmp\");\r\nexport const Image_Cgm = /*@__PURE__*/ image(\"cgm\", \"cgm\");\r\nexport const Image_Dicom_Rle = /*@__PURE__*/ image(\"dicom-rle\");\r\nexport const Image_Emf = /*@__PURE__*/ image(\"emf\");\r\nexport const Image_Example = /*@__PURE__*/ image(\"example\");\r\nexport const Image_EXR = /*@__PURE__*/ image(\"x-exr\", \"exr\");\r\nexport const Image_Fits = /*@__PURE__*/ image(\"fits\");\r\nexport const Image_G3fax = /*@__PURE__*/ image(\"g3fax\", \"g3\");\r\nexport const Image_Gif = /*@__PURE__*/ image(\"gif\", \"gif\");\r\nexport const Image_Heic = /*@__PURE__*/ image(\"heic\");\r\nexport const Image_Heic_Sequence = /*@__PURE__*/ image(\"heic-sequence\");\r\nexport const Image_Heif = /*@__PURE__*/ image(\"heif\");\r\nexport const Image_Heif_Sequence = /*@__PURE__*/ image(\"heif-sequence\");\r\nexport const Image_Hej2k = /*@__PURE__*/ image(\"hej2k\");\r\nexport const Image_Hsj2 = /*@__PURE__*/ image(\"hsj2\");\r\nexport const Image_Ief = /*@__PURE__*/ image(\"ief\", \"ief\");\r\nexport const Image_Jls = /*@__PURE__*/ image(\"jls\");\r\nexport const Image_Jp2 = /*@__PURE__*/ image(\"jp2\");\r\nexport const Image_Jpeg = /*@__PURE__*/ image(\"jpeg\", \"jpeg\", \"jpg\", \"jpe\");\r\nexport const Image_Jph = /*@__PURE__*/ image(\"jph\");\r\nexport const Image_Jphc = /*@__PURE__*/ image(\"jphc\");\r\nexport const Image_Jpm = /*@__PURE__*/ image(\"jpm\");\r\nexport const Image_Jpx = /*@__PURE__*/ image(\"jpx\");\r\nexport const Image_Jxr = /*@__PURE__*/ image(\"jxr\");\r\nexport const Image_JxrA = /*@__PURE__*/ image(\"jxra\");\r\nexport const Image_JxrS = /*@__PURE__*/ image(\"jxrs\");\r\nexport const Image_Jxs = /*@__PURE__*/ image(\"jxs\");\r\nexport const Image_Jxsc = /*@__PURE__*/ image(\"jxsc\");\r\nexport const Image_Jxsi = /*@__PURE__*/ image(\"jxsi\");\r\nexport const Image_Jxss = /*@__PURE__*/ image(\"jxss\");\r\nexport const Image_Ktx = /*@__PURE__*/ image(\"ktx\", \"ktx\");\r\nexport const Image_Naplps = /*@__PURE__*/ image(\"naplps\");\r\nexport const Image_Pjpeg = /*@__PURE__*/ image(\"pjpeg\");\r\nexport const Image_Png = /*@__PURE__*/ image(\"png\", \"png\");\r\nexport const Image_PrsBtif = /*@__PURE__*/ image(\"prs.btif\", \"btif\");\r\nexport const Image_PrsPti = /*@__PURE__*/ image(\"prs.pti\");\r\nexport const Image_Pwg_Raster = /*@__PURE__*/ image(\"pwg-raster\");\r\nexport const Image_Raw = /*@__PURE__*/ image(\"x-raw\", \"raw\");\r\nexport const Image_Sgi = /*@__PURE__*/ image(\"sgi\", \"sgi\");\r\nexport const Image_SvgXml = /*@__PURE__*/ image(\"svg+xml\", \"svg\", \"svgz\");\r\nexport const Image_T38 = /*@__PURE__*/ image(\"t38\");\r\nexport const Image_Tiff = /*@__PURE__*/ image(\"tiff\", \"tiff\", \"tif\");\r\nexport const Image_Tiff_Fx = /*@__PURE__*/ image(\"tiff-fx\");\r\nexport const Image_Vendor_AdobePhotoshop = /*@__PURE__*/ image(\"vnd.adobe.photoshop\", \"psd\");\r\nexport const Image_Vendor_AirzipAcceleratorAzv = /*@__PURE__*/ image(\"vnd.airzip.accelerator.azv\");\r\nexport const Image_Vendor_CnsInf2 = /*@__PURE__*/ image(\"vnd.cns.inf2\");\r\nexport const Image_Vendor_DeceGraphic = /*@__PURE__*/ image(\"vnd.dece.graphic\", \"uvi\", \"uvvi\", \"uvg\", \"uvvg\");\r\nexport const Image_Vendor_Djvu = /*@__PURE__*/ image(\"vnd.djvu\", \"djvu\", \"djv\");\r\nexport const Image_Vendor_DvbSubtitle = /*@__PURE__*/ image(\"vnd.dvb.subtitle\", \"sub\");\r\nexport const Image_Vendor_Dwg = /*@__PURE__*/ image(\"vnd.dwg\", \"dwg\");\r\nexport const Image_Vendor_Dxf = /*@__PURE__*/ image(\"vnd.dxf\", \"dxf\");\r\nexport const Image_Vendor_Fastbidsheet = /*@__PURE__*/ image(\"vnd.fastbidsheet\", \"fbs\");\r\nexport const Image_Vendor_Fpx = /*@__PURE__*/ image(\"vnd.fpx\", \"fpx\");\r\nexport const Image_Vendor_Fst = /*@__PURE__*/ image(\"vnd.fst\", \"fst\");\r\nexport const Image_Vendor_FujixeroxEdmics_Mmr = /*@__PURE__*/ image(\"vnd.fujixerox.edmics-mmr\", \"mmr\");\r\nexport const Image_Vendor_FujixeroxEdmics_Rlc = /*@__PURE__*/ image(\"vnd.fujixerox.edmics-rlc\", \"rlc\");\r\nexport const Image_Vendor_GlobalgraphicsPgb = /*@__PURE__*/ image(\"vnd.globalgraphics.pgb\");\r\nexport const Image_Vendor_MicrosoftIcon = /*@__PURE__*/ image(\"vnd.microsoft.icon\", \"ico\");\r\nexport const Image_Vendor_Mix = /*@__PURE__*/ image(\"vnd.mix\");\r\nexport const Image_Vendor_MozillaApng = /*@__PURE__*/ image(\"vnd.mozilla.apng\");\r\nexport const Image_Vendor_Ms_Dds = /*@__PURE__*/ image(\"vnd.ms-dds\", \"dds\");\r\nexport const Image_Vendor_Ms_Modi = /*@__PURE__*/ image(\"vnd.ms-modi\", \"mdi\");\r\nexport const Image_Vendor_Ms_Photo = /*@__PURE__*/ image(\"vnd.ms-photo\", \"wdp\");\r\nexport const Image_Vendor_Net_Fpx = /*@__PURE__*/ image(\"vnd.net-fpx\", \"npx\");\r\nexport const Image_Vendor_Radiance = /*@__PURE__*/ image(\"vnd.radiance\");\r\nexport const Image_Vendor_SealedmediaSoftsealGif = /*@__PURE__*/ image(\"vnd.sealedmedia.softseal.gif\");\r\nexport const Image_Vendor_SealedmediaSoftsealJpg = /*@__PURE__*/ image(\"vnd.sealedmedia.softseal.jpg\");\r\nexport const Image_Vendor_SealedPng = /*@__PURE__*/ image(\"vnd.sealed.png\");\r\nexport const Image_Vendor_Svf = /*@__PURE__*/ image(\"vnd.svf\");\r\nexport const Image_Vendor_TencentTap = /*@__PURE__*/ image(\"vnd.tencent.tap\");\r\nexport const Image_Vendor_ValveSourceTexture = /*@__PURE__*/ image(\"vnd.valve.source.texture\");\r\nexport const Image_Vendor_WapWbmp = /*@__PURE__*/ image(\"vnd.wap.wbmp\", \"wbmp\");\r\nexport const Image_Vendor_Xiff = /*@__PURE__*/ image(\"vnd.xiff\", \"xif\");\r\nexport const Image_Vendor_ZbrushPcx = /*@__PURE__*/ image(\"vnd.zbrush.pcx\");\r\nexport const Image_Webp = /*@__PURE__*/ image(\"webp\", \"webp\");\r\nexport const Image_Wmf = /*@__PURE__*/ image(\"wmf\");\r\nexport const Image_X_3ds = /*@__PURE__*/ image(\"x-3ds\", \"3ds\");\r\nexport const Image_X_Cmu_Raster = /*@__PURE__*/ image(\"x-cmu-raster\", \"ras\");\r\nexport const Image_X_Cmx = /*@__PURE__*/ image(\"x-cmx\", \"cmx\");\r\nexport const Image_X_Emf = /*@__PURE__*/ image(\"x-emf\").deprecate(\"in favor of image/emf\");\r\nexport const Image_X_Freehand = /*@__PURE__*/ image(\"x-freehand\", \"fh\", \"fhc\", \"fh4\", \"fh5\", \"fh7\");\r\nexport const Image_X_Icon = /*@__PURE__*/ image(\"x-icon\", \"ico\");\r\nexport const Image_X_Mrsid_Image = /*@__PURE__*/ image(\"x-mrsid-image\", \"sid\");\r\nexport const Image_X_Ms_Bmp = /*@__PURE__*/ image(\"x-ms-bmp\");\r\nexport const Image_X_Pcx = /*@__PURE__*/ image(\"x-pcx\", \"pcx\");\r\nexport const Image_X_Pict = /*@__PURE__*/ image(\"x-pict\", \"pic\", \"pct\");\r\nexport const Image_X_Portable_Anymap = /*@__PURE__*/ image(\"x-portable-anymap\", \"pnm\");\r\nexport const Image_X_Portable_Bitmap = /*@__PURE__*/ image(\"x-portable-bitmap\", \"pbm\");\r\nexport const Image_X_Portable_Graymap = /*@__PURE__*/ image(\"x-portable-graymap\", \"pgm\");\r\nexport const Image_X_Portable_Pixmap = /*@__PURE__*/ image(\"x-portable-pixmap\", \"ppm\");\r\nexport const Image_X_Rgb = /*@__PURE__*/ image(\"x-rgb\", \"rgb\");\r\nexport const Image_X_Tga = /*@__PURE__*/ image(\"x-tga\", \"tga\");\r\nexport const Image_X_Wmf = /*@__PURE__*/ image(\"x-wmf\").deprecate(\"in favor of image/wmf\");\r\nexport const Image_X_Xbitmap = /*@__PURE__*/ image(\"x-xbitmap\", \"xbm\");\r\nexport const Image_X_Xcf = /*@__PURE__*/ image(\"x-xcf\");\r\nexport const Image_X_Xpixmap = /*@__PURE__*/ image(\"x-xpixmap\", \"xpm\");\r\nexport const Image_X_Xwindowdump = /*@__PURE__*/ image(\"x-xwindowdump\", \"xwd\");", "import type { MediaType } from \"@juniper-lib/mediatypes\";\r\nimport { identity } from \"@juniper-lib/tslib/dist/identity\";\r\nimport { stringRandom } from \"@juniper-lib/tslib/dist/strings/stringRandom\";\r\nimport { isBoolean, isFunction, isNullOrUndefined, isString } from \"@juniper-lib/tslib/dist/typeChecks\";\r\n\r\nconst warnings = new Map<string, Set<string>>();\r\n\r\n/**\r\n * A setter functor for HTML attributes.\r\n **/\r\nexport class HtmlAttr<T extends string = string, V = number | object | ((elem: HTMLElement) => unknown)> {\r\n\r\n    readonly tags: readonly string[];\r\n\r\n    /**\r\n     * Creates a new setter functor for HTML Attributes\r\n     * @param key - the attribute name.\r\n     * @param value - the value to set for the attribute.\r\n     * @param bySetAttribute - whether the attribute should be set via the setAttribute method.\r\n     * @param tags - the HTML tags that support this attribute.\r\n     */\r\n    constructor(\r\n        public readonly key: T,\r\n        public readonly value: V,\r\n        private readonly bySetAttribute: boolean,\r\n        ...tags: string[]) {\r\n        this.tags = tags.map((t) => t.toLocaleUpperCase());\r\n        Object.freeze(this);\r\n    }\r\n\r\n    /**\r\n     * Set the attribute value on an HTMLElement\r\n     * @param elem - the element on which to set the attribute.\r\n     */\r\n    applyToElement(elem: HTMLElement) {\r\n        if (this.tags.length > 0\r\n            && this.tags.indexOf(elem.tagName) === -1) {\r\n            let set = warnings.get(elem.tagName);\r\n            if (!set) {\r\n                warnings.set(elem.tagName, set = new Set());\r\n            }\r\n\r\n            if (!set.has(this.key)) {\r\n                set.add(this.key);\r\n                console.warn(`Element ${elem.tagName} does not support Attribute ${this.key}`);\r\n            }\r\n        }\r\n\r\n        if (this.bySetAttribute) {\r\n            elem.setAttribute(this.key, this.value.toString());\r\n        }\r\n        else if (this.key in elem) {\r\n            (elem as unknown)[this.key] = this.value;\r\n        }\r\n        else if (this.value === false) {\r\n            elem.removeAttribute(this.key);\r\n        }\r\n        else if (this.value === true) {\r\n            elem.setAttribute(this.key, \"\");\r\n        }\r\n        else if (isFunction(this.value)) {\r\n            this.value(elem);\r\n        }\r\n        else {\r\n            elem.setAttribute(this.key, this.value.toString());\r\n        }\r\n    }\r\n}\r\n\r\nfunction attr<T extends string = string, V = number | object>(key: T, value: V, bySetAttribute: boolean, ...tags: string[]) {\r\n    return new HtmlAttr(key, value, bySetAttribute, ...tags);\r\n}\r\n\r\nexport function isAttr(obj: unknown): obj is HtmlAttr {\r\n    return obj instanceof HtmlAttr;\r\n}\r\n\r\n/**\r\n * a list of types the server accepts, typically a file type.\r\n * @param value - the value to set on the attribute.\r\n **/\r\nexport function Accept(value: string) { return attr(\"accept\", value, false, \"form\", \"input\"); }\r\n\r\n/**\r\n * The accessKey attribute\r\n **/\r\nexport function AccessKey(value: string) { return attr(\"accessKey\", value, false, \"input\", \"button\"); }\r\n\r\n/**\r\n * specifying the horizontal alignment of the element.\r\n **/\r\nexport function Align(value: string) { return attr(\"align\", value, false, \"applet\", \"caption\", \"col\", \"colgroup\", \"hr\", \"iframe\", \"img\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"); }\r\n\r\n/**\r\n * Specifies a feature-policy for the iframe.\r\n **/\r\nexport function Allow(value: string) { return attr(\"allow\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * Whether or not to allow an IFrame to open full screen elements.\r\n */\r\nexport function AllowFullscreen(value: boolean) { return attr(\"allowfullscreen\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * Alternative text in case an image can't be displayed.\r\n **/\r\nexport function Alt(value: string) { return attr(\"alt\", value, false, \"applet\", \"area\", \"img\", \"input\"); }\r\n\r\n/**\r\n * Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.\r\n **/\r\nexport function AriaActiveDescendant(value: string) { return attr(\"ariaActiveDescendant\", value, false); }\r\n\r\n/**\r\n * Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.\r\n **/\r\nexport function AriaAtomic(value: boolean) { return attr(\"ariaAtomic\", value, false); }\r\n\r\n/**\r\n * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.\r\n **/\r\nexport function AriaAutoComplete(value: string) { return attr(\"ariaAutoComplete\", value, false); }\r\n\r\n/**\r\n * Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.\r\n **/\r\nexport function AriaBusy(value: boolean) { return attr(\"ariaBusy\", value, false); }\r\n\r\n/**\r\n * Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets. See related aria-pressed and aria-selected.\r\n **/\r\nexport function AriaChecked(value: boolean) { return attr(\"ariaChecked\", value, false); }\r\n\r\n/**\r\n * Defines the total number of columns in a table, grid, or treegrid. See related aria-colindex.\r\n  **/\r\nexport function AriaColCount(value: number) { return attr(\"ariaColCount\", value, false); }\r\n\r\n/**\r\n * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid. See related aria-colcount and aria-colspan.\r\n  **/\r\nexport function AriaColIndex(value: number) { return attr(\"ariaColIndex\", value, false); }\r\n\r\n/**\r\n * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid. See related aria-colindex and aria-rowspan.\r\n  **/\r\nexport function AriaColSpan(value: number) { return attr(\"ariaColSpan\", value, false); }\r\n\r\n/**\r\n * Identifies the element (or elements) whose contents or presence are controlled by the current element. See related aria-owns.\r\n  **/\r\nexport function AriaControls(value: string) { return attr(\"ariaControls\", value, false); }\r\n\r\n/**\r\n * Indicates the element that represents the current item within a container or set of related elements.\r\n  **/\r\nexport function AriaCurrent(value: string) { return attr(\"ariaCurrent\", value, false); }\r\n\r\n/**\r\n * Identifies the element (or elements) that describes the object. See related aria-labelledby.\r\n  **/\r\nexport function AriaDescribedBy(value: string) { return attr(\"ariaDescribedBy\", value, false); }\r\n\r\n/**\r\n * Identifies the element that provides a detailed, extended description for the object. See related aria-describedby.\r\n  **/\r\nexport function AriaDetails(value: string) { return attr(\"ariaDetails\", value, false); }\r\n\r\n/**\r\n * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable. See related aria-hidden and aria-readonly.\r\n  **/\r\nexport function AriaDisabled(value: boolean) { return attr(\"ariaDisabled\", value, false); }\r\n\r\n/**\r\n * Identifies the element that provides an error message for the object. See related aria-invalid and aria-describedby.\r\n  **/\r\nexport function AriaErrorMessage(value: string) { return attr(\"ariaErrorMessage\", value, false); }\r\n\r\n/**\r\n * Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.\r\n **/\r\nexport function AriaExpanded(value: boolean) { return attr(\"ariaExpanded\", value, false); }\r\n\r\n/**\r\n * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion, allows assistive technology to override the general default of reading in document source order.\r\n  **/\r\nexport function AriaFlowTo(value: string) { return attr(\"ariaFlowTo\", value, false); }\r\n\r\n/**\r\n * Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.\r\n  **/\r\nexport function AriaHasPopup(value: string) { return attr(\"ariaHasPopup\", value, false); }\r\n\r\n/**\r\n * Indicates whether the element is exposed to an accessibility API. See related aria-disabled.\r\n **/\r\nexport function AriaHidden(value: boolean) { return attr(\"ariaHidden\", value, false); }\r\n\r\n/**\r\n * Indicates the entered value does not conform to the format expected by the application. See related aria-errormessage.\r\n  **/\r\nexport function AriaInvalid(value: string) { return attr(\"ariaInvalid\", value, false); }\r\n\r\n/**\r\n * Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.\r\n  **/\r\nexport function AriaKeyShortcuts(value: string) { return attr(\"ariaKeyShortcuts\", value, false); }\r\n\r\n/**\r\n * Defines a string value that labels the current element. See related aria-labelledby.\r\n  **/\r\nexport function AriaLabel(value: string) { return attr(\"ariaLabel\", value, false); }\r\n\r\n/**\r\n * Identifies the element (or elements) that labels the current element. See related aria-describedby.\r\n  **/\r\nexport function AriaLabelledBy(value: string) { return attr(\"ariaLabelledBy\", value, false); }\r\n\r\n/**\r\n * Defines the hierarchical level of an element within a structure.\r\n  **/\r\nexport function AriaLevel(value: number) { return attr(\"ariaLevel\", value, false); }\r\n\r\n/**\r\n * Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.\r\n  **/\r\nexport function AriaLive(value: string) { return attr(\"ariaLive\", value, false); }\r\n\r\n/**\r\n * Indicates whether an element is modal when displayed\r\n  **/\r\nexport function AriaModal(value: boolean) { return attr(\"ariaModal\", value, false); }\r\n\r\n/**\r\n * Indicates whether a text box accepts multiple lines of input or only a single line.\r\n  **/\r\nexport function AriaMultiline(value: boolean) { return attr(\"ariaMultiline\", value, false); }\r\n\r\n/**\r\n * Indicates that the user may select more than one item from the current selectable descendants.\r\n  **/\r\nexport function AriaMultiSelectable(value: boolean) { return attr(\"ariaMultiSelectable\", value, false); }\r\n\r\n/**\r\n * Indicates that the user may select more than one item from the current selectable descendants.\r\n  **/\r\nexport function AriaOrientation(value: string) { return attr(\"ariaOrientation\", value, false); }\r\n\r\n/**\r\n * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship. See related aria-controls.\r\n  **/\r\nexport function AriaOwns(value: string) { return attr(\"ariaOwns\", value, false); }\r\n\r\n/**\r\n * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format.\r\n  **/\r\nexport function AriaPlaceholder(value: string) { return attr(\"ariaPlaceholder\", value, false); }\r\n\r\n/**\r\n * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related aria-setsize.\r\n  **/\r\nexport function AriaPosInSet(value: number) { return attr(\"ariaPosInSet\", value, false); }\r\n\r\n/**\r\n * Indicates the current \"pressed\" state of toggle buttons. See related aria-checked and aria-selected.\r\n **/\r\nexport function AriaPressed(value: boolean) { return attr(\"ariaPressed\", value, false); }\r\n\r\n/**\r\n * Indicates that the element is not editable, but is otherwise operable. See related aria-disabled.\r\n  **/\r\nexport function AriaReadOnly(value: boolean) { return attr(\"ariaReadOnly\", value, false); }\r\n\r\n/**\r\n * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified. See related aria-atomic.\r\n  **/\r\nexport function AriaRelevant(value: string) { return attr(\"ariaRelevant\", value, false); }\r\n\r\n/**\r\n * Indicates that user input is required on the element before a form may be submitted.\r\n  **/\r\nexport function AriaRequired(value: boolean) { return attr(\"ariaRequired\", value, false); }\r\n\r\n/**\r\n * Defines a human-readable, author-localized description for the role of an element.\r\n  **/\r\nexport function AriaRoleDescription(value: string) { return attr(\"ariaRoleDescription\", value, false); }\r\n\r\n/**\r\n * Defines the total number of rows in a table, grid, or treegrid. See related aria-rowindex.\r\n  **/\r\nexport function AriaRowCount(value: number) { return attr(\"ariaRowCount\", value, false); }\r\n\r\n/**\r\n * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid. See related aria-rowcount and aria-rowspan.\r\n  **/\r\nexport function AriaRowIndex(value: number) { return attr(\"ariaRowIndex\", value, false); }\r\n\r\n/**\r\n Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid. See related aria-rowindex and aria-colspan.\r\n  **/\r\nexport function AriaRowSpan(value: number) { return attr(\"ariaRowSpan\", value, false); }\r\n\r\n/**\r\n * Indicates the current \"selected\" state of various widgets. See related aria-checked and aria-pressed.\r\n **/\r\nexport function AriaSelected(value: boolean) { return attr(\"ariaSelected\", value, false); }\r\n\r\n/**\r\n * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related aria-posinset.\r\n  **/\r\nexport function AriaSetSize(value: number) { return attr(\"ariaSetsize\", value, false); }\r\n\r\n/**\r\n * Indicates if items in a table or grid are sorted in ascending or descending order.\r\n  **/\r\nexport function AriaSort(value: string) { return attr(\"ariaSort\", value, false); }\r\n\r\n/**\r\n * Defines the maximum allowed value for a range widget.\r\n  **/\r\nexport function AriaValueMax(value: number) { return attr(\"ariaValueMax\", value, false); }\r\n\r\n/**\r\n * Defines the minimum allowed value for a range widget.\r\n  **/\r\nexport function AriaValueMin(value: number) { return attr(\"ariaValueMin\", value, false); }\r\n\r\n/**\r\n * Defines the current value for a range widget. See related aria-valuetext.\r\n  **/\r\nexport function AriaValueNow(value: number) { return attr(\"ariaValueNow\", value, false); }\r\n\r\n/**\r\n * Defines the human readable text alternative of aria-valuenow for a range widget.\r\n  **/\r\nexport function AriaValueText(value: string) { return attr(\"ariaValueText\", value, false); }\r\n\r\n/**\r\n * Executes the script asynchronously.\r\n  **/\r\nexport function Async(value: string) { return attr(\"async\", value, false, \"script\"); }\r\n\r\n/**\r\n * Sets whether input is automatically capitalized when entered by user\r\n  **/\r\nexport function AutoCapitalize(value: boolean) { return attr(\"autocapitalize\", value, false); }\r\n\r\n/**\r\n * Indicates whether controls in this form can by default have their values automatically completed by the browser.\r\n  **/\r\nexport function AutoComplete(value: HTMLAutoCompleteAttributeValue) { return attr(\"autocomplete\", value, false, \"form\", \"input\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * The element should be automatically focused after the page loaded.\r\n  **/\r\nexport function AutoFocus(value: boolean) { return attr(\"autofocus\", value, false, \"button\", \"input\", \"keygen\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * The audio or video should play as soon as possible.\r\n  **/\r\nexport function AutoPlay(value: boolean) { return attr(\"autoplay\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * Contains the time range of already buffered media.\r\n  **/\r\nexport function Buffered(value: boolean) { return attr(\"buffered\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * From the HTML Media Capture\r\n  **/\r\nexport function Capture(value: boolean) { return attr(\"capture\", value, false, \"input\"); }\r\n\r\n/**\r\n * Declares the character encoding of the page or script.\r\n  **/\r\nexport function CharSet(value: string) { return attr(\"charset\", value, false, \"meta\", \"script\"); }\r\n\r\n/**\r\n * Indicates whether the element should be checked on page load.\r\n  **/\r\nexport function Checked(value: boolean) { return attr(\"checked\", value, false, \"command\", \"input\"); }\r\n\r\n/**\r\n * Contains a URI which points to the source of the quote or change.\r\n  **/\r\nexport function Cite_attr(value: string) { return attr(\"cite\", value, false, \"blockquote\", \"del\", \"ins\", \"q\"); }\r\n\r\n/**\r\n * Often used with CSS to style elements with common properties.\r\n  **/\r\nexport function ClassName(value: string) { return attr(\"className\", value, false); }\r\n\r\n/**\r\n * Often used with CSS to style elements with common properties.\r\n  **/\r\nexport function ClassList(...values: string[]) {\r\n    values = values.filter(identity);\r\n    return attr(\"CLASS_LIST\", (element: HTMLElement) => element.classList.add(...values), false);\r\n}\r\n\r\n/**\r\n * Specifies the URL of the applet's class file to be loaded and executed.\r\n  **/\r\nexport function Code_attr(value: string) { return attr(\"code\", value, false, \"applet\"); }\r\n\r\n/**\r\n * This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored.\r\n  **/\r\nexport function CodeBase(value: string) { return attr(\"codebase\", value, false, \"applet\"); }\r\n\r\n/**\r\n * Defines the number of columns in a textarea.\r\n  **/\r\nexport function Cols(value: number) { return attr(\"cols\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * The colspan attribute defines the number of columns a cell should span.\r\n  **/\r\nexport function ColSpan(value: number) { return attr(\"colspan\", value, false, \"td\", \"th\"); }\r\n\r\n/**\r\n * A value associated with http-equiv or name depending on the context.\r\n  **/\r\nexport function Content(value: string) { return attr(\"content\", value, false, \"meta\"); }\r\n\r\n/**\r\n * Indicates whether the element's content is editable.\r\n  **/\r\nexport function ContentEditable(value: string) { return attr(\"contenteditable\", value, false); }\r\n\r\n/**\r\n * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n  **/\r\nexport function ContextMenu(value: string) { return attr(\"contextmenu\", value, false); }\r\n\r\n/**\r\n * Indicates whether the browser should show playback controls to the user.\r\n  **/\r\nexport function Controls(value: boolean) { return attr(\"controls\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * A set of values specifying the coordinates of the hot-spot region.\r\n  **/\r\nexport function Coords(value: string) { return attr(\"coords\", value, false, \"area\"); }\r\n\r\n/**\r\n * How the element handles cross-origin requests\r\n  **/\r\nexport function CrossOrigin(value: string) { return attr(\"crossorigin\", value, false, \"audio\", \"img\", \"link\", \"script\", \"video\"); }\r\n\r\n/**\r\n * Specifies the Content Security Policy that an embedded document must agree to enforce upon itself.\r\n  **/\r\nexport function CSP(value: string) { return attr(\"csp\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * Specifies the URL of the resource.\r\n  **/\r\nexport function Data_attr(value: string) { return attr(\"data\", value, false, \"object\"); }\r\n\r\n/**\r\n * Lets you attach custom attributes to an HTML element.\r\n */\r\nexport function CustomData<V = number | object>(name: string, value: V) { return attr(\"data-\" + name.toLowerCase(), value, true); }\r\n\r\n/**\r\n * Indicates the date and time associated with the element.\r\n  **/\r\nexport function DateTime(value: Date) { return attr(\"datetime\", value, false, \"del\", \"ins\", \"time\"); }\r\n\r\n/**\r\n * Indicates the preferred method to decode the image.\r\n  **/\r\nexport function Decoding(value: string) { return attr(\"decoding\", value, false, \"img\"); }\r\n\r\n/**\r\n * Indicates that the track should be enabled unless the user's preferences indicate something different.\r\n  **/\r\nexport function Default(value: boolean | string) { return attr(\"default\", value, false, \"track\"); }\r\n\r\n/**\r\n * Indicates that the script should be executed after the page has been parsed.\r\n  **/\r\nexport function Defer(value: boolean) { return attr(\"defer\", value, false, \"script\"); }\r\n\r\n/**\r\n * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n  **/\r\nexport function Dir(value: string) { return attr(\"dir\", value, false); }\r\n\r\n/**\r\n * Indicates whether the user can interact with the element.\r\n  **/\r\nexport function Disabled(value: boolean) { return attr(\"disabled\", value, false, \"button\", \"command\", \"fieldset\", \"input\", \"keygen\", \"optgroup\", \"option\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * ??? \r\n  **/\r\nexport function DirName(value: string) { return attr(\"dirname\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * Indicates that the hyperlink is to be used for downloading a resource by giving the file a name.\r\n  **/\r\nexport function Download(value: string) { return attr(\"download\", value, false, \"a\", \"area\"); }\r\n\r\n/**\r\n * Defines whether the element can be dragged.\r\n  **/\r\nexport function Draggable(value: boolean) { return attr(\"draggable\", value, false); }\r\n\r\n/**\r\n * Indicates that the element accepts the dropping of content onto it.\r\n  **/\r\nexport function DropZone(value: string) { return attr(\"dropzone\", value, false); }\r\n\r\n/**\r\n * Defines the content type of the form data when the method is POST.\r\n  **/\r\nexport function EncType(value: string) { return attr(\"enctype\", value, false, \"form\"); }\r\n\r\n/**\r\n * The enterkeyhint specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute).\r\n  **/\r\nexport function EnterKeyHint(value: string) { return attr(\"enterkeyhint\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * Describes elements which belongs to this one.\r\n  **/\r\nexport function HtmlFor(value: string) { return attr(\"htmlFor\", value, false, \"label\", \"output\"); }\r\n\r\n/**\r\n * Indicates the form that is the owner of the element.\r\n  **/\r\nexport function Form_attr(value: string) { return attr(\"form\", value, false, \"button\", \"fieldset\", \"input\", \"keygen\", \"label\", \"meter\", \"object\", \"output\", \"progress\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * Indicates the action of the element, overriding the action defined in the <form>.\r\n  **/\r\nexport function FormAction(value: string) { return attr(\"formaction\", value, false, \"input\", \"button\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button's form owner.\r\n  **/\r\nexport function FormEncType(value: string) { return attr(\"formenctype\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.\r\n  **/\r\nexport function FormMethod(value: string) { return attr(\"formmethod\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner.\r\n  **/\r\nexport function FormNoValidate(value: boolean) { return attr(\"formnovalidate\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the target attribute of the button's form owner.\r\n  **/\r\nexport function FormTarget(value: string) { return attr(\"formtarget\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * Width of the border to put around an `iframe` tag.\r\n */\r\nexport function FrameBorder(value: string | number | boolean) {\r\n    if (isBoolean(value)) {\r\n        value = value ? \"yes\" : \"no\";\r\n    }\r\n\r\n    return attr(\"frameborder\", value, false, \"iframe\");\r\n}\r\n\r\n/**\r\n * IDs of the <th> elements which applies to this element.\r\n  **/\r\nexport function Headers(value: string) { return attr(\"headers\", value, false, \"td\", \"th\"); }\r\n\r\n/**\r\n * Specifies the height of elements listed here. For all other elements, use the CSS height property.\r\n  **/\r\nexport function Height(value: number | string) { return attr(\"height\", value, false, \"canvas\", \"embed\", \"iframe\", \"img\", \"input\", \"object\", \"video\"); }\r\n\r\n/**\r\n * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n  **/\r\nexport function Hidden(value: boolean) { return attr(\"hidden\", value, false); }\r\n\r\n/**\r\n * Indicates the lower bound of the upper range.\r\n  **/\r\nexport function High(value: number) { return attr(\"high\", value, false, \"meter\"); }\r\n\r\n/**\r\n * The URL of a linked resource.\r\n  **/\r\nexport function Href(value: string | URL | Blob) {\r\n    if (value instanceof Blob) {\r\n        value = URL.createObjectURL(value);\r\n    }\r\n\r\n    return attr(\"href\", unpackURL(value), false, \"a\", \"area\", \"base\", \"link\");\r\n}\r\n\r\n/**\r\n * Specifies the language of the linked resource.\r\n  **/\r\nexport function HrefLang(value: string) { return attr(\"hreflang\", value, false, \"a\", \"area\", \"link\"); }\r\n\r\n/**\r\n * Defines a pragma directive.\r\n  **/\r\nexport function HttpEquiv(value: string) { return attr(\"httpEquiv\", value, false, \"meta\"); }\r\n\r\n/**\r\n * Specifies a picture which represents the command.\r\n  **/\r\nexport function Icon(value: string) { return attr(\"icon\", value, false, \"command\"); }\r\n\r\n/**\r\n * Often used with CSS to style a specific element. The value of this attribute must be unique.\r\n  **/\r\nexport function ID(value: string) { return attr(\"id\", value, false); }\r\n\r\n/**\r\n * Indicates the relative fetch priority for the resource.\r\n  **/\r\nexport function Importance(value: string) { return attr(\"importance\", value, false, \"iframe\", \"img\", \"link\", \"script\"); }\r\n\r\n/**\r\n * Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute).\r\n  **/\r\nexport function InputMode(value: string) { return attr(\"inputmode\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * Specifies a Subresource Integrity value that allows browsers to verify what they fetch.\r\n  **/\r\nexport function Integrity(value: string) { return attr(\"integrity\", value, false, \"link\", \"script\"); }\r\n\r\n/**\r\n * This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it\u2019s the size specified in the attribute.\r\n  **/\r\nexport function IntrinsicSize(value: string) { return attr(\"intrinsicsize\", value, false, \"img\"); }\r\n\r\nexport function Is(value: string) { return attr(\"is\", value, false); }\r\n\r\n/**\r\n * Indicates that the image is part of a server-side image map.\r\n  **/\r\nexport function IsMap(value: boolean) { return attr(\"ismap\", value, false, \"img\"); }\r\n\r\n/**\r\n * The itemprop attribute\r\n  **/\r\nexport function ItemProp(value: string) { return attr(\"itemprop\", value, false); }\r\n\r\n/**\r\n * Specifies the type of key generated.\r\n  **/\r\nexport function KeyType(value: string) { return attr(\"keytype\", value, false, \"keygen\"); }\r\n\r\n/**\r\n * Specifies the kind of text track.\r\n  **/\r\nexport function Kind(value: string) { return attr(\"kind\", value, false, \"track\"); }\r\n\r\n/**\r\n * Specifies a user-readable title of the element.\r\n  **/\r\nexport function Label_attr(value: string) { return attr(\"label\", value, false, \"optgroup\", \"option\", \"track\"); }\r\n\r\n/**\r\n * Defines the language used in the element.\r\n  **/\r\nexport function Lang(value: string) { return attr(\"lang\", value, false); }\r\n\r\n/**\r\n * Defines the script language used in the element.\r\n  **/\r\nexport function Language(value: string) { return attr(\"language\", value, false, \"script\"); }\r\n\r\n/**\r\n * Identifies a list of pre-defined options to suggest to the user.\r\n  **/\r\nexport function List(value: string | HTMLDataListElement) {\r\n    if (value instanceof HTMLDataListElement) {\r\n        if (isNullOrUndefined(value.id)) {\r\n            value.id = stringRandom(12);\r\n        }\r\n\r\n        if (!value.isConnected) {\r\n            document.body.append(value);\r\n        }\r\n\r\n        value = value.id;\r\n    }\r\n\r\n    return attr(\"list\", value, true, \"input\");\r\n}\r\n\r\n/**\r\n * Indicates whether the media should start playing from the start when it's finished.\r\n  **/\r\nexport function Loop(value: boolean) { return attr(\"loop\", value, false, \"audio\", \"bgsound\", \"marquee\", \"video\"); }\r\n\r\n/**\r\n * Indicates the upper bound of the lower range.\r\n  **/\r\nexport function Low(value: number) { return attr(\"low\", value, false, \"meter\"); }\r\n\r\n/**\r\n * Indicates the maximum value allowed.\r\n  **/\r\nexport function Max(value: number) { return attr(\"max\", value, false, \"input\", \"meter\", \"progress\"); }\r\n\r\n/**\r\n * Defines the maximum number of characters allowed in the element.\r\n  **/\r\nexport function MaxLength(value: number) { return attr(\"maxlength\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * Defines the minimum number of characters allowed in the element.\r\n  **/\r\nexport function MinLength(value: number) { return attr(\"minlength\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * Specifies a hint of the media for which the linked resource was designed.\r\n  **/\r\nexport function Media(value: string) { return attr(\"media\", value, false, \"a\", \"area\", \"link\", \"source\", \"style\"); }\r\n\r\n/**\r\n * Defines which HTTP method to use when submitting the form. Can be GET (default) or POST.\r\n  **/\r\nexport function Method(value: string) { return attr(\"method\", value, false, \"form\"); }\r\n\r\n/**\r\n * Indicates the minimum value allowed.\r\n  **/\r\nexport function Min(value: number) { return attr(\"min\", value, false, \"input\", \"meter\"); }\r\n\r\n/**\r\n * Indicates whether multiple values can be entered in an input of the type email or file.\r\n  **/\r\nexport function Multiple(value: boolean) { return attr(\"multiple\", value, false, \"input\", \"select\"); }\r\n\r\n/**\r\n * Indicates whether the audio will be initially silenced on page load.\r\n  **/\r\nexport function Muted(value: boolean) { return attr(\"muted\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * Name of the element. For example used by the server to identify the fields in form submits.\r\n  **/\r\nexport function Name(value: string) { return attr(\"name\", value, false, \"button\", \"form\", \"fieldset\", \"iframe\", \"input\", \"keygen\", \"map\", \"meta\", \"object\", \"output\", \"param\", \"select\", \"slot\", \"textarea\"); }\r\n\r\n/**\r\n * This attribute indicates that the form shouldn't be validated when submitted.\r\n  **/\r\nexport function NoValidate(value: boolean) { return attr(\"novalidate\", value, false, \"form\"); }\r\n\r\n/**\r\n * Indicates whether the details will be shown on page load.\r\n  **/\r\nexport function Open(value: boolean) { return attr(\"open\", value, false, \"details\"); }\r\n\r\n/**\r\n * Indicates the optimal numeric value.\r\n  **/\r\nexport function Optimum(value: number) { return attr(\"optimum\", value, false, \"meter\"); }\r\n\r\n/**\r\n * Defines a regular expression which the element's value will be validated against.\r\n  **/\r\nexport function Pattern(value: string) { return attr(\"pattern\", value, false, \"input\"); }\r\n\r\n/**\r\n * The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink.\r\n  **/\r\nexport function Ping(value: string) { return attr(\"ping\", value, false, \"a\", \"area\"); }\r\n\r\n/**\r\n * Provides a hint to the user of what can be entered in the field.\r\n  **/\r\nexport function PlaceHolder(value: string) { return attr(\"placeholder\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * A URL indicating a poster frame to show until the user plays or seeks.\r\n  **/\r\nexport function Poster(value: string) { return attr(\"poster\", value, false, \"video\"); }\r\n\r\n/**\r\n * Indicates whether the whole resource, parts of it or nothing should be preloaded.\r\n  **/\r\nexport function Preload(value: boolean | string) { return attr(\"preload\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * Attempts to find an element under a given element.\r\n * @param root\r\n * @param selector\r\n */\r\nexport function Query(root: ParentNode, selector: string): HtmlAttr<\"query\", HTMLElement>;\r\n/**\r\n * Attempts to find an element in the document.\r\n * @param selector\r\n */\r\nexport function Query(selector: string): HtmlAttr<\"query\", HTMLElement>;\r\n/**\r\n * Attempts to find an element in the document.\r\n * @param rootOrSelector\r\n * @param selector\r\n */\r\nexport function Query(rootOrSelector: ParentNode | string, selector?: string) {\r\n    let root: ParentNode = null;\r\n    if (isString(rootOrSelector)) {\r\n        root = document;\r\n        selector = rootOrSelector;\r\n    }\r\n    else {\r\n        root = rootOrSelector;\r\n    }\r\n\r\n    const elem = root.querySelector(selector);\r\n    return attr(\"query\", elem, false);\r\n}\r\n\r\nexport function QueryAll<T extends Element>(root: ParentNode, selector: string): T[];\r\n/**\r\n * Attempts to find an element in the document.\r\n * @param selector\r\n */\r\nexport function QueryAll<T extends Element = HTMLElement>(selector: string): T[];\r\n/**\r\n * Attempts to find an element in the document.\r\n * @param rootOrSelector\r\n * @param selector\r\n */\r\nexport function QueryAll<T extends Element = HTMLElement>(rootOrSelector: ParentNode | string, selector?: string): T[] {\r\n    let root: ParentNode = null;\r\n    if (isString(rootOrSelector)) {\r\n        root = document;\r\n        selector = rootOrSelector;\r\n    }\r\n    else {\r\n        root = rootOrSelector;\r\n    }\r\n\r\n    const elems = root.querySelectorAll(selector);\r\n    return Array.from(elems) as T[];\r\n}\r\n\r\n/**\r\n * Indicates whether the element can be edited.\r\n  **/\r\nexport function ReadOnly(value: boolean) { return attr(\"readonly\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * The radiogroup attribute\r\n  **/\r\nexport function RadioGroup(value: string) { return attr(\"radiogroup\", value, false, \"command\"); }\r\n\r\n/**\r\n * Specifies which referrer is sent when fetching the resource.\r\n  **/\r\nexport function ReferrerPolicy(value: string) { return attr(\"referrerpolicy\", value, false, \"a\", \"area\", \"iframe\", \"img\", \"link\", \"script\"); }\r\n\r\n/**\r\n * Specifies the relationship of the target object to the link object.\r\n  **/\r\nexport function Rel(value: string) { return attr(\"rel\", value, false, \"a\", \"area\", \"link\"); }\r\n\r\n/**\r\n * Indicates whether this element is required to fill out or not.\r\n  **/\r\nexport function Required(value: boolean) { return attr(\"required\", value, false, \"input\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * Indicates whether the list should be displayed in a descending order instead of a ascending.\r\n  **/\r\nexport function Reversed(value: boolean) { return attr(\"reversed\", value, false, \"ol\"); }\r\n\r\n/**\r\n * Defines the number of rows in a text area.\r\n  **/\r\nexport function Role(value: string) { return attr(\"role\", value, false); }\r\n\r\n/**\r\n * The rows attribute\r\n  **/\r\nexport function Rows(value: number) { return attr(\"rows\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * Defines the number of rows a table cell should span over.\r\n  **/\r\nexport function RowSpan(value: number) { return attr(\"rowspan\", value, false, \"td\", \"th\"); }\r\n\r\n/**\r\n * Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).\r\n  **/\r\nexport function Sandbox(value: string) { return attr(\"sandbox\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * Defines the cells that the header test (defined in the th element) relates to.\r\n  **/\r\nexport function Scope(value: string) { return attr(\"scope\", value, false, \"th\"); }\r\n\r\n/**\r\n * The scoped attribute for `style` tags.\r\n  **/\r\nexport function Scoped(value: boolean) { return attr(\"scoped\", value, false, \"style\"); }\r\n\r\n/**\r\n * The scrolling attribute for `iframe` tags.\r\n  **/\r\nexport function Scrolling(value: boolean) { return attr(\"scrolling\", value ? \"yes\" : \"no\", false, \"iframe\"); }\r\n\r\n/**\r\n * Defines an `option` tag which will be selected on page load.\r\n  **/\r\nexport function Selected(value: boolean) { return attr(\"selected\", value, false, \"option\"); }\r\n\r\n/**\r\n * The shape attribute for `a` and `area` tags.\r\n  **/\r\nexport function Shape(value: string) { return attr(\"shape\", value, false, \"a\", \"area\"); }\r\n\r\n/**\r\n * Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters.\r\n  **/\r\nexport function Size(value: number) { return attr(\"size\", value, false, \"input\", \"select\"); }\r\n\r\n/**\r\n * Assigns a slot in a shadow DOM shadow tree to an element.\r\n  **/\r\nexport function Slot_attr(value: string) { return attr(\"slot\", value, false); }\r\n\r\n/**\r\n * The sizes attribute\r\n  **/\r\nexport function Sizes(value: string) { return attr(\"sizes\", value, false, \"link\", \"img\", \"source\"); }\r\n\r\n/**\r\n * The span attribute\r\n  **/\r\nexport function Span_attr(value: string) { return attr(\"span\", value, false, \"col\", \"colgroup\"); }\r\n\r\n/**\r\n * Indicates whether spell checking is allowed for the element.\r\n  **/\r\nexport function SpellCheck(value: boolean) { return attr(\"spellcheck\", value, false); }\r\n\r\nfunction unpackURL(value: string | URL) {\r\n    if (value instanceof URL) {\r\n        value = value.href;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n/**\r\n * The URL of the embeddable content.\r\n  **/\r\nexport function Src(value: string | URL) {\r\n    return attr(\"src\", unpackURL(value), false, \"audio\", \"embed\", \"iframe\", \"img\", \"input\", \"script\", \"source\", \"track\", \"video\");\r\n}\r\n\r\n/**\r\n * The srcdoc attribute\r\n  **/\r\nexport function SrcDoc(value: string) { return attr(\"srcdoc\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * The srclang attribute\r\n  **/\r\nexport function SrcLang(value: string) { return attr(\"srclang\", value, false, \"track\"); }\r\n\r\n/**\r\n * A MediaStream object to use as a source for an HTML video or audio element\r\n  **/\r\nexport function SrcObject(value: MediaProvider) { return attr(\"srcObject\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * One or more responsive image candidates.\r\n  **/\r\nexport function SrcSet(value: string) { return attr(\"srcset\", value, false, \"img\", \"source\"); }\r\n\r\n/**\r\n * Defines the first number if other than 1.\r\n  **/\r\nexport function Start(value: number) { return attr(\"start\", value, false, \"ol\"); }\r\n\r\n/**\r\n * The step attribute\r\n  **/\r\nexport function Step(value: number) { return attr(\"step\", value, false, \"input\"); }\r\n\r\n/**\r\n * The summary attribute\r\n  **/\r\nexport function Summary_attr(value: string) { return attr(\"summary\", value, false, \"table\"); }\r\n\r\n/**\r\n * Overrides the browser's default tab order and follows the one specified instead.\r\n  **/\r\nexport function TabIndex(value: number) { return attr(\"tabindex\", value, false); }\r\n\r\n/**\r\n * Text to be displayed in a tooltip when hovering over the element.\r\n  **/\r\nexport function Title_attr(value: string) { return attr(\"title\", value, false); }\r\n\r\n/**\r\n * The target attribute\r\n  **/\r\nexport function Target(value: string) { return attr(\"target\", value, false, \"a\", \"area\", \"base\", \"form\"); }\r\n\r\n/**\r\n * Specify whether an element\u2019s attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged.\r\n  **/\r\nexport function Translate(value: boolean) { return attr(\"translate\", value, false); }\r\n\r\n/**\r\n * Defines the type of the element.\r\n  **/\r\nexport function Type(value: string | MediaType) {\r\n    if (!isString(value)) {\r\n        value = value.value;\r\n    }\r\n    return attr(\"type\", value, false, \"button\", \"input\", \"command\", \"embed\", \"link\", \"object\", \"script\", \"source\", \"style\", \"menu\");\r\n}\r\n\r\n/**\r\n * Defines a default value which will be displayed in the element on page load.\r\n  **/\r\nexport function Value(value: string | number) { return attr(\"value\", value, false, \"button\", \"data\", \"input\", \"li\", \"meter\", \"option\", \"progress\", \"param\"); }\r\n\r\n/**\r\n * Defines a default value which will be displayed in the element on page load.\r\n  **/\r\nexport function ValueAsNumber(value: number) { return attr(\"valueAsNumber\", value, false, \"input\"); }\r\n\r\n/**\r\n * Defines a default value which will be displayed in the element on page load.\r\n  **/\r\nexport function ValueAsDate(value: Date) { return attr(\"valueAsDate\", value, false, \"input\"); }\r\n\r\n/**\r\n * setting the volume at which a media element plays.\r\n  **/\r\nexport function Volume(value: number) { return attr(\"volume\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * The usemap attribute\r\n  **/\r\nexport function UseMap(value: boolean) { return attr(\"usemap\", value, false, \"img\", \"input\", \"object\"); }\r\n\r\n/**\r\n * For the elements listed here, this establishes the element's width.\r\n  **/\r\nexport function Width(value: number | string) { return attr(\"width\", value, false, \"canvas\", \"embed\", \"iframe\", \"img\", \"input\", \"object\", \"video\"); }\r\n\r\n/**\r\n * Indicates whether the text should be wrapped.\r\n  **/\r\nexport type HTMLTextAreaWrapValue =\r\n    | \"hard\"\r\n    | \"soft\"\r\n    | \"off\";\r\nexport function Wrap(value: HTMLTextAreaWrapValue) { return attr(\"wrap\", value, false, \"textarea\"); }", "import { isArray, isDefined, isNumber, isString } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { IElementAppliable } from \"./tags\";\r\n\r\nfunction asInt(v: number | string): string {\r\n    return isNumber(v) ? v.toFixed(0) : v;\r\n}\r\n\r\nexport function perc(value: number): CssPercentage {\r\n    return `${value}%`;\r\n}\r\n\r\nexport function deg(value: number): CssAngle {\r\n    return `${value}deg`;\r\n}\r\n\r\nexport function rad(value: number): CssAngle {\r\n    return `${value}rad`;\r\n}\r\n\r\nexport function grad(value: number): CssAngle {\r\n    return `${value}grad`;\r\n}\r\n\r\nexport function turn(value: number): CssAngle {\r\n    return `${value}turn`;\r\n}\r\n\r\nexport function cap(value: number): CssFontRelativeLength {\r\n    return `${value}cap`;\r\n}\r\n\r\nexport function ch(value: number): CssFontRelativeLength {\r\n    return `${value}ch`;\r\n}\r\n\r\nexport function em(value: number): CssFontRelativeLength {\r\n    return `${value}em`;\r\n}\r\n\r\nexport function ex(value: number): CssFontRelativeLength {\r\n    return `${value}ex`;\r\n}\r\n\r\nexport function ic(value: number): CssFontRelativeLength {\r\n    return `${value}ic`;\r\n}\r\n\r\nexport function lh(value: number): CssFontRelativeLength {\r\n    return `${value}lh`;\r\n}\r\n\r\nexport function rem(value: number): CssFontRelativeLength {\r\n    return `${value}rem`;\r\n}\r\n\r\nexport function rlh(value: number): CssFontRelativeLength {\r\n    return `${value}rlh`;\r\n}\r\n\r\nexport function vh(value: number): CssViewportPercentageLength {\r\n    return `${value}vh`;\r\n}\r\n\r\nexport function vw(value: number): CssViewportPercentageLength {\r\n    return `${value}vw`;\r\n}\r\n\r\nexport function vi(value: number): CssViewportPercentageLength {\r\n    return `${value}vi`;\r\n}\r\n\r\nexport function vb(value: number): CssViewportPercentageLength {\r\n    return `${value}vb`;\r\n}\r\n\r\nexport function vmin(value: number): CssViewportPercentageLength {\r\n    return `${value}vmin`;\r\n}\r\n\r\nexport function vmax(value: number): CssViewportPercentageLength {\r\n    return `${value}vmax`;\r\n}\r\n\r\nexport function px(value: number): CssAbsoluteLength {\r\n    return `${value}px`;\r\n}\r\n\r\nexport function cm(value: number): CssAbsoluteLength {\r\n    return `${value}cm`;\r\n}\r\n\r\nexport function mm(value: number): CssAbsoluteLength {\r\n    return `${value}mm`;\r\n}\r\n\r\nexport function Q(value: number): CssAbsoluteLength {\r\n    return `${value}Q`;\r\n}\r\n\r\nexport function inch(value: number): CssAbsoluteLength {\r\n    return `${value}in`;\r\n}\r\n\r\nexport function pc(value: number): CssAbsoluteLength {\r\n    return `${value}pc`;\r\n}\r\n\r\nexport function pt(value: number): CssAbsoluteLength {\r\n    return `${value}pt`;\r\n}\r\n\r\nexport function fr(value: number): CssGridFlexValue {\r\n    return `${value}fr`;\r\n}\r\n\r\nexport function hash(r: HexDigit, g: HexDigit, b: HexDigit, a?: HexDigit): CssColorHashValue;\r\nexport function hash(r: HexNumber, g: HexNumber, b: HexNumber, a?: HexNumber): CssColorHashValue;\r\nexport function hash(r: string, g: string, b: string, a?: string): CssColorHashValue {\r\n    if (isDefined(a)) {\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n    else {\r\n        return `#${r}${g}${b}`;\r\n    }\r\n}\r\n\r\nexport function rgb(red: number, green: number, blue: number, alpha?: number): CssColorRGBValue;\r\nexport function rgb(...v: number[]): CssColorRGBValue {\r\n    return `rgb(${v.join(\", \")})`;\r\n}\r\n\r\nexport function rgba(red: number, green: number, blue: number, alpha: number): CssColorRGBValue;\r\nexport function rgba(...v: number[]): CssColorRGBValue {\r\n    return `rgba(${v.join(\", \")})`;\r\n}\r\n\r\nexport function hsl(hue: CssAngle, saturation: CssPercentage, lightness: CssPercentage, alpha?: CssAlpha): CssColorHSLValue;\r\nexport function hsl(...v: (string | number)[]): CssColorHSLValue {\r\n    return `hsl(${v.join(\", \")})`;\r\n}\r\n\r\nexport function hsla(hue: CssAngle, saturation: CssPercentage, lightness: CssPercentage, alpha: CssAlpha): CssColorHSLValue;\r\nexport function hsla(...v: (string | number)[]): CssColorHSLValue {\r\n    return `hsla(${v.join(\", \")})`;\r\n}\r\n\r\nexport function hwb(hue: CssAngle, whiteness: CssPercentage, blackness: CssPercentage, alpha?: CssAlpha): CssColorHWBValue {\r\n    if (isDefined(alpha)) {\r\n        return `hwb(${hue} ${whiteness} ${blackness} / ${alpha})`;\r\n    }\r\n    else {\r\n        return `hwb(${hue} ${whiteness} ${blackness})`;\r\n    }\r\n}\r\n\r\nexport function lch(lightness: CssPercentage, chroma: number, hue: CssAngle, alpha?: CssAlpha): CssColorLCHValue {\r\n    if (isDefined(alpha)) {\r\n        return `lch(${lightness} ${chroma} ${hue} / ${alpha})`;\r\n    }\r\n    else {\r\n        return `lch(${lightness} ${chroma} ${hue})`;\r\n    }\r\n}\r\n\r\nexport function lab(lightness: CssPercentage, a: number, b: number, alpha?: CssAlpha): CssColorLabValue {\r\n    if (isDefined(alpha)) {\r\n        return `lab(${lightness} ${a} ${b} / ${alpha})`;\r\n    }\r\n    else {\r\n        return `lab(${lightness} ${a} ${b})`;\r\n    }\r\n}\r\n\r\nexport function matrix(a: number, b: number, c: number, d: number, tx: number, ty: number): CssTransformMatrixValue {\r\n    return `matrix(${a}, ${b}, ${c}, ${d}, ${tx}, ${ty})`\r\n}\r\n\r\nexport function matrix3d(\r\n    a1: number, b1: number, c1: number, d1: number,\r\n    a2: number, b2: number, c2: number, d2: number,\r\n    a3: number, b3: number, c3: number, d3: number,\r\n    a4: number, b4: number, c4: number, d4: number): CssTransformMatrix3DValue {\r\n    return `matrix3d(${a1}, ${b1}, ${c1}, ${d1}, ${a2}, ${b2}, ${c2}, ${d2}, ${a3}, ${b3}, ${c3}, ${d3}, ${a4}, ${b4}, ${c4}, ${d4})`;\r\n}\r\n\r\nexport function perspectiv(v: CssLength | \"none\"): CssTransformPerspectiveValue {\r\n    return `perspective(${v})`;\r\n}\r\n\r\nexport function rotate(a: CssAngle): CssTransformRotate {\r\n    return `rotate(${a})`;\r\n}\r\n\r\nexport function rotate3d(x: number, y: number, z: number, a: CssAngle): CSSTransformRotate3D {\r\n    return `rotate3d(${x}, ${y}, ${z}, ${a})`;\r\n}\r\n\r\nexport function rotateX(a: CssAngle): CssTransformRotateX {\r\n    return `rotateX(${a})`;\r\n}\r\n\r\nexport function rotateY(a: CssAngle): CssTransformRotateY {\r\n    return `rotateY(${a})`;\r\n}\r\n\r\nexport function rotateZ(a: CssAngle): CssTransformRotateZ {\r\n    return `rotateZ(${a})`;\r\n}\r\n\r\nexport function translate(x: CssLengthPercentage, y: CssLengthPercentage): CssTransformTranslate {\r\n    return `translate(${x}, ${y})`;\r\n}\r\n\r\nexport function translate3d(x: CssLengthPercentage, y: CssLengthPercentage, z: CssLengthPercentage): CSSTransformTranslate3D {\r\n    return `translate3d(${x}, ${y}, ${z})`;\r\n}\r\n\r\nexport function translateX(x: CssLengthPercentage): CssTransformTranslateX {\r\n    return `translateX(${x})`;\r\n}\r\n\r\nexport function translateY(y: CssLengthPercentage): CssTransformTranslateY {\r\n    return `translateY(${y})`;\r\n}\r\n\r\nexport function translateZ(z: CssLengthPercentage): CssTransformTranslateZ {\r\n    return `translateZ(${z})`;\r\n}\r\n\r\nexport function scale(x: number, y: number): CssTransformScale {\r\n    return `scale(${x}, ${y})`;\r\n}\r\n\r\nexport function scale3d(x: number, y: number, z: number): CSSTransformScale3D {\r\n    return `scale3d(${x}, ${y}, ${z})`;\r\n}\r\n\r\nexport function scaleX(x: number): CssTransformScaleX {\r\n    return `scaleX(${x})`;\r\n}\r\n\r\nexport function scaleY(y: number): CssTransformScaleY {\r\n    return `scaleY(${y})`;\r\n}\r\n\r\nexport function scaleZ(z: number): CssTransformScaleZ {\r\n    return `scaleZ(${z})`;\r\n}\r\n\r\nexport function skew(x: CssAngle, y: CssAngle): CssTransformSkew {\r\n    return `skew(${x}, ${y})`;\r\n}\r\n\r\nexport function skewX(x: CssAngle): CssTransformSkewX {\r\n    return `skewX(${x})`;\r\n}\r\n\r\nexport function skewY(y: CssAngle): CssTransformSkewY {\r\n    return `skewY(${y})`;\r\n}\r\n\r\nexport function repeat(count: number | \"auto-fill\" | \"auto-fit\", expr: string): CssGridTemplateTrackRepeatValue {\r\n    return `repeat(${count}, ${expr})`;\r\n}\r\n\r\nexport function fitContent(len: CssLengthPercentage): CssGridTemplateTrackFitContentValue {\r\n    return `fit-content(${len})`;\r\n}\r\n\r\nexport function minMax(min: CssGridTemplateTrackSize, max: CssGridTemplateTrackSize): CssGridTemplateTrackMinMaxValue {\r\n    return `minmax(${min}, ${max})`;\r\n}\r\n/**\r\n * A selection of fonts for preferred monospace rendering.\r\n **/\r\nexport function getMonospaceFonts() {\r\n    return \"ui-monospace, 'Droid Sans Mono', 'Cascadia Mono', 'Segoe UI Mono', 'Ubuntu Mono', 'Roboto Mono', Menlo, Monaco, Consolas, monospace\";\r\n}\r\n\r\n/**\r\n * A selection of fonts for preferred monospace rendering.\r\n **/\r\nexport function getMonospaceFamily() {\r\n    return fontFamily(getMonospaceFonts());\r\n}\r\n\r\n/**\r\n * A selection of fonts that should match whatever the user's operating system normally uses.\r\n **/\r\nexport function getSystemFonts() {\r\n    return \"system-ui, -apple-system, '.SFNSText-Regular', 'San Francisco', 'Segoe UI', 'Ubuntu', 'Roboto', 'Noto Sans' 'Droid Sans', sans-serif\";\r\n}\r\n\r\n/**\r\n * A selection of fonts that should match whatever the user's operating system normally uses.\r\n **/\r\nexport function getSystemFamily() {\r\n    return fontFamily(getSystemFonts());\r\n}\r\n\r\n/**\r\n * A selection of serif fonts.\r\n **/\r\nexport function getSerifFonts() {\r\n    return \"Georgia, Cambria, 'Times New Roman', Times, serif\";\r\n}\r\n\r\nexport function getSerifFamily() {\r\n    return fontFamily(getSerifFonts());\r\n}\r\n\r\nexport type CssPropName = Exclude<keyof CSSStyleDeclaration,\r\n    \"length\"\r\n    | \"parentRule\"\r\n    | \"getPropertyPriority\"\r\n    | \"getPropertyValue\"\r\n    | \"item\"\r\n    | \"removeProperty\"\r\n    | \"setProperty\"> & string;\r\n\r\nexport class Prop {\r\n    constructor(private readonly _value: string) {\r\n\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class PropSet<T extends Prop = Prop> {\r\n    constructor(\r\n        private readonly pre: string,\r\n        private readonly props: (T | PropSet<T>)[],\r\n        private readonly post: string) {\r\n\r\n    }\r\n\r\n    get value(): string {\r\n        return this.pre\r\n            + this.props.map(p => p.toString()).join(\"\\n\")\r\n            + this.post;\r\n    }\r\n\r\n    toString() {\r\n        return this.value;\r\n    }\r\n\r\n    applyToSheet(sheet: CSSStyleSheet) {\r\n        sheet.insertRule(this.toString(), sheet.cssRules.length);\r\n    }\r\n}\r\n\r\nclass KeyValueProp extends Prop {\r\n    constructor(\r\n        private readonly _name: string,\r\n        private readonly sep: string,\r\n        value: string) {\r\n        super(value);\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    override toString() {\r\n        return this.name\r\n            + this.sep\r\n            + this.value\r\n            + \";\";\r\n    }\r\n}\r\n\r\nclass SelectorPropSet<T extends Prop = Prop> extends PropSet<T> {\r\n    constructor(selector: string, props: (T | PropSet<T>)[]) {\r\n        super(selector + \" {\\n\", props, \"\\n}\\n\");\r\n    }\r\n}\r\n\r\nclass CssDeclareProp\r\n    extends KeyValueProp {\r\n    constructor(key: string, value: string) {\r\n        super(key, \": \", value);\r\n    }\r\n}\r\n\r\nexport class CssElementStyleProp<K extends CssPropName = CssPropName>\r\n    extends CssDeclareProp\r\n    implements IElementAppliable {\r\n    private priority = \"\";\r\n\r\n    constructor(\r\n        public readonly key: K,\r\n        value: string | number) {\r\n        super(key.replace(/[A-Z]/g, (m) => `-${m.toLocaleLowerCase()}`), value.toString());\r\n    }\r\n\r\n    /**\r\n     * Set the attribute value on an HTMLElement\r\n     * @param elem - the element on which to set the attribute.\r\n     */\r\n    applyToElement(elem: HTMLElement) {\r\n        (elem.style as any)[this.key] = this.value + this.priority;\r\n    }\r\n\r\n    important(): this {\r\n        this.priority = \" !important\";\r\n        return this;\r\n    }\r\n\r\n    override get value(): string {\r\n        return super.value + this.priority;\r\n    }\r\n}\r\n\r\nexport function isCssElementStyleProp(obj: any): obj is CssElementStyleProp {\r\n    return obj instanceof CssElementStyleProp;\r\n}\r\n\r\nclass CssElementStylePropSet extends SelectorPropSet<CssElementStyleProp> {\r\n    constructor(selector: string, props: CssElementStyleProp[]) {\r\n        super(selector, props);\r\n    }\r\n}\r\n\r\nexport function rule(selector: string, ...props: CssElementStyleProp[]) {\r\n    return new CssElementStylePropSet(selector, props);\r\n}\r\n\r\nexport function alignItems(v: CssGlobalValue | CssJustifyAlignValue) { return new CssElementStyleProp(\"alignItems\", v); }\r\n\r\nexport function alignContent(v: CssGlobalValue | CssJustifyAlignContentValue) { return new CssElementStyleProp(\"alignContent\", v); }\r\n\r\nexport function alignSelf(v: CssGlobalValue | CssJustifyAlignSelfValue) { return new CssElementStyleProp(\"alignSelf\", v); }\r\n\r\nexport function all(v: CssGlobalValue) { return new CssElementStyleProp(\"all\", v); }\r\n\r\nexport function alignmentBaseline(v: CssAlignmentBaselineValue) { return new CssElementStyleProp(\"alignmentBaseline\", v); }\r\n\r\nexport function animationDelay(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationDelay(...v: CssTimeValue[]): CssElementStyleProp;\r\nexport function animationDelay(...v: string[]) { return new CssElementStyleProp(\"animationDelay\", v.join(\", \")); }\r\n\r\nexport function animationDuration(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationDuration(...v: CssTimeValue[]): CssElementStyleProp;\r\nexport function animationDuration(...v: string[]) { return new CssElementStyleProp(\"animationDuration\", v.join(\", \")); }\r\n\r\nexport function animationDirection(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationDirection(...v: CssAnimationDirectionValue[]): CssElementStyleProp;\r\nexport function animationDirection(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"animationDirection\", v.join(\", \")); }\r\n\r\nexport function animationFillMode(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationFillMode(...v: CssAnimationFillModeValue[]): CssElementStyleProp;\r\nexport function animationFillMode(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"animationFillMode\", v.join(\", \")); }\r\n\r\nexport function animationIterationCount(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationIterationCount(...v: CssAnimationIterationCountValue[]): CssElementStyleProp;\r\nexport function animationIterationCount(...v: (number | string)[]): CssElementStyleProp { return new CssElementStyleProp(\"animationIterationCount\", v.join(\", \")); }\r\n\r\nexport function animationName(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationName(...v: string[]): CssElementStyleProp;\r\nexport function animationName(...v: string[]) { return new CssElementStyleProp(\"animationName\", v.join(\", \")); }\r\n\r\nexport function animationPlayState(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationPlayState(...v: CssAnimationPlayStateValue[]): CssElementStyleProp;\r\nexport function animationPlayState(...v: string[]) { return new CssElementStyleProp(\"animationPlayState\", v.join(\", \")); }\r\n\r\nexport function animationTimingFunction(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animationTimingFunction(...v: CssAnimationTimingFunctionValue[]): CssElementStyleProp;\r\nexport function animationTimingFunction(...v: string[]) { return new CssElementStyleProp(\"animationTimingFunction\", v.join(\" \")); }\r\n\r\nexport function animation(v: CssGlobalValue): CssElementStyleProp;\r\nexport function animation(...v: (string | number)[]): CssElementStyleProp;\r\nexport function animation(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"animation\", v.join(\" \")); }\r\n\r\nexport function appearance(v: CssGlobalValue | CssAppearanceValue) { return new CssElementStyleProp(\"appearance\", v); }\r\n\r\nexport function backdropFilter(v: \"none\" | CssGlobalValue): CssElementStyleProp;\r\nexport function backdropFilter(...v: CssFilterFunction[]): CssElementStyleProp;\r\nexport function backdropFilter(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"backdropFilter\" as any, v.join(\" \")); }\r\n\r\nexport function backfaceVisibility(v: CssGlobalValue | CssBackfaceVisibilityValue) { return new CssElementStyleProp(\"backfaceVisibility\", v); }\r\n\r\nexport function backgroundAttachment(v: CssGlobalValue | CssBackgroundAttachmentValue) { return new CssElementStyleProp(\"backgroundAttachment\", v); }\r\n\r\nexport function backgroundBlendMode(v: CssGlobalValue): CssElementStyleProp;\r\nexport function backgroundBlendMode(...v: CssBlendModeValue[]): CssElementStyleProp;\r\nexport function backgroundBlendMode(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"backgroundBlendMode\", v.join(\", \")); }\r\n\r\nexport function backgroundClip(v: CssGlobalValue | CssClipValue): CssElementStyleProp { return new CssElementStyleProp(\"backgroundClip\", v); }\r\n\r\nexport function backgroundColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"backgroundColor\", v); }\r\n\r\nexport function backgroundImage(v: CssGlobalValue): CssElementStyleProp;\r\nexport function backgroundImage(...v: CssImage[]): CssElementStyleProp;\r\nexport function backgroundImage(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"backgroundImage\", v.join(\", \")); }\r\n\r\nexport function backgroundOrigin(v: CssGlobalValue | CssBoxType): CssElementStyleProp { return new CssElementStyleProp(\"backgroundOrigin\", v); }\r\n\r\nexport function backgroundPosition(v: CssGlobalValue): CssElementStyleProp;\r\nexport function backgroundPosition(v: CssBackgroundPositionValue): CssElementStyleProp;\r\nexport function backgroundPosition(x: CssLengthPercentage, y: CssLengthPercentage): CssElementStyleProp;\r\nexport function backgroundPosition(x: CssBackgroundPositionHorizontalKeyword, y: CssBackgroundPositionVerticalValue): CssElementStyleProp;\r\nexport function backgroundPosition(y: CssBackgroundPositionVerticalKeyword, x: CssBackgroundPositionHorizontalValue): CssElementStyleProp;\r\nexport function backgroundPosition(x: CssBackgroundPositionHorizontalKeyword, y: CssBackgroundPositionVerticalKeyword, yOffset: CssLengthPercentage): CssElementStyleProp;\r\nexport function backgroundPosition(x: CssBackgroundPositionHorizontalKeyword, xOffset: CssLengthPercentage, y: CssBackgroundPositionVerticalKeyword): CssElementStyleProp;\r\nexport function backgroundPosition(y: CssBackgroundPositionVerticalKeyword, x: CssBackgroundPositionHorizontalKeyword, xOffset: CssLengthPercentage): CssElementStyleProp;\r\nexport function backgroundPosition(y: CssBackgroundPositionVerticalKeyword, yOffset: CssLengthPercentage, x: CssBackgroundPositionHorizontalKeyword): CssElementStyleProp;\r\nexport function backgroundPosition(x: CssBackgroundPositionHorizontalKeyword, xOffset: CssLengthPercentage, y: CssBackgroundPositionVerticalKeyword, yOffset: CssLengthPercentage): CssElementStyleProp;\r\nexport function backgroundPosition(y: CssBackgroundPositionVerticalKeyword, yOffset: CssLengthPercentage, x: CssBackgroundPositionHorizontalKeyword, xOffset: CssLengthPercentage): CssElementStyleProp;\r\nexport function backgroundPosition(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"backgroundPosition\", v.join(\" \")); }\r\n\r\nexport function backgroundPositionX(v: CssGlobalValue): CssElementStyleProp;\r\nexport function backgroundPositionX(x: CssBackgroundPositionHorizontalValue): CssElementStyleProp;\r\nexport function backgroundPositionX(x: CssBackgroundPositionHorizontalKeyword, xOffset: CssLengthPercentage): CssElementStyleProp;\r\nexport function backgroundPositionX(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"backgroundPositionX\", v.join(\" \")); }\r\n\r\nexport function backgroundPositionY(v: CssGlobalValue): CssElementStyleProp;\r\nexport function backgroundPositionY(y: CssBackgroundPositionVerticalValue): CssElementStyleProp;\r\nexport function backgroundPositionY(y: CssBackgroundPositionVerticalKeyword, yOffset: CssLengthPercentage): CssElementStyleProp;\r\nexport function backgroundPositionY(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"backgroundPositionY\", v.join(\" \")); }\r\n\r\nexport function backgroundRepeat(v: CssGlobalValue): CssElementStyleProp;\r\nexport function backgroundRepeat(v: CssBackgroundRepeatValue): CssElementStyleProp;\r\nexport function backgroundRepeat(x: CssBackgroundRepeat, y: CssBackgroundRepeat): CssElementStyleProp;\r\nexport function backgroundRepeat(...v: string[]) { return new CssElementStyleProp(\"backgroundRepeat\", v.join(\" \")); }\r\n\r\nexport function backgroundSize(v: CssGlobalValue | CssBackgroundSizeSingleValue): CssElementStyleProp;\r\nexport function backgroundSize(x: CssBackgroundSizeValue, y: CssBackgroundSizeValue): CssElementStyleProp;\r\nexport function backgroundSize(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"backgroundSize\", v.join(\" \")); }\r\n\r\nexport function background(v: CssGlobalValue): CssElementStyleProp;\r\nexport function background(...v: string[]): CssElementStyleProp;\r\nexport function background(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"background\", v.join(\", \")); }\r\n\r\nexport function baselineShift(v: string) { return new CssElementStyleProp(\"baselineShift\", v); }\r\n\r\nexport function blockSize(v: CssGlobalValue | CssSizePropertyValue) { return new CssElementStyleProp(\"blockSize\", v); }\r\n\r\nexport function border(v: string | 0) { return new CssElementStyleProp(\"border\", v); }\r\n\r\nexport function borderBlockEnd(v: string) { return new CssElementStyleProp(\"borderBlockEnd\", v); }\r\n\r\nexport function borderBlockEndColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderBlockEndColor\", v); }\r\n\r\nexport function borderBlockEndStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderBlockEndStyle\", v); }\r\n\r\nexport function borderBlockEndWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderBlockEndWidth\", v); }\r\n\r\nexport function borderBlockStart(v: string) { return new CssElementStyleProp(\"borderBlockStart\", v); }\r\n\r\nexport function borderBlockStartColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderBlockStartColor\", v); }\r\n\r\nexport function borderBlockStartStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderBlockStartStyle\", v); }\r\n\r\nexport function borderBlockStartWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderBlockStartWidth\", v); }\r\n\r\nexport function borderBottom(v: string) { return new CssElementStyleProp(\"borderBottom\", v); }\r\n\r\nexport function borderBottomColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderBottomColor\", v); }\r\n\r\nexport function borderBottomLeftRadius(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderBottomLeftRadius(v: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderBottomLeftRadius(major: CssLengthPercentage, minor: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderBottomLeftRadius(...v: (string | number)[]) { return new CssElementStyleProp(\"borderBottomLeftRadius\", v.join(\" \")); }\r\n\r\nexport function borderBottomRightRadius(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderBottomRightRadius(v: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderBottomRightRadius(major: CssLengthPercentage, minor: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderBottomRightRadius(...v: (string | number)[]) { return new CssElementStyleProp(\"borderBottomRightRadius\", v.join(\" \")); }\r\n\r\nexport function borderBottomStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderBottomStyle\", v); }\r\n\r\nexport function borderBottomWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderBottomWidth\", v); }\r\n\r\nexport function borderCollapse(v: CssGlobalValue | CssBorderCollapseValue) { return new CssElementStyleProp(\"borderCollapse\", v); }\r\n\r\nexport function borderColor(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderColor(all: CssColorValue): CssElementStyleProp;\r\nexport function borderColor(vertical: CssColorValue, horizontal: CssColorValue): CssElementStyleProp;\r\nexport function borderColor(top: CssColorValue, horizontal: CssColorValue, bottom: CssColorValue): CssElementStyleProp;\r\nexport function borderColor(top: CssColorValue, right: CssColorValue, bottom: CssColorValue, left: CssColorValue): CssElementStyleProp;\r\nexport function borderColor(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"borderColor\", v.join(\" \")); }\r\n\r\nexport function borderImage(v: string) { return new CssElementStyleProp(\"borderImage\", v); }\r\n\r\nexport function borderImageOutset(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderImageOutset(all: CssLength | number): CssElementStyleProp;\r\nexport function borderImageOutset(vertical: CssLength | number, horizontal: CssLength | number): CssElementStyleProp;\r\nexport function borderImageOutset(top: CssLength | number, horizontal: CssLength | number, bottom: CssLength | number): CssElementStyleProp;\r\nexport function borderImageOutset(top: CssLength | number, right: CssLength | number, bottom: CssLength | number, left: CssLength | number): CssElementStyleProp;\r\nexport function borderImageOutset(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"borderImageOutset\", v.join(\" \")); }\r\n\r\nexport function borderImageRepeat(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderImageRepeat(all: CssBorderRepeatValue): CssElementStyleProp;\r\nexport function borderImageRepeat(vertical: CssBorderRepeatValue, horizontal: CssBorderRepeatValue): CssElementStyleProp;\r\nexport function borderImageRepeat(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"borderImageRepeat\", v.join(\" \")); }\r\n\r\nexport function borderImageSlice(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderImageSlice(all: CssLengthPercentage | \"fill\"): CssElementStyleProp;\r\nexport function borderImageSlice(vertical: CssLengthPercentage | \"fill\", horizontal: CssLengthPercentage | \"fill\"): CssElementStyleProp;\r\nexport function borderImageSlice(top: CssLengthPercentage | \"fill\", horizontal: CssLengthPercentage | \"fill\", bottom: CssLengthPercentage | \"fill\"): CssElementStyleProp;\r\nexport function borderImageSlice(top: CssLengthPercentage | \"fill\", right: CssLengthPercentage | \"fill\", bottom: CssLengthPercentage | \"fill\", left: CssLengthPercentage | \"fill\"): CssElementStyleProp;\r\nexport function borderImageSlice(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"borderImageSlice\", v.join(\" \")); }\r\n\r\nexport function borderImageSource(v: CssGlobalValue | CssImage | \"none\") { return new CssElementStyleProp(\"borderImageSource\", v); }\r\n\r\nexport function borderImageWidth(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderImageWidth(v: CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function borderImageWidth(vertical: CssLengthPercentage | \"auto\", horizontal: CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function borderImageWidth(top: CssLengthPercentage | \"auto\", horizontal: CssLengthPercentage | \"auto\", bottom: CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function borderImageWidth(top: CssLengthPercentage | \"auto\", right: CssLengthPercentage | \"auto\", bottom: CssLengthPercentage | \"auto\", left: CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function borderImageWidth(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"borderImageWidth\", v.join(\" \")); }\r\n\r\nexport function borderInlineEnd(v: string) { return new CssElementStyleProp(\"borderInlineEnd\", v); }\r\n\r\nexport function borderInlineEndColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderInlineEndColor\", v); }\r\n\r\nexport function borderInlineEndStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderInlineEndStyle\", v); }\r\n\r\nexport function borderInlineEndWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderInlineEndWidth\", v); }\r\n\r\nexport function borderInlineStart(v: string) { return new CssElementStyleProp(\"borderInlineStart\", v); }\r\n\r\nexport function borderInlineStartColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderInlineStartColor\", v); }\r\n\r\nexport function borderInlineStartStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderInlineStartStyle\", v); }\r\n\r\nexport function borderInlineStartWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderInlineStartWidth\", v); }\r\n\r\nexport function borderLeft(v: string) { return new CssElementStyleProp(\"borderLeft\", v); }\r\n\r\nexport function borderLeftColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderLeftColor\", v); }\r\n\r\nexport function borderLeftStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderLeftStyle\", v); }\r\n\r\nexport function borderLeftWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderLeftWidth\", v); }\r\n\r\nexport function borderRadius(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderRadius(all: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderRadius(all: [CssLengthPercentage, CssLengthPercentage]): CssElementStyleProp;\r\nexport function borderRadius(topLeftBottomRight: CssLengthPercentage, topRightBottomLeft: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderRadius(topLeft: CssLengthPercentage, topRightBottomLeft: CssLengthPercentage, bottomRight: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderRadius(topLeft: CssLengthPercentage, topRight: CssLengthPercentage, bottomRight: CssLengthPercentage, bottomLeft: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderRadius(...v: (string | number | (string | number)[])[]): CssElementStyleProp {\r\n    let value: string = null;\r\n    if (v.length === 0) {\r\n        value = \"\";\r\n    }\r\n    else if (isArray(v[0]) && isArray(v[1])) {\r\n        const left = v[0].join(\" \");\r\n        const right = v[1].join(\" \");\r\n        value = `${left} / ${right}`;\r\n    }\r\n    else {\r\n        value = v.join(\" \");\r\n    }\r\n    return new CssElementStyleProp(\"borderRadius\", value);\r\n}\r\n\r\nexport function borderRight(v: string) { return new CssElementStyleProp(\"borderRight\", v); }\r\n\r\nexport function borderRightColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderRightColor\", v); }\r\n\r\nexport function borderRightStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderRightStyle\", v); }\r\n\r\nexport function borderRightWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderRightWidth\", v); }\r\n\r\nexport function borderSpacing(v: string) { return new CssElementStyleProp(\"borderSpacing\", v); }\r\n\r\nexport function borderStyle(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderStyle(all: CssBorderStyleValue): CssElementStyleProp;\r\nexport function borderStyle(vertical: CssBorderStyleValue, horizontal: CssBorderStyleValue): CssElementStyleProp;\r\nexport function borderStyle(top: CssBorderStyleValue, horizontal: CssBorderStyleValue, bottom: CssBorderStyleValue): CssElementStyleProp;\r\nexport function borderStyle(top: CssBorderStyleValue, right: CssBorderStyleValue, bottom: CssBorderStyleValue, left: CssBorderStyleValue): CssElementStyleProp;\r\nexport function borderStyle(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"borderStyle\", v.join(\" \")); }\r\n\r\nexport function borderTop(v: string) { return new CssElementStyleProp(\"borderTop\", v); }\r\n\r\nexport function borderTopColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"borderTopColor\", v); }\r\n\r\nexport function borderTopLeftRadius(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderTopLeftRadius(v: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderTopLeftRadius(major: CssLengthPercentage, minor: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderTopLeftRadius(...v: (string | number)[]) { return new CssElementStyleProp(\"borderTopLeftRadius\", v.join(\" \")); }\r\n\r\nexport function borderTopRightRadius(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderTopRightRadius(v: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderTopRightRadius(major: CssLengthPercentage, minor: CssLengthPercentage): CssElementStyleProp;\r\nexport function borderTopRightRadius(...v: (string | number)[]) { return new CssElementStyleProp(\"borderTopRightRadius\", v.join(\" \")); }\r\n\r\nexport function borderTopStyle(v: CssGlobalValue | CssBorderStyleValue) { return new CssElementStyleProp(\"borderTopStyle\", v); }\r\n\r\nexport function borderTopWidth(v: CssGlobalValue | CssLengthPercentage | CssWidthKeyword | \"auto\") { return new CssElementStyleProp(\"borderTopWidth\", v); }\r\n\r\nexport function borderWidth(v: CssGlobalValue): CssElementStyleProp;\r\nexport function borderWidth(all: CssLengthPercentage | CssWidthKeyword | \"auto\"): CssElementStyleProp;\r\nexport function borderWidth(vert: CssLengthPercentage | CssWidthKeyword | \"auto\", horiz: CssLengthPercentage | CssWidthKeyword | \"auto\"): CssElementStyleProp;\r\nexport function borderWidth(top: CssLengthPercentage | CssWidthKeyword | \"auto\", horiz: CssLengthPercentage | CssWidthKeyword | \"auto\", bottom: CssLengthPercentage | CssWidthKeyword | \"auto\"): CssElementStyleProp;\r\nexport function borderWidth(top: CssLengthPercentage | CssWidthKeyword | \"auto\", right: CssLengthPercentage | CssWidthKeyword | \"auto\", bottom: CssLengthPercentage | CssWidthKeyword | \"auto\", left: CssLengthPercentage | CssWidthKeyword | \"auto\"): CssElementStyleProp;\r\nexport function borderWidth(...v: (string | number)[]) { return new CssElementStyleProp(\"borderWidth\", v.join(\" \")); }\r\n\r\nexport function bottom(v: CssGlobalValue | CssElementPositionValue) { return new CssElementStyleProp(\"bottom\", v); }\r\n\r\nexport function boxShadow(v: string) { return new CssElementStyleProp(\"boxShadow\", v); }\r\n\r\nexport function boxSizing(v: string) { return new CssElementStyleProp(\"boxSizing\", v); }\r\n\r\nexport function breakAfter(v: string) { return new CssElementStyleProp(\"breakAfter\", v); }\r\n\r\nexport function breakBefore(v: string) { return new CssElementStyleProp(\"breakBefore\", v); }\r\n\r\nexport function breakInside(v: string) { return new CssElementStyleProp(\"breakInside\", v); }\r\n\r\nexport function captionSide(v: string) { return new CssElementStyleProp(\"captionSide\", v); }\r\n\r\nexport function caretColor(v: string) { return new CssElementStyleProp(\"caretColor\", v); }\r\n\r\nexport function clear(v: string) { return new CssElementStyleProp(\"clear\", v); }\r\n\r\nexport function clip(v: string) { return new CssElementStyleProp(\"clip\", v); }\r\n\r\nexport function clipPath(v: string) { return new CssElementStyleProp(\"clipPath\", v); }\r\n\r\nexport function clipRule(v: string) { return new CssElementStyleProp(\"clipRule\", v); }\r\n\r\nexport function color(v: CssGlobalValue): CssElementStyleProp;\r\nexport function color(v: CssColorValue): CssElementStyleProp;\r\nexport function color(v: string): CssElementStyleProp { return new CssElementStyleProp(\"color\", v); }\r\n\r\nexport function colorInterpolation(v: string) { return new CssElementStyleProp(\"colorInterpolation\", v); }\r\n\r\nexport function colorInterpolationFilters(v: string) { return new CssElementStyleProp(\"colorInterpolationFilters\", v); }\r\n\r\nexport function colorScheme(v: string) { return new CssElementStyleProp(\"colorScheme\", v); }\r\n\r\nexport function columnCount(v: string) { return new CssElementStyleProp(\"columnCount\", v); }\r\n\r\nexport function columnFill(v: string) { return new CssElementStyleProp(\"columnFill\", v); }\r\n\r\nexport function columnGap(v: CssGlobalValue | CssLengthPercentage | CssCalcStatement): CssElementStyleProp { return new CssElementStyleProp(\"columnGap\", v); }\r\nexport function gridColumnGap(v: CssGlobalValue | CssLengthPercentage | CssCalcStatement) { return new CssElementStyleProp(\"gridColumnGap\", v); }\r\n\r\nexport function columnRule(v: string) { return new CssElementStyleProp(\"columnRule\", v); }\r\n\r\nexport function columnRuleColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"columnRuleColor\", v); }\r\n\r\nexport function columnRuleStyle(v: string) { return new CssElementStyleProp(\"columnRuleStyle\", v); }\r\n\r\nexport function columnRuleWidth(v: CssGlobalValue | CssLength | CssWidthKeyword) { return new CssElementStyleProp(\"columnRuleWidth\", v); }\r\n\r\nexport function columnSpan(v: string) { return new CssElementStyleProp(\"columnSpan\", v); }\r\n\r\nexport function columnWidth(v: CssGlobalValue | CssLength | \"auto\") { return new CssElementStyleProp(\"columnWidth\", v); }\r\n\r\nexport function columns(v: string) { return new CssElementStyleProp(\"columns\", v); }\r\n\r\nexport function contain(v: string) { return new CssElementStyleProp(\"contain\", v); }\r\n\r\nexport function counterIncrement(v: string) { return new CssElementStyleProp(\"counterIncrement\", v); }\r\n\r\nexport function counterReset(v: string) { return new CssElementStyleProp(\"counterReset\", v); }\r\n\r\nexport function cursor(v: CssGlobalValue | CssCursorValue) { return new CssElementStyleProp(\"cursor\", v); }\r\n\r\nexport function direction(v: CssGlobalValue | CssDirectionValue) { return new CssElementStyleProp(\"direction\", v); }\r\n\r\nexport function display(v: CssGlobalValue | CssDisplayValue) { return new CssElementStyleProp(\"display\", v); }\r\n\r\nexport function dominantBaseline(v: string) { return new CssElementStyleProp(\"dominantBaseline\", v); }\r\n\r\nexport function emptyCells(v: string) { return new CssElementStyleProp(\"emptyCells\", v); }\r\n\r\nexport function fill(v: string) { return new CssElementStyleProp(\"fill\", v); }\r\n\r\nexport function fillOpacity(v: string) { return new CssElementStyleProp(\"fillOpacity\", v); }\r\n\r\nexport function fillRule(v: string) { return new CssElementStyleProp(\"fillRule\", v); }\r\n\r\nexport function filter(v: string) { return new CssElementStyleProp(\"filter\", v); }\r\n\r\nexport function flexBasis(v: CssGlobalValue | CssFlexBasisValue) { return new CssElementStyleProp(\"flexBasis\", v); }\r\n\r\nexport function flexDirection(v: CssGlobalValue | CssFlexDirectionValue) { return new CssElementStyleProp(\"flexDirection\", v); }\r\n\r\nexport function flexWrap(v: CssGlobalValue | CssFlexWrapValue) { return new CssElementStyleProp(\"flexWrap\", v); }\r\n\r\nexport function flexFlow(v: CssGlobalValue): CssElementStyleProp;\r\nexport function flexFlow(v: CssFlexFlowValue): CssElementStyleProp;\r\nexport function flexFlow(x: CssFlexFlowValue, y: CssFlexFlowValue): CssElementStyleProp;\r\nexport function flexFlow(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"flexFlow\", v.join(\" \")); }\r\n\r\nexport function flex(v: CssGlobalValue): CssElementStyleProp;\r\nexport function flex(grow: number): CssElementStyleProp;\r\nexport function flex(basis: CssFlexBasisValue): CssElementStyleProp;\r\nexport function flex(grow: number, shrink: number): CssElementStyleProp;\r\nexport function flex(grow: number, basis: CssFlexBasisValue): CssElementStyleProp;\r\nexport function flex(grow: number, shrink: number, basis: CssFlexBasisValue): CssElementStyleProp;\r\nexport function flex(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"flex\", v.join(\" \")); }\r\n\r\nexport function flexGrow(v: CssGlobalValue | number) { return new CssElementStyleProp(\"flexGrow\", v); }\r\n\r\nexport function flexShrink(v: CssGlobalValue | number) { return new CssElementStyleProp(\"flexShrink\", v); }\r\n\r\nexport function float(v: CssGlobalValue | CssFloatValue) { return new CssElementStyleProp(\"float\", v); }\r\n\r\nexport function floodColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"floodColor\", v); }\r\n\r\nexport function floodOpacity(v: string) { return new CssElementStyleProp(\"floodOpacity\", v); }\r\n\r\nexport function font(v: string) { return new CssElementStyleProp(\"font\", v); }\r\n\r\nexport function fontFamily(v: string) { return new CssElementStyleProp(\"fontFamily\", v); }\r\n\r\nexport function fontFeatureSettings(v: string) { return new CssElementStyleProp(\"fontFeatureSettings\", v); }\r\n\r\nexport function fontKerning(v: string) { return new CssElementStyleProp(\"fontKerning\", v); }\r\n\r\nexport function fontOpticalSizing(v: string) { return new CssElementStyleProp(\"fontOpticalSizing\", v); }\r\n\r\nexport function fontSize(v: string) { return new CssElementStyleProp(\"fontSize\", v); }\r\n\r\nexport function fontStretch(v: string) { return new CssElementStyleProp(\"fontStretch\", v); }\r\n\r\nexport function fontStyle(v: string) { return new CssElementStyleProp(\"fontStyle\", v); }\r\n\r\nexport function fontVariant(v: string) { return new CssElementStyleProp(\"fontVariant\", v); }\r\n\r\nexport function fontVariantCaps(v: string) { return new CssElementStyleProp(\"fontVariantCaps\", v); }\r\n\r\nexport function fontVariantEastAsian(v: string) { return new CssElementStyleProp(\"fontVariantEastAsian\", v); }\r\n\r\nexport function fontVariantLigatures(v: string) { return new CssElementStyleProp(\"fontVariantLigatures\", v); }\r\n\r\nexport function fontVariantNumeric(v: string) { return new CssElementStyleProp(\"fontVariantNumeric\", v); }\r\n\r\nexport function fontVariationSettings(v: string) { return new CssElementStyleProp(\"fontVariationSettings\", v); }\r\n\r\nexport function fontWeight(v: string) { return new CssElementStyleProp(\"fontWeight\", v); }\r\n\r\nexport function gap(v: CssGlobalValue | CssLengthPercentage | CssCalcStatement): CssElementStyleProp;\r\nexport function gap(row: CssLengthPercentage | CssCalcStatement, column: CssLengthPercentage | CssCalcStatement): CssElementStyleProp\r\nexport function gap(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"gap\", v.join(\" \")); }\r\nexport function gridGap(v: CssGlobalValue | CssLengthPercentage | CssCalcStatement): CssElementStyleProp;\r\nexport function gridGap(row: CssLengthPercentage | CssCalcStatement, column: CssLengthPercentage | CssCalcStatement): CssElementStyleProp\r\nexport function gridGap(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"gridGap\", v.join(\" \")); }\r\n\r\nexport function grid(v: string) { return new CssElementStyleProp(\"grid\", v); }\r\n\r\nexport function gridArea(v: string): CssElementStyleProp;\r\nexport function gridArea(rowStart: number, colStart?: number, rowEnd?: number, colEnd?: number): CssElementStyleProp;\r\nexport function gridArea(vOrRowStart: string | number, colStart?: number, rowEnd?: number, colEnd?: number): CssElementStyleProp {\r\n    if (!isString(vOrRowStart)) {\r\n        vOrRowStart = [vOrRowStart, colStart, rowEnd, colEnd]\r\n            .filter(isDefined)\r\n            .join(\"/\");\r\n    }\r\n\r\n    return new CssElementStyleProp(\"gridArea\", vOrRowStart);\r\n}\r\n\r\nexport function gridAutoColumns(v: string) { return new CssElementStyleProp(\"gridAutoColumns\", v); }\r\n\r\nexport function gridAutoFlow(v: CssGlobalValue | CssGridAutoFlowValue) { return new CssElementStyleProp(\"gridAutoFlow\", v); }\r\n\r\nexport function gridAutoRows(v: string) { return new CssElementStyleProp(\"gridAutoRows\", v); }\r\n\r\nexport function gridColumn(v: string): CssElementStyleProp\r\nexport function gridColumn(colStart: number, colEnd?: number): CssElementStyleProp\r\nexport function gridColumn(vOrColStart: string | number, colEnd?: number): CssElementStyleProp {\r\n    if (!isString(vOrColStart)) {\r\n        vOrColStart = [vOrColStart, colEnd]\r\n            .filter(isDefined)\r\n            .join(\"/\");\r\n    }\r\n    return new CssElementStyleProp(\"gridColumn\", vOrColStart);\r\n}\r\n\r\nexport function gridColumnEnd(v: string | number) { return new CssElementStyleProp(\"gridColumnEnd\", v); }\r\n\r\nexport function gridColumnStart(v: string | number) { return new CssElementStyleProp(\"gridColumnStart\", v); }\r\n\r\nexport function gridRow(v: string): CssElementStyleProp\r\nexport function gridRow(rowStart: number, rowEnd?: number): CssElementStyleProp\r\nexport function gridRow(vOrRowStart: string | number, rowEnd?: number): CssElementStyleProp {\r\n    if (!isString(vOrRowStart)) {\r\n        vOrRowStart = [vOrRowStart, rowEnd]\r\n            .filter(isDefined)\r\n            .join(\"/\");\r\n    }\r\n    return new CssElementStyleProp(\"gridRow\", vOrRowStart);\r\n}\r\n\r\nexport function gridRowEnd(v: string | number) { return new CssElementStyleProp(\"gridRowEnd\", v); }\r\n\r\nexport function gridRowStart(v: string | number) { return new CssElementStyleProp(\"gridRowStart\", v); }\r\n\r\nexport function gridTemplate(v: string) { return new CssElementStyleProp(\"gridTemplate\", v); }\r\n\r\nexport function gridTemplateAreas(...v: string[]) { return new CssElementStyleProp(\"gridTemplateAreas\", v.map((r) => \"\\\"\" + r + \"\\\"\").join(\"\\n\")); }\r\n\r\nexport function gridTemplateColumns(v: CssGlobalValue): CssElementStyleProp;\r\nexport function gridTemplateColumns(...v: CssGridTemplateTrackValue[]): CssElementStyleProp;\r\nexport function gridTemplateColumns(...v: (string | number)[]) { return new CssElementStyleProp(\"gridTemplateColumns\", v.join(\" \")); }\r\n\r\nexport function gridTemplateRows(v: CssGlobalValue): CssElementStyleProp;\r\nexport function gridTemplateRows(...v: CssGridTemplateTrackValue[]): CssElementStyleProp;\r\nexport function gridTemplateRows(...v: (string | number)[]) { return new CssElementStyleProp(\"gridTemplateRows\", v.join(\" \")); }\r\n\r\nexport function height(v: CssGlobalValue | CssSizePropertyValue) { return new CssElementStyleProp(\"height\", v); }\r\n\r\nexport function hyphens(v: string) { return new CssElementStyleProp(\"hyphens\", v); }\r\n\r\nexport function imageOrientation(v: string) { return new CssElementStyleProp(\"imageOrientation\", v); }\r\n\r\nexport function imageRendering(v: string) { return new CssElementStyleProp(\"imageRendering\", v); }\r\n\r\nexport function inlineSize(v: string) { return new CssElementStyleProp(\"inlineSize\", v); }\r\n\r\nexport function isolation(v: string) { return new CssElementStyleProp(\"isolation\", v); }\r\n\r\nexport function justifyContent(v: CssGlobalValue | CssJustifyAlignContentValue) { return new CssElementStyleProp(\"justifyContent\", v); }\r\n\r\nexport function justifyItems(v: CssGlobalValue | CssJustifyItemsValue) { return new CssElementStyleProp(\"justifyItems\", v); }\r\n\r\nexport function justifySelf(v: CssGlobalValue | CssJustifyAlignSelfValue) { return new CssElementStyleProp(\"justifySelf\", v); }\r\n\r\nexport function left(v: CssElementPositionValue) { return new CssElementStyleProp(\"left\", v); }\r\n\r\nexport function letterSpacing(v: string) { return new CssElementStyleProp(\"letterSpacing\", v); }\r\n\r\nexport function lightingColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"lightingColor\", v); }\r\n\r\nexport function lineBreak(v: string) { return new CssElementStyleProp(\"lineBreak\", v); }\r\n\r\nexport function lineHeight(v: string) { return new CssElementStyleProp(\"lineHeight\", v); }\r\n\r\nexport function listStyle(v: string) { return new CssElementStyleProp(\"listStyle\", v); }\r\n\r\nexport function listStyleImage(v: string) { return new CssElementStyleProp(\"listStyleImage\", v); }\r\n\r\nexport function listStylePosition(v: string) { return new CssElementStyleProp(\"listStylePosition\", v); }\r\n\r\nexport function listStyleType(v: string) { return new CssElementStyleProp(\"listStyleType\", v); }\r\n\r\nexport function margin(v: CssGlobalValue | CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function margin(vert: CssLengthPercentage | \"auto\", horiz: CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function margin(top: CssLengthPercentage | \"auto\", horiz: CssLengthPercentage | \"auto\", bot: CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function margin(top: CssLengthPercentage | \"auto\", right: CssLengthPercentage | \"auto\", bot: CssLengthPercentage | \"auto\", left: CssLengthPercentage | \"auto\"): CssElementStyleProp;\r\nexport function margin(...v: (number | string)[]) { return new CssElementStyleProp(\"margin\", v.join(\" \")); }\r\n\r\nexport function marginBlockEnd(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginBlockEnd\", v); }\r\n\r\nexport function marginBlockStart(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginBlockStart\", v); }\r\n\r\nexport function marginBottom(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginBottom\", v); }\r\n\r\nexport function marginInlineEnd(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginInlineEnd\", v); }\r\n\r\nexport function marginInlineStart(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginInlineStart\", v); }\r\n\r\nexport function marginLeft(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginLeft\", v); }\r\n\r\nexport function marginRight(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginRight\", v); }\r\n\r\nexport function marginTop(v: CssLengthPercentage | \"auto\") { return new CssElementStyleProp(\"marginTop\", v); }\r\n\r\nexport function marker(v: string) { return new CssElementStyleProp(\"marker\", v); }\r\n\r\nexport function markerEnd(v: string) { return new CssElementStyleProp(\"markerEnd\", v); }\r\n\r\nexport function markerMid(v: string) { return new CssElementStyleProp(\"markerMid\", v); }\r\n\r\nexport function markerStart(v: string) { return new CssElementStyleProp(\"markerStart\", v); }\r\n\r\nexport function mask(v: string) { return new CssElementStyleProp(\"mask\", v); }\r\n\r\nexport function maskType(v: string) { return new CssElementStyleProp(\"maskType\", v); }\r\n\r\nexport function maxBlockSize(v: string) { return new CssElementStyleProp(\"maxBlockSize\", v); }\r\n\r\nexport function maxHeight(v: string | 0) { return new CssElementStyleProp(\"maxHeight\", v); }\r\n\r\nexport function maxInlineSize(v: string) { return new CssElementStyleProp(\"maxInlineSize\", v); }\r\n\r\nexport function maxWidth(v: string | 0) { return new CssElementStyleProp(\"maxWidth\", v); }\r\n\r\nexport function minBlockSize(v: string) { return new CssElementStyleProp(\"minBlockSize\", v); }\r\n\r\nexport function minHeight(v: string | 0) { return new CssElementStyleProp(\"minHeight\", v); }\r\n\r\nexport function minInlineSize(v: string) { return new CssElementStyleProp(\"minInlineSize\", v); }\r\n\r\nexport function minWidth(v: string | 0) { return new CssElementStyleProp(\"minWidth\", v); }\r\n\r\nexport function mixBlendMode(v: string) { return new CssElementStyleProp(\"mixBlendMode\", v); }\r\n\r\nexport function objectFit(v: string) { return new CssElementStyleProp(\"objectFit\", v); }\r\n\r\nexport function objectPosition(v: string) { return new CssElementStyleProp(\"objectPosition\", v); }\r\n\r\nexport function offset(v: string) { return new CssElementStyleProp(\"offset\", v); }\r\n\r\nexport function offsetDistance(v: string) { return new CssElementStyleProp(\"offsetDistance\", v); }\r\n\r\nexport function offsetPath(v: string) { return new CssElementStyleProp(\"offsetPath\", v); }\r\n\r\nexport function offsetRotate(v: string) { return new CssElementStyleProp(\"offsetRotate\", v); }\r\n\r\nexport function opacity(v: CssGlobalValue | CssAlpha) { return new CssElementStyleProp(\"opacity\", v); }\r\n\r\nexport function order(v: string) { return new CssElementStyleProp(\"order\", v); }\r\n\r\nexport function orphans(v: string) { return new CssElementStyleProp(\"orphans\", v); }\r\n\r\nexport function outline(v: string) { return new CssElementStyleProp(\"outline\", v); }\r\n\r\nexport function outlineColor(v: CssGlobalValue | CssColorValue | \"invert\") { return new CssElementStyleProp(\"outlineColor\", v); }\r\n\r\nexport function outlineOffset(v: string) { return new CssElementStyleProp(\"outlineOffset\", v); }\r\n\r\nexport function outlineStyle(v: string) { return new CssElementStyleProp(\"outlineStyle\", v); }\r\n\r\nexport function outlineWidth(v: string | 0) { return new CssElementStyleProp(\"outlineWidth\", v); }\r\n\r\nexport function overflow(v: CssGlobalValue | CssOverflowValue): CssElementStyleProp;\r\nexport function overflow(x: CssOverflowValue, y: CssOverflowValue): CssElementStyleProp;\r\nexport function overflow(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"overflow\", v.join(\" \")); }\r\n\r\nexport function overflowX(v: CssGlobalValue | CssOverflowValue) { return new CssElementStyleProp(\"overflowX\", v); }\r\n\r\nexport function overflowY(v: CssGlobalValue | CssOverflowValue) { return new CssElementStyleProp(\"overflowY\", v); }\r\n\r\nexport function overflowAnchor(v: string) { return new CssElementStyleProp(\"overflowAnchor\", v); }\r\n\r\nexport function overflowWrap(v: string) { return new CssElementStyleProp(\"overflowWrap\", v); }\r\n\r\nexport function overscrollBehavior(v: string) { return new CssElementStyleProp(\"overscrollBehavior\", v); }\r\n\r\nexport function overscrollBehaviorBlock(v: string) { return new CssElementStyleProp(\"overscrollBehaviorBlock\", v); }\r\n\r\nexport function overscrollBehaviorInline(v: string) { return new CssElementStyleProp(\"overscrollBehaviorInline\", v); }\r\n\r\nexport function overscrollBehaviorX(v: string) { return new CssElementStyleProp(\"overscrollBehaviorX\", v); }\r\n\r\nexport function overscrollBehaviorY(v: string) { return new CssElementStyleProp(\"overscrollBehaviorY\", v); }\r\n\r\nexport function padding(v: CssGlobalValue | CssLengthPercentage): CssElementStyleProp;\r\nexport function padding(vert: CssLengthPercentage, horiz: CssLengthPercentage): CssElementStyleProp;\r\nexport function padding(top: CssLengthPercentage, horiz: CssLengthPercentage, bot: CssLengthPercentage): CssElementStyleProp;\r\nexport function padding(top: CssLengthPercentage, right: CssLengthPercentage, bot: CssLengthPercentage, left: CssLengthPercentage): CssElementStyleProp;\r\nexport function padding(...v: (CssGlobalValue | CssLengthPercentage)[]) { return new CssElementStyleProp(\"padding\", v.join(\" \")); }\r\n\r\nexport function paddingBlockEnd(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingBlockEnd\", v); }\r\n\r\nexport function paddingBlockStart(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingBlockStart\", v); }\r\n\r\nexport function paddingBottom(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingBottom\", v); }\r\n\r\nexport function paddingInlineEnd(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingInlineEnd\", v); }\r\n\r\nexport function paddingInlineStart(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingInlineStart\", v); }\r\n\r\nexport function paddingLeft(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingLeft\", v); }\r\n\r\nexport function paddingRight(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingRight\", v); }\r\n\r\nexport function paddingTop(v: CssGlobalValue | CssLengthPercentage) { return new CssElementStyleProp(\"paddingTop\", v); }\r\n\r\nexport function pageBreakAfter(v: string) { return new CssElementStyleProp(\"pageBreakAfter\", v); }\r\n\r\nexport function pageBreakBefore(v: string) { return new CssElementStyleProp(\"pageBreakBefore\", v); }\r\n\r\nexport function pageBreakInside(v: string) { return new CssElementStyleProp(\"pageBreakInside\", v); }\r\n\r\nexport function paintOrder(v: string) { return new CssElementStyleProp(\"paintOrder\", v); }\r\n\r\nexport function perspective(v: string) { return new CssElementStyleProp(\"perspective\", v); }\r\n\r\nexport function perspectiveOrigin(v: string) { return new CssElementStyleProp(\"perspectiveOrigin\", v); }\r\n\r\nexport function placeContent(v: string) { return new CssElementStyleProp(\"placeContent\", v); }\r\n\r\nexport function placeItems(v: string) { return new CssElementStyleProp(\"placeItems\", v); }\r\n\r\nexport function placeSelf(v: string) { return new CssElementStyleProp(\"placeSelf\", v); }\r\n\r\nexport function pointerEvents(v: CssGlobalValue | CssPointerEventsValue) { return new CssElementStyleProp(\"pointerEvents\", v); }\r\n\r\nexport function position(v: CssGlobalValue | CssPositionValue) { return new CssElementStyleProp(\"position\", v); }\r\n\r\nexport function quotes(v: string) { return new CssElementStyleProp(\"quotes\", v); }\r\n\r\nexport function resize(v: string) { return new CssElementStyleProp(\"resize\", v); }\r\n\r\nexport function right(v: CssElementPositionValue) { return new CssElementStyleProp(\"right\", v); }\r\n\r\nexport function rowGap(v: CssGlobalValue | CssLengthPercentage | CssCalcStatement) { return new CssElementStyleProp(\"rowGap\", v); }\r\nexport function gridRowGap(v: CssGlobalValue | CssLengthPercentage | CssCalcStatement) { return new CssElementStyleProp(\"gridRowGap\", v); }\r\n\r\nexport function rubyPosition(v: string) { return new CssElementStyleProp(\"rubyPosition\", v); }\r\n\r\nexport function scrollBehavior(v: string) { return new CssElementStyleProp(\"scrollBehavior\", v); }\r\n\r\nexport function scrollMargin(v: string | 0) { return new CssElementStyleProp(\"scrollMargin\", v); }\r\n\r\nexport function scrollMarginBlock(v: string) { return new CssElementStyleProp(\"scrollMarginBlock\", v); }\r\n\r\nexport function scrollMarginBlockEnd(v: string) { return new CssElementStyleProp(\"scrollMarginBlockEnd\", v); }\r\n\r\nexport function scrollMarginBlockStart(v: string) { return new CssElementStyleProp(\"scrollMarginBlockStart\", v); }\r\n\r\nexport function scrollMarginBottom(v: string | 0) { return new CssElementStyleProp(\"scrollMarginBottom\", v); }\r\n\r\nexport function scrollMarginInline(v: string) { return new CssElementStyleProp(\"scrollMarginInline\", v); }\r\n\r\nexport function scrollMarginInlineEnd(v: string) { return new CssElementStyleProp(\"scrollMarginInlineEnd\", v); }\r\n\r\nexport function scrollMarginInlineStart(v: string) { return new CssElementStyleProp(\"scrollMarginInlineStart\", v); }\r\n\r\nexport function scrollMarginLeft(v: string | 0) { return new CssElementStyleProp(\"scrollMarginLeft\", v); }\r\n\r\nexport function scrollMarginRight(v: string | 0) { return new CssElementStyleProp(\"scrollMarginRight\", v); }\r\n\r\nexport function scrollMarginTop(v: string | 0) { return new CssElementStyleProp(\"scrollMarginTop\", v); }\r\n\r\nexport function scrollPadding(v: string | 0) { return new CssElementStyleProp(\"scrollPadding\", v); }\r\n\r\nexport function scrollPaddingBlock(v: string) { return new CssElementStyleProp(\"scrollPaddingBlock\", v); }\r\n\r\nexport function scrollPaddingBlockEnd(v: string) { return new CssElementStyleProp(\"scrollPaddingBlockEnd\", v); }\r\n\r\nexport function scrollPaddingBlockStart(v: string) { return new CssElementStyleProp(\"scrollPaddingBlockStart\", v); }\r\n\r\nexport function scrollPaddingBottom(v: string | 0) { return new CssElementStyleProp(\"scrollPaddingBottom\", v); }\r\n\r\nexport function scrollPaddingInline(v: string) { return new CssElementStyleProp(\"scrollPaddingInline\", v); }\r\n\r\nexport function scrollPaddingInlineEnd(v: string) { return new CssElementStyleProp(\"scrollPaddingInlineEnd\", v); }\r\n\r\nexport function scrollPaddingInlineStart(v: string) { return new CssElementStyleProp(\"scrollPaddingInlineStart\", v); }\r\n\r\nexport function scrollPaddingLeft(v: string | 0) { return new CssElementStyleProp(\"scrollPaddingLeft\", v); }\r\n\r\nexport function scrollPaddingRight(v: string | 0) { return new CssElementStyleProp(\"scrollPaddingRight\", v); }\r\n\r\nexport function scrollPaddingTop(v: string | 0) { return new CssElementStyleProp(\"scrollPaddingTop\", v); }\r\n\r\nexport function scrollSnapAlign(v: string) { return new CssElementStyleProp(\"scrollSnapAlign\", v); }\r\n\r\nexport function scrollSnapStop(v: string) { return new CssElementStyleProp(\"scrollSnapStop\", v); }\r\n\r\nexport function scrollSnapType(v: string) { return new CssElementStyleProp(\"scrollSnapType\", v); }\r\n\r\nexport function shapeImageThreshold(v: string) { return new CssElementStyleProp(\"shapeImageThreshold\", v); }\r\n\r\nexport function shapeMargin(v: string) { return new CssElementStyleProp(\"shapeMargin\", v); }\r\n\r\nexport function shapeOutside(v: string) { return new CssElementStyleProp(\"shapeOutside\", v); }\r\n\r\nexport function shapeRendering(v: string) { return new CssElementStyleProp(\"shapeRendering\", v); }\r\n\r\nexport function stopColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"stopColor\", v); }\r\n\r\nexport function stopOpacity(v: string) { return new CssElementStyleProp(\"stopOpacity\", v); }\r\n\r\nexport function stroke(v: string) { return new CssElementStyleProp(\"stroke\", v); }\r\n\r\nexport function strokeDasharray(v: string) { return new CssElementStyleProp(\"strokeDasharray\", v); }\r\n\r\nexport function strokeDashoffset(v: string) { return new CssElementStyleProp(\"strokeDashoffset\", v); }\r\n\r\nexport function strokeLinecap(v: string) { return new CssElementStyleProp(\"strokeLinecap\", v); }\r\n\r\nexport function strokeLinejoin(v: string) { return new CssElementStyleProp(\"strokeLinejoin\", v); }\r\n\r\nexport function strokeMiterlimit(v: string) { return new CssElementStyleProp(\"strokeMiterlimit\", v); }\r\n\r\nexport function strokeOpacity(v: string) { return new CssElementStyleProp(\"strokeOpacity\", v); }\r\n\r\nexport function strokeWidth(v: string | 0) { return new CssElementStyleProp(\"strokeWidth\", v); }\r\n\r\nexport function tabSize(v: string) { return new CssElementStyleProp(\"tabSize\", v); }\r\n\r\nexport function tableLayout(v: string) { return new CssElementStyleProp(\"tableLayout\", v); }\r\n\r\nexport function textAlign(v: CssGlobalValue | CssTextAlignValue) { return new CssElementStyleProp(\"textAlign\", v); }\r\n\r\nexport function textAlignLast(v: CssGlobalValue | CssTextAlignLastValue) { return new CssElementStyleProp(\"textAlignLast\", v); }\r\n\r\nexport function textAnchor(v: string) { return new CssElementStyleProp(\"textAnchor\", v); }\r\n\r\nexport function textCombineUpright(v: string) { return new CssElementStyleProp(\"textCombineUpright\", v); }\r\n\r\nexport function textDecoration(v: string) { return new CssElementStyleProp(\"textDecoration\", v); }\r\n\r\nexport function textDecorationColor(v: CssGlobalValue | CssColorValue) { return new CssElementStyleProp(\"textDecorationColor\", v); }\r\n\r\nexport function textDecorationLine(v: string) { return new CssElementStyleProp(\"textDecorationLine\", v); }\r\n\r\nexport function textDecorationSkipInk(v: string) { return new CssElementStyleProp(\"textDecorationSkipInk\", v); }\r\n\r\nexport function textDecorationStyle(v: string) { return new CssElementStyleProp(\"textDecorationStyle\", v); }\r\n\r\nexport function textIndent(v: string) { return new CssElementStyleProp(\"textIndent\", v); }\r\n\r\nexport function textOrientation(v: string) { return new CssElementStyleProp(\"textOrientation\", v); }\r\n\r\nexport function textOverflow(v: CssGlobalValue | CssTextOverflowValue) { return new CssElementStyleProp(\"textOverflow\", v); }\r\n\r\nexport function textRendering(v: string) { return new CssElementStyleProp(\"textRendering\", v); }\r\n\r\nexport function textShadow(v: string) { return new CssElementStyleProp(\"textShadow\", v); }\r\n\r\nexport function textTransform(v: string) { return new CssElementStyleProp(\"textTransform\", v); }\r\n\r\nexport function textUnderlinePosition(v: string) { return new CssElementStyleProp(\"textUnderlinePosition\", v); }\r\n\r\nexport function top(v: CssElementPositionValue) { return new CssElementStyleProp(\"top\", v); }\r\n\r\nexport function touchAction(v: CssGlobalValue | CssTouchActionValue) { return new CssElementStyleProp(\"touchAction\", v); }\r\n\r\nexport function transform(v: CssGlobalValue): CssElementStyleProp;\r\nexport function transform(perspective: CssTransformPerspectiveValue, ...rest: CssTransformValue[]): CssElementStyleProp;\r\nexport function transform(...v: CssTransformValue[]): CssElementStyleProp;\r\nexport function transform(...v: string[]): CssElementStyleProp { return new CssElementStyleProp(\"transform\", v.join(\" \")); }\r\n\r\nexport function transformBox(v: CssGlobalValue | CssTransformBoxValue) { return new CssElementStyleProp(\"transformBox\", v); }\r\n\r\nexport function transformOrigin(v: CssGlobalValue): CssElementStyleProp;\r\nexport function transformOrigin(v: CssLengthPercentage | CssBackgroundPositionKeyword): CssElementStyleProp;\r\nexport function transformOrigin(x: CssLengthPercentage | CssBackgroundPositionHorizontalKeyword, y: CssLengthPercentage | CssBackgroundPositionVerticalKeyword): CssElementStyleProp;\r\nexport function transformOrigin(x: CssLengthPercentage | CssBackgroundPositionHorizontalKeyword, y: CssLengthPercentage | CssBackgroundPositionVerticalKeyword, z: CssLength): CssElementStyleProp;\r\nexport function transformOrigin(...v: (string | number)[]): CssElementStyleProp { return new CssElementStyleProp(\"transformOrigin\", v.join(\" \")); }\r\n\r\nexport function transformStyle(v: CssGlobalValue | CssTransformStyleValue) { return new CssElementStyleProp(\"transformStyle\", v); }\r\n\r\nexport function transition(v: string) { return new CssElementStyleProp(\"transition\", v); }\r\n\r\nexport function transitionDelay(v: string | 0) { return new CssElementStyleProp(\"transitionDelay\", v); }\r\n\r\nexport function transitionDuration(v: string | 0) { return new CssElementStyleProp(\"transitionDuration\", v); }\r\n\r\nexport function transitionProperty(v: string) { return new CssElementStyleProp(\"transitionProperty\", v); }\r\n\r\nexport function transitionTimingFunction(v: string) { return new CssElementStyleProp(\"transitionTimingFunction\", v); }\r\n\r\nexport function unicodeBidi(v: string) { return new CssElementStyleProp(\"unicodeBidi\", v); }\r\n\r\nexport function userSelect(v: string) { return new CssElementStyleProp(\"userSelect\", v); }\r\n\r\nexport function verticalAlign(v: CssGlobalValue | CssVerticalAlignValue) { return new CssElementStyleProp(\"verticalAlign\", v); }\r\n\r\nexport function visibility(v: CssGlobalValue | CssVisiblityValue) { return new CssElementStyleProp(\"visibility\", v); }\r\n\r\nexport function whiteSpace(v: CssGlobalValue | CssWhiteSpaceValue) { return new CssElementStyleProp(\"whiteSpace\", v); }\r\n\r\nexport function widows(v: CssGlobalValue | number) { return new CssElementStyleProp(\"widows\", asInt(v)); }\r\n\r\nexport function width(v: CssGlobalValue | CssSizePropertyValue) { return new CssElementStyleProp(\"width\", v); }\r\n\r\nexport function willChange(v: string) { return new CssElementStyleProp(\"willChange\", v); }\r\n\r\nexport function wordBreak(v: string) { return new CssElementStyleProp(\"wordBreak\", v); }\r\n\r\nexport function wordSpacing(v: string) { return new CssElementStyleProp(\"wordSpacing\", v); }\r\n\r\nexport function wordWrap(v: CssGlobalValue | CssWordWrapValue) { return new CssElementStyleProp(\"wordWrap\", v); }\r\n\r\nexport function writingMode(v: CssGlobalValue | CssWritingModeValue) { return new CssElementStyleProp(\"writingMode\", v); }\r\n\r\nexport function zIndex(v: number) { return new CssElementStyleProp(\"zIndex\", asInt(v)); }\r\n\r\nclass CssRegularAtRuleSet<T extends CssAtRuleRegular = CssAtRuleRegular> extends PropSet<Prop> {\r\n    constructor(selector: T, value: string) {\r\n        super(\"@\" + selector + \" \", [new Prop(value)], \";\");\r\n    }\r\n}\r\n\r\nexport function cssCharset(value: string) {\r\n    return new CssRegularAtRuleSet(\"charset\", value);\r\n}\r\n\r\nexport function cssImport(value: string) {\r\n    return new CssRegularAtRuleSet(\"import\", value);\r\n}\r\n\r\nexport function cssNamespace(value: string) {\r\n    return new CssRegularAtRuleSet(\"namespace\", value);\r\n}\r\n\r\nclass CssColorProfileProp<T extends CssColorProfilePropName = CssColorProfilePropName> extends CssDeclareProp {\r\n    constructor(name: T, value: string) {\r\n        super(name, value);\r\n    }\r\n}\r\n\r\nexport function colorProfile(name: CssDashedName, src: string, renderingIntent: CssColorProfileProp<\"rendering-intent\">): PropSet;\r\nexport function colorProfile(name: CssDashedName, src: string, components: CssColorProfileProp<\"components\">): PropSet;\r\nexport function colorProfile(name: CssDashedName, src: string, renderingIntent: CssColorProfileProp<\"rendering-intent\">, components: CssColorProfileProp<\"components\">): PropSet;\r\nexport function colorProfile(name: CssDashedName, src: string, ...props: CssColorProfileProp[]): PropSet {\r\n    props.unshift(new CssColorProfileProp(\"src\", src));\r\n    return new SelectorPropSet(\"@color-profile \" + name, props);\r\n}\r\n\r\nexport function renderingIntent(value: CssRenderingIntentValue): CssColorProfileProp { return new CssColorProfileProp(\"rendering-intent\", value); }\r\n\r\nexport function components(...names: string[]) { return new CssColorProfileProp(\"components\", names.join(\", \")); }\r\n\r\nclass CssCounterStyleProp<T extends CssCounterStylePropName = CssCounterStylePropName> extends CssDeclareProp {\r\n    constructor(name: T, value: string) {\r\n        super(name, value);\r\n    }\r\n}\r\n\r\nexport function counterStyle(name: string, ...props: CssCounterStyleProp[]): PropSet {\r\n    return new SelectorPropSet(`@counter-style ${name}`, props);\r\n}\r\n\r\nexport function system(value: CssCounterStyleSystemValue) { return new CssCounterStyleProp(\"system\", value); }\r\n\r\nexport function negative(value: string) { return new CssCounterStyleProp(\"negative\", value); }\r\n\r\nexport function prefix(value: string) { return new CssCounterStyleProp(\"prefix\", value); }\r\n\r\nexport function suffix(value: string) { return new CssCounterStyleProp(\"suffix\", value); }\r\n\r\nexport function range(value: CssCounterStyleRangeValue | \"auto\"): CssCounterStyleProp<\"range\">;\r\nexport function range(...v: CssCounterStyleRangeValue[]): CssCounterStyleProp<\"range\">;\r\nexport function range(...v: string[]): CssCounterStyleProp<\"range\"> { return new CssCounterStyleProp(\"range\", v.join(\", \")); }\r\n\r\nexport function pad(count: number, symbol: string) { return new CssCounterStyleProp(\"pad\", `${asInt(count)} ${JSON.stringify(symbol)}`); }\r\n\r\nexport function fallback(value: string) { return new CssCounterStyleProp(\"fallback\", value); }\r\n\r\nexport function symbols(value: string) { return new CssCounterStyleProp(\"symbols\", value); }\r\n\r\nexport function additiveSymbols(...v: string[]) { return new CssCounterStyleProp(\"additive-symbols\", v.join(\", \")); }\r\n\r\nexport function speakAs(value: string) { return new CssCounterStyleProp(\"speak-as\", value); }\r\n\r\n//TODO https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face\r\n//TODO https://developer.mozilla.org/en-US/docs/Web/CSS/@font-feature-values\r\n//TODO https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes\r\n\r\nexport function layer(...names: string[]): PropSet;\r\nexport function layer(name: string, ...rules: PropSet[]): PropSet;\r\nexport function layer(...rules: PropSet[]): PropSet;\r\nexport function layer(...namesOrRules: (PropSet | string)[]) {\r\n    const names = [\r\n        ...namesOrRules.filter(isString)\r\n    ];\r\n\r\n    const rules = namesOrRules.filter(v => v instanceof PropSet) as PropSet[];\r\n\r\n    if (names.length === 0 && rules.length === 0) {\r\n        throw new Error(\"Layer names and/or rules are not defined.\");\r\n    }\r\n    if (names.length > 1 && rules.length > 0) {\r\n        throw new Error(\"Cannot define multiple layers and rules at the same time\");\r\n    }\r\n    else if (names.length === 0) {\r\n        return new SelectorPropSet(\"@layer\", rules);\r\n    }\r\n    else {\r\n        const layerList = names.join(\", \");\r\n        if (names.length > 1 || rules.length === 0) {\r\n            return new CssRegularAtRuleSet(\"layer\", layerList);\r\n        }\r\n        else {\r\n            return new SelectorPropSet(\"@layer \" + layerList, rules);\r\n        }\r\n    }\r\n}\r\n\r\n//TODO https://developer.mozilla.org/en-US/docs/Web/CSS/@media\r\nexport function media(query: string, ...props: PropSet[]) {\r\n    return new SelectorPropSet(\"@media \" + query, props);\r\n}\r\n\r\n//TODO https://developer.mozilla.org/en-US/docs/Web/CSS/@page\r\n//TODO https://developer.mozilla.org/en-US/docs/Web/CSS/@supports\r\n", "import { arrayRemove } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { once } from \"@juniper-lib/events/dist/once\";\r\nimport { Text_Css } from \"@juniper-lib/mediatypes\";\r\nimport { IProgress } from \"@juniper-lib/progress/dist/IProgress\";\r\nimport { isBoolean, isDate, isDefined, isFunction, isNumber, isObject, isString } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { ClassList, Href, HtmlFor, Rel, Type, isAttr } from \"./attrs\";\r\nimport { PropSet, margin } from \"./css\";\r\n\r\nexport interface ErsatzElement<T extends Element = Element> {\r\n    element: T;\r\n}\r\n\r\nexport function isErsatzElement<T extends Element = Element>(obj: any): obj is ErsatzElement<T> {\r\n    if (!isObject(obj)) {\r\n        return false;\r\n    }\r\n\r\n    const elem = obj as ErsatzElement;\r\n    return elem.element instanceof Element;\r\n}\r\n\r\nexport type Elements<T extends Element = Element> = T | ErsatzElement<T>;\r\n\r\nexport function resolveElement<T extends Element = HTMLElement>(elem: Elements<T> | string): T {\r\n    if (isErsatzElement(elem)) {\r\n        return elem.element;\r\n    }\r\n    else if (isString(elem)) {\r\n        return getElement(elem);\r\n    }\r\n\r\n    return elem;\r\n}\r\n\r\nexport interface IElementAppliable<T extends Element = Element> {\r\n    applyToElement(x: Elements<T>): void;\r\n}\r\n\r\nexport function isIElementAppliable<T extends Element = Element>(obj: any): obj is IElementAppliable<T> {\r\n    return isObject(obj)\r\n        && \"applyToElement\" in obj\r\n        && isFunction((obj as any).applyToElement);\r\n}\r\n\r\nexport type ElementChild<T extends Element = Element> = Elements<T>\r\n    | IElementAppliable\r\n    | string\r\n    | number\r\n    | boolean\r\n    | Date;\r\n\r\nexport function isElementChild(obj: any): obj is ElementChild {\r\n    return obj instanceof Element\r\n        || isErsatzElement(obj)\r\n        || isIElementAppliable(obj)\r\n        || isString(obj)\r\n        || isNumber(obj)\r\n        || isBoolean(obj)\r\n        || isDate(obj);\r\n}\r\n\r\nexport function isElements(child: ElementChild): child is Elements {\r\n    return isErsatzElement(child)\r\n        || child instanceof Element;\r\n}\r\n\r\nexport interface IFocusable {\r\n    focus(): void;\r\n}\r\n\r\nexport function isFocusable(elem: any): elem is IFocusable {\r\n    return \"focus\" in elem && isFunction((elem as IFocusable).focus);\r\n}\r\n\r\nexport function elementSetDisplay<T extends HTMLElement = HTMLElement>(elem: Elements<T>, visible: boolean, visibleDisplayType: CssGlobalValue | CssDisplayValue = \"\"): void {\r\n    elem = resolveElement(elem);\r\n    if (visible) {\r\n        elem.style.removeProperty(\"display\");\r\n        const style = getComputedStyle(elem);\r\n        if (style.display === \"none\") {\r\n            elem.style.display = visibleDisplayType || \"block\";\r\n        }\r\n    }\r\n    else {\r\n        elem.style.display = \"none\";\r\n    }\r\n}\r\n\r\nexport function elementIsDisplayed<T extends HTMLElement = HTMLElement>(elem: Elements<T>): boolean {\r\n    elem = resolveElement(elem);\r\n    return elem.style.display !== \"none\";\r\n}\r\n\r\nexport function elementToggleDisplay<T extends HTMLElement = HTMLElement>(elem: Elements<T>, visibleDisplayType: CssGlobalValue | CssDisplayValue = \"block\"): void {\r\n    elementSetDisplay(elem, !elementIsDisplayed(elem), visibleDisplayType);\r\n}\r\n\r\nexport function elementInsertBefore(parent: Elements, newElem: Elements, refElem: Elements): void {\r\n    parent = resolveElement(parent);\r\n    newElem = resolveElement(newElem);\r\n    refElem = resolveElement(refElem);\r\n    if (parent && newElem) {\r\n        parent.insertBefore(newElem, refElem);\r\n    }\r\n}\r\n\r\nexport function elementGetIndexInParent(elem: Elements): number {\r\n    elem = resolveElement(elem);\r\n\r\n    if (elem.parentElement) {\r\n        for (let i = 0; i < elem.parentElement.childElementCount; ++i) {\r\n            if (elem.parentElement.children[i] === elem) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function Clear() {\r\n    return {\r\n        applyToElement(elem: HTMLElement) { elem.innerHTML = \"\"; }\r\n    }\r\n}\r\n\r\n\r\nexport function elementGetCustomData(elem: Elements<HTMLElement>, name: Lowercase<string>): string {\r\n    elem = resolveElement(elem);\r\n    return elem.dataset[name.toLowerCase()];\r\n}\r\n\r\ntype ReturnElementType<T> = T extends Element\r\n    ? T\r\n    : T extends ShadowRoot\r\n    ? T\r\n    : T extends Elements<infer ElementT>\r\n    ? ElementT\r\n    : never;\r\n\r\nexport function HtmlRender<T extends Elements | ShadowRoot>(element: T | string, ...children: ElementChild[]): ReturnElementType<T> {\r\n    const elem = element instanceof Element\r\n        ? element\r\n        : element instanceof ShadowRoot\r\n            ? element\r\n            : isString(element)\r\n                ? document.querySelector(element)\r\n                : element.element;\r\n\r\n    const target = elem instanceof HTMLTemplateElement\r\n        ? elem.content\r\n        : elem;\r\n\r\n    for (const child of children) {\r\n        if (isDefined(child)) {\r\n            if (child instanceof Node) {\r\n                target.appendChild(child);\r\n            }\r\n            else if (isErsatzElement(child)) {\r\n                target.appendChild(resolveElement(child));\r\n            }\r\n            else if (isIElementAppliable(child)) {\r\n                if (!(elem instanceof ShadowRoot)) {\r\n                    child.applyToElement(elem);\r\n                }\r\n            }\r\n            else {\r\n                target.appendChild(document.createTextNode(child.toLocaleString()));\r\n            }\r\n        }\r\n    }\r\n\r\n    return elem as ReturnElementType<T>;\r\n}\r\n\r\nexport function elementRemoveFromParent(elem: Elements | string): void {\r\n    elem = resolveElement(elem);\r\n    if (isDefined(elem)) {\r\n        elem.remove();\r\n    }\r\n}\r\n\r\nexport function elementReplace(elem: Elements, ...elems: Elements[]): Elements {\r\n    elem = resolveElement(elem);\r\n    elem.replaceWith(...elems.map(resolveElement));\r\n    return elem;\r\n}\r\n\r\nexport function elementSwap<T extends Elements>(elem: Elements, withPlaceholder: (placeholder: Elements) => T): T {\r\n    const placeholder = Div();\r\n    const e = withPlaceholder(placeholder);\r\n    elementReplace(placeholder, elementReplace(elem, e));\r\n    return e;\r\n}\r\n\r\nexport function getElement<T extends Element = HTMLElement>(selector: string): T {\r\n    return document.querySelector<T>(selector);\r\n}\r\n\r\nexport function getElements<T extends Element = HTMLElement>(selector: string): T[] {\r\n    return Array.from(document.querySelectorAll<T>(selector));\r\n}\r\n\r\nexport function getButton(selector: string) {\r\n    return getElement<HTMLButtonElement>(selector);\r\n}\r\n\r\nexport function getButtons(selector: string) {\r\n    return getElements<HTMLButtonElement>(selector);\r\n}\r\n\r\nexport function getInput(selector: string) {\r\n    return getElement<HTMLInputElement>(selector);\r\n}\r\n\r\nexport function getDataList(selector: string) {\r\n    return getElement<HTMLDataListElement>(selector);\r\n}\r\n\r\nexport function getInputs(selector: string) {\r\n    return getElements<HTMLInputElement>(selector);\r\n}\r\n\r\nexport function getSelect(selector: string) {\r\n    return getElement<HTMLSelectElement>(selector);\r\n}\r\n\r\nexport function getCanvas(selector: string) {\r\n    return getElement<HTMLCanvasElement>(selector);\r\n}\r\n\r\n/**\r\n * Creates an HTML element for a given tag name.\r\n * \r\n * Boolean attributes that you want to default to true can be passed\r\n * as just the attribute creating function, \r\n *   e.g. `Audio(autoPlay)` vs `Audio(autoPlay(true))`\r\n * @param name - the name of the tag\r\n * @param rest - optional attributes, child elements, and text\r\n * @returns\r\n */\r\nexport function HtmlTag<MapT extends Record<keyof MapT, HTMLElement> = HTMLElementTagNameMap, K extends keyof MapT & string = keyof MapT & string>(name: K, ...rest: ElementChild[]): MapT[K] {\r\n    let elem: MapT[K] & HTMLElement = null;\r\n\r\n    const finders = rest.filter(isAttr).filter(v => v.key === \"id\" || v.key === \"query\");\r\n    for (const finder of finders) {\r\n        if (finder.key === \"query\") {\r\n            elem = finder.value as any;\r\n            arrayRemove(rest, finder);\r\n        }\r\n        else if (finder.key === \"id\") {\r\n            elem = document.getElementById(finder.value as any) as any;\r\n            if (elem) {\r\n                arrayRemove(rest, finder);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (elem && elem.tagName !== name.toUpperCase()) {\r\n        console.warn(`Expected a \"${name.toUpperCase()}\" element but found a \"${elem.tagName}\".`);\r\n    }\r\n\r\n    if (!elem) {\r\n        elem = document.createElement(name) as MapT[K];\r\n    }\r\n\r\n    HtmlRender(elem, ...rest);\r\n\r\n    return elem;\r\n}\r\n\r\nexport interface IDisableable {\r\n    disabled: boolean;\r\n}\r\n\r\nexport function isDisableable(obj: any): obj is IDisableable {\r\n    return isObject(obj)\r\n        && \"disabled\" in obj\r\n        && isBoolean(obj.disabled);\r\n}\r\n\r\n/**\r\n * Empty an element of all children. This is faster than setting `innerHTML = \"\"`.\r\n */\r\nexport function elementClearChildren(elem: Elements) {\r\n    elem = resolveElement(elem);\r\n    while (elem.lastChild) {\r\n        elem.lastChild.remove();\r\n    }\r\n}\r\n\r\nexport function elementSetText(elem: Elements<HTMLElement>, text: string): void {\r\n    elem = resolveElement(elem);\r\n    elementClearChildren(elem);\r\n    elem.append(TextNode(text));\r\n}\r\n\r\nexport function elementGetText(elem: Elements<HTMLElement>): string {\r\n    elem = resolveElement(elem);\r\n    return elem.innerText;\r\n}\r\n\r\nexport function elementSetTitle(elem: Elements<HTMLElement>, text: string): void {\r\n    elem = resolveElement(elem);\r\n    elem.title = text;\r\n}\r\n\r\nexport function elementSetClass(elem: Elements, enabled: boolean, className: string) {\r\n    elem = resolveElement(elem);\r\n    const canEnable = isDefined(className);\r\n    const hasEnabled = canEnable && elem.classList.contains(className);\r\n\r\n    if (canEnable && hasEnabled !== enabled) {\r\n        elem.classList.toggle(className);\r\n    }\r\n}\r\n\r\nexport type ButtonStyleType =\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"success\"\r\n    | \"info\"\r\n    | \"warning\"\r\n    | \"danger\"\r\n    | \"light\"\r\n    | \"dark\";\r\n\r\nexport function buttonSetEnabled(button: Elements<HTMLButtonElement>, enabled: boolean): void;\r\nexport function buttonSetEnabled(button: Elements<HTMLButtonElement>, enabled: boolean, label: string): void;\r\nexport function buttonSetEnabled(button: Elements<HTMLButtonElement>, enabled: boolean, label: string, title: string): void;\r\nexport function buttonSetEnabled(button: Elements<HTMLButtonElement>, style: ButtonStyleType, enabled: boolean): void;\r\nexport function buttonSetEnabled(button: Elements<HTMLButtonElement>, style: ButtonStyleType, enabled: boolean, label: string): void;\r\nexport function buttonSetEnabled(button: Elements<HTMLButtonElement>, style: ButtonStyleType, enabled: boolean, label: string, title: string): void;\r\nexport function buttonSetEnabled(button: Elements<HTMLButtonElement>, styleOrEnabled: boolean | ButtonStyleType, enabledOrlabel?: string | boolean, labelOrTitle?: string, title?: string): void {\r\n    button = resolveElement(button);\r\n    let style: ButtonStyleType = null;\r\n    let enabled: boolean = null;\r\n    let label: string = null;\r\n    if (isBoolean(styleOrEnabled)) {\r\n        enabled = styleOrEnabled;\r\n        label = enabledOrlabel as string;\r\n        title = labelOrTitle;\r\n    }\r\n    else {\r\n        style = styleOrEnabled;\r\n        enabled = enabledOrlabel as boolean;\r\n        label = labelOrTitle;\r\n    }\r\n\r\n    button.disabled = !enabled;\r\n\r\n    if (label) {\r\n        elementSetText(button, label);\r\n    }\r\n\r\n    if (title) {\r\n        elementSetTitle(button, title);\r\n    }\r\n\r\n    if (style) {\r\n        button.classList.toggle(\"btn-\" + style, enabled);\r\n        button.classList.toggle(\"btn-outline-\" + style, !enabled);\r\n    }\r\n}\r\n\r\n\r\nasync function mediaElementCan(type: \"canplay\" | \"canplaythrough\", elem: HTMLMediaElement, prog?: IProgress): Promise<boolean> {\r\n    if (isDefined(prog)) {\r\n        prog.start();\r\n    }\r\n\r\n    const expectedState = type === \"canplay\"\r\n        ? elem.HAVE_CURRENT_DATA\r\n        : elem.HAVE_ENOUGH_DATA;\r\n\r\n    if (elem.readyState >= expectedState) {\r\n        return true;\r\n    }\r\n\r\n    try {\r\n        await once(elem, type, \"error\");\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        console.warn(elem.error, err);\r\n        return false;\r\n    }\r\n    finally {\r\n        if (isDefined(prog)) {\r\n            prog.end();\r\n        }\r\n    }\r\n}\r\n\r\nexport function mediaElementCanPlay(elem: HTMLMediaElement, prog?: IProgress): Promise<boolean> {\r\n    return mediaElementCan(\"canplay\", elem, prog);\r\n}\r\n\r\nexport function mediaElementCanPlayThrough(elem: HTMLMediaElement, prog?: IProgress): Promise<boolean> {\r\n    return mediaElementCan(\"canplaythrough\", elem, prog);\r\n}\r\n\r\nexport function A(...rest: ElementChild[]): HTMLAnchorElement { return HtmlTag(\"a\", ...rest); }\r\nexport function Abbr(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"abbr\", ...rest); }\r\nexport function Address(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"address\", ...rest); }\r\nexport function Area(...rest: ElementChild[]): HTMLAreaElement { return HtmlTag(\"area\", ...rest); }\r\nexport function Article(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"article\", ...rest); }\r\nexport function Aside(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"aside\", ...rest); }\r\nexport function Audio(...rest: ElementChild[]): HTMLAudioElement { return HtmlTag(\"audio\", ...rest); }\r\nexport function B(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"b\", ...rest); }\r\nexport function Base(...rest: ElementChild[]): HTMLBaseElement { return HtmlTag(\"base\", ...rest); }\r\nexport function BDI(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"bdi\", ...rest); }\r\nexport function BDO(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"bdo\", ...rest); }\r\nexport function BlockQuote(...rest: ElementChild[]): HTMLQuoteElement { return HtmlTag(\"blockquote\", ...rest); }\r\nexport function Body(...rest: ElementChild[]): HTMLBodyElement { return HtmlTag(\"body\", ...rest); }\r\nexport function BR(): HTMLBRElement { return HtmlTag(\"br\"); }\r\nexport function ButtonRaw(...rest: ElementChild[]): HTMLButtonElement { return HtmlTag(\"button\", ...rest); }\r\nexport function Button(...rest: ElementChild[]): HTMLButtonElement { return ButtonRaw(...rest, Type(\"button\")); }\r\nexport function ButtonSmall(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-sm\")); }\r\nexport function ButtonPrimary(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-primary\")); }\r\nexport function ButtonPrimaryOutline(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-outline-primary\")); }\r\nexport function ButtonPrimarySmall(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-sm\", \"btn-primary\")); }\r\nexport function ButtonPrimaryOutlineSmall(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-sm\", \"btn-outline-primary\")); }\r\nexport function ButtonSecondary(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-secondary\")); }\r\nexport function ButtonSecondaryOutline(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-outline-secondary\")); }\r\nexport function ButtonSecondarySmall(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-sm\", \"btn-secondary\")); }\r\nexport function ButtonSecondaryOutlineSmall(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-sm\", \"btn-outline-secondary\")); }\r\nexport function ButtonDanger(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-danger\")); }\r\nexport function ButtonDangerOutline(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-outline-danger\")); }\r\nexport function ButtonDangerSmall(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-sm\", \"btn-danger\")); }\r\nexport function ButtonDangerOutlineSmalle(...rest: ElementChild[]): HTMLButtonElement { return Button(...rest, ClassList(\"btn\", \"btn-sm\", \"btn-outline-danger\")); }\r\nexport function ButtonSubmit(...rest: ElementChild[]): HTMLButtonElement { return ButtonRaw(...rest, Type(\"submit\")); }\r\nexport function ButtonReset(...rest: ElementChild[]): HTMLButtonElement { return ButtonRaw(...rest, Type(\"reset\")); }\r\nexport function Canvas(...rest: ElementChild[]): HTMLCanvasElement { return HtmlTag(\"canvas\", ...rest); }\r\nexport function Caption(...rest: ElementChild[]): HTMLTableCaptionElement { return HtmlTag(\"caption\", ...rest); }\r\nexport function Cite(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"cite\", ...rest); }\r\nexport function Code(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"code\", ...rest); }\r\nexport function Col(...rest: ElementChild[]): HTMLTableColElement { return HtmlTag(\"col\", ...rest); }\r\nexport function ColGroup(...rest: ElementChild[]): HTMLTableColElement { return HtmlTag(\"colgroup\", ...rest); }\r\nexport function DataTag(...rest: ElementChild[]): HTMLDataElement { return HtmlTag(\"data\", ...rest); }\r\nexport function DataList(...rest: ElementChild[]): HTMLDataListElement { return HtmlTag(\"datalist\", ...rest); }\r\nexport function DD(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"dd\", ...rest); }\r\nexport function Del(...rest: ElementChild[]): HTMLModElement { return HtmlTag(\"del\", ...rest); }\r\nexport function Details(...rest: ElementChild[]): HTMLDetailsElement { return HtmlTag(\"details\", ...rest); }\r\nexport function DFN(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"dfn\", ...rest); }\r\nexport function Dialog(...rest: ElementChild[]): HTMLDialogElement { return HtmlTag(\"dialog\", ...rest); }\r\nexport function Div(...rest: ElementChild[]): HTMLDivElement { return HtmlTag(\"div\", ...rest); }\r\nexport function DL(...rest: ElementChild[]): HTMLDListElement { return HtmlTag(\"dl\", ...rest); }\r\nexport function DT(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"dt\", ...rest); }\r\nexport function Em(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"em\", ...rest); }\r\nexport function Embed(...rest: ElementChild[]): HTMLEmbedElement { return HtmlTag(\"embed\", ...rest); }\r\nexport function FieldSet(...rest: ElementChild[]): HTMLFieldSetElement { return HtmlTag(\"fieldset\", ...rest); }\r\nexport function FigCaption(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"figcaption\", ...rest); }\r\nexport function Figure(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"figure\", ...rest); }\r\nexport function Footer(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"footer\", ...rest); }\r\nexport function Form(...rest: ElementChild[]): HTMLFormElement { return HtmlTag(\"form\", ...rest); }\r\nexport function H1(...rest: ElementChild[]): HTMLHeadingElement { return HtmlTag(\"h1\", ...rest); }\r\nexport function H2(...rest: ElementChild[]): HTMLHeadingElement { return HtmlTag(\"h2\", ...rest); }\r\nexport function H3(...rest: ElementChild[]): HTMLHeadingElement { return HtmlTag(\"h3\", ...rest); }\r\nexport function H4(...rest: ElementChild[]): HTMLHeadingElement { return HtmlTag(\"h4\", ...rest); }\r\nexport function H5(...rest: ElementChild[]): HTMLHeadingElement { return HtmlTag(\"h5\", ...rest); }\r\nexport function H6(...rest: ElementChild[]): HTMLHeadingElement { return HtmlTag(\"h6\", ...rest); }\r\nexport function HR(...rest: ElementChild[]): HTMLHRElement { return HtmlTag(\"hr\", ...rest); }\r\nexport function Head(...rest: ElementChild[]): HTMLHeadElement { return HtmlTag(\"head\", ...rest); }\r\nexport function Header(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"header\", ...rest); }\r\nexport function HGroup(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"hgroup\", ...rest); }\r\nexport function HTML(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"html\", ...rest); }\r\nexport function I(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"i\", ...rest); }\r\nexport function FAIcon(iconName: string, ...rest: ElementChild[]): HTMLElement { return I(ClassList(`fa fa-${iconName}`), ...rest); }\r\nexport function IFrame(...rest: ElementChild[]): HTMLIFrameElement { return HtmlTag(\"iframe\", ...rest); }\r\nexport function Img(...rest: ElementChild[]): HTMLImageElement { return HtmlTag(\"img\", ...rest); }\r\nexport function Input(...rest: ElementChild[]): HTMLInputElement { return HtmlTag(\"input\", ...rest); }\r\nexport function Ins(...rest: ElementChild[]): HTMLModElement { return HtmlTag(\"ins\", ...rest); }\r\nexport function KBD(...rest: ElementChild[]): HTMLElement { return HtmlTag(\"kbd\", ...rest); }\r\nexport function Label(...rest: ElementChild[]): HTMLLabelElement { return HtmlTag(\"label\", ...rest); }\r\nexport function PreLabeled<T extends Elements>(id: string, label: ElementChild, input: T): [HTMLLabelElement, T] {\r\n    resolveElement(input).id = id;\r\n    return [\r\n        Label(HtmlFor(id), label),\r\n        input\r\n    ];\r\n}\r\nexport function PostLabeled<T extends Elements>(id: string, label: ElementChild, input: T): [T, HTMLLabelElement] {\r\n    resolveElement(input).id = id;\r\n    return [\r\n        input,\r\n        Label(HtmlFor(id), label)\r\n    ];\r\n}\r\nexport function Legend(...rest: ElementChild[]) { return HtmlTag(\"legend\", ...rest); }\r\nexport function LI(...rest: ElementChild[]) { return HtmlTag(\"li\", ...rest); }\r\nexport function Link(...rest: ElementChild[]) { return HtmlTag(\"link\", ...rest); }\r\nexport function Main(...rest: ElementChild[]) { return HtmlTag(\"main\", ...rest); }\r\nexport function Map_tag(...rest: ElementChild[]) { return HtmlTag(\"map\", ...rest); }\r\nexport function Mark(...rest: ElementChild[]) { return HtmlTag(\"mark\", ...rest); }\r\nexport function Menu(...rest: ElementChild[]) { return HtmlTag(\"menu\", ...rest); }\r\nexport function Meta(...rest: ElementChild[]) { return HtmlTag(\"meta\", ...rest); }\r\nexport function Meter(...rest: ElementChild[]) { return HtmlTag(\"meter\", ...rest); }\r\nexport function Nav(...rest: ElementChild[]) { return HtmlTag(\"nav\", ...rest); }\r\nexport function NoScript(...rest: ElementChild[]) { return HtmlTag(\"noscript\", ...rest); }\r\nexport function Object_tag(...rest: ElementChild[]) { return HtmlTag(\"object\", ...rest); }\r\nexport function OL(...rest: ElementChild[]) { return HtmlTag(\"ol\", ...rest); }\r\nexport function OptGroup(...rest: ElementChild[]) { return HtmlTag(\"optgroup\", ...rest); }\r\nexport function Option(...rest: ElementChild[]) { return HtmlTag(\"option\", ...rest); }\r\nexport function Output(...rest: ElementChild[]) { return HtmlTag(\"output\", ...rest); }\r\nexport function P(...rest: ElementChild[]) { return HtmlTag(\"p\", ...rest); }\r\nexport function Picture(...rest: ElementChild[]) { return HtmlTag(\"picture\", ...rest); }\r\nexport function Pre(...rest: ElementChild[]) { return HtmlTag(\"pre\", ...rest); }\r\nexport function Progress(...rest: ElementChild[]) { return HtmlTag(\"progress\", ...rest); }\r\nexport function Q(...rest: ElementChild[]) { return HtmlTag(\"q\", ...rest); }\r\nexport function RP(...rest: ElementChild[]) { return HtmlTag(\"rp\", ...rest); }\r\nexport function RT(...rest: ElementChild[]) { return HtmlTag(\"rt\", ...rest); }\r\nexport function Ruby(...rest: ElementChild[]) { return HtmlTag(\"ruby\", ...rest); }\r\nexport function S(...rest: ElementChild[]) { return HtmlTag(\"s\", ...rest); }\r\nexport function Samp(...rest: ElementChild[]) { return HtmlTag(\"samp\", ...rest); }\r\nexport function Script(...rest: ElementChild[]) { return HtmlTag(\"script\", ...rest); }\r\nexport function Section(...rest: ElementChild[]) { return HtmlTag(\"section\", ...rest); }\r\nexport function Select(...rest: ElementChild[]) { return HtmlTag(\"select\", ...rest); }\r\nexport function Slot(...rest: ElementChild[]) { return HtmlTag(\"slot\", ...rest); }\r\nexport function Small(...rest: ElementChild[]) { return HtmlTag(\"small\", ...rest); }\r\nexport function Source(...rest: ElementChild[]) { return HtmlTag(\"source\", ...rest); }\r\nexport function Span(...rest: ElementChild[]) { return HtmlTag(\"span\", ...rest); }\r\nexport function Strong(...rest: ElementChild[]) { return HtmlTag(\"strong\", ...rest); }\r\nexport function Sub(...rest: ElementChild[]) { return HtmlTag(\"sub\", ...rest); }\r\nexport function Summary(...rest: ElementChild[]) { return HtmlTag(\"summary\", ...rest); }\r\nexport function Sup(...rest: ElementChild[]) { return HtmlTag(\"sup\", ...rest); }\r\nexport function Table(...rest: ElementChild[]) { return HtmlTag(\"table\", ...rest); }\r\nexport function TBody(...rest: ElementChild[]) { return HtmlTag(\"tbody\", ...rest); }\r\nexport function TD(...rest: ElementChild[]) { return HtmlTag(\"td\", ...rest); }\r\nexport function Template(...rest: ElementChild[]) { return HtmlTag(\"template\", ...rest); }\r\nexport function TextArea(...rest: ElementChild[]) { return HtmlTag(\"textarea\", ...rest); }\r\nexport function TFoot(...rest: ElementChild[]) { return HtmlTag(\"tfoot\", ...rest); }\r\nexport function TH(...rest: ElementChild[]) { return HtmlTag(\"th\", ...rest); }\r\nexport function THead(...rest: ElementChild[]) { return HtmlTag(\"thead\", ...rest); }\r\nexport function Time(...rest: ElementChild[]) { return HtmlTag(\"time\", ...rest); }\r\nexport function Title(...rest: ElementChild[]) { return HtmlTag(\"title\", ...rest); }\r\nexport function TR(...rest: ElementChild[]) { return HtmlTag(\"tr\", ...rest); }\r\nexport function Track(...rest: ElementChild[]) { return HtmlTag(\"track\", ...rest); }\r\nexport function U(...rest: ElementChild[]) { return HtmlTag(\"u\", ...rest); }\r\nexport function UL(...rest: ElementChild[]) { return HtmlTag(\"ul\", ...rest); }\r\nexport function Var(...rest: ElementChild[]) { return HtmlTag(\"var\", ...rest); }\r\nexport function Video(...rest: ElementChild[]) { return HtmlTag(\"video\", ...rest); }\r\nexport function WBR() { return HtmlTag(\"wbr\"); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a button.\r\n */\r\nexport function InputButton(...rest: ElementChild[]) { return Input(Type(\"button\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a checkbox.\r\n */\r\nexport function InputCheckbox(...rest: ElementChild[]) { return Input(Type(\"checkbox\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a color picker.\r\n */\r\nexport function InputColor(...rest: ElementChild[]) { return Input(Type(\"color\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a date picker.\r\n */\r\nexport function InputDate(...rest: ElementChild[]) { return Input(Type(\"date\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a local date-time picker.\r\n */\r\nexport function InputDateTime(...rest: ElementChild[]) { return Input(Type(\"datetime-local\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is an email entry field.\r\n */\r\nexport function InputEmail(...rest: ElementChild[]) { return Input(Type(\"email\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a file picker.\r\n */\r\nexport function InputFile(...rest: ElementChild[]) { return Input(Type(\"file\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a hidden field.\r\n */\r\nexport function InputHidden(...rest: ElementChild[]) { return Input(Type(\"hidden\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a graphical submit button.\r\n */\r\nexport function InputImage(...rest: ElementChild[]) { return Input(Type(\"image\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a month picker.\r\n */\r\nexport function InputMonth(...rest: ElementChild[]) { return Input(Type(\"month\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a month picker.\r\n */\r\nexport function InputNumber(...rest: ElementChild[]) { return Input(Type(\"number\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a password entry field.\r\n */\r\nexport function InputPassword(...rest: ElementChild[]) { return Input(Type(\"password\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a radio button.\r\n */\r\nexport function InputRadio(...rest: ElementChild[]) { return Input(Type(\"radio\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a range selector.\r\n */\r\nexport function InputRange(...rest: ElementChild[]) { return Input(Type(\"range\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a form reset button.\r\n */\r\nexport function InputReset(...rest: ElementChild[]) { return Input(Type(\"reset\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a search entry field.\r\n */\r\nexport function InputSearch(...rest: ElementChild[]) { return Input(Type(\"search\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a submit button.\r\n */\r\nexport function InputSubmit(...rest: ElementChild[]) { return Input(Type(\"submit\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a telephone number entry field.\r\n */\r\nexport function InputTelephone(...rest: ElementChild[]) { return Input(Type(\"tel\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a text entry field.\r\n */\r\nexport function InputText(...rest: ElementChild[]) { return Input(Type(\"text\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a time picker.\r\n */\r\nexport function InputTime(...rest: ElementChild[]) { return Input(Type(\"time\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a URL entry field.\r\n */\r\nexport function InputURL(...rest: ElementChild[]) { return Input(Type(\"url\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a week picker.\r\n */\r\nexport function InputWeek(...rest: ElementChild[]) { return Input(Type(\"week\"), ...rest); }\r\n\r\n/**\r\n * Creates a text node out of the give input.\r\n */\r\nexport function TextNode(txt: any) {\r\n    return document.createTextNode(txt);\r\n}\r\n\r\n/**\r\n * Creates a Div element with margin: auto.\r\n */\r\nexport function Run(...rest: ElementChild[]) {\r\n    return Div(\r\n        margin(\"auto\"),\r\n        ...rest);\r\n}\r\n\r\nexport function Style(...props: PropSet[]) {\r\n    const elem = document.createElement(\"style\");\r\n    document.head.append(elem);\r\n    for (const prop of props) {\r\n        prop.applyToSheet(elem.sheet);\r\n    }\r\n\r\n    return elem;\r\n}\r\n\r\nexport function StyleBlob(...props: (string | PropSet)[]) {\r\n    const blob = new Blob(props.map(p => p.toString()), {\r\n        type: Text_Css.value\r\n    });\r\n    return Link(\r\n        Rel(\"stylesheet\"),\r\n        Href(blob)\r\n    );\r\n}", "import { CustomEventTarget, EventMap, IEventTarget } from \"./EventTarget\";\r\n\r\nexport class TypedEvent<EventTypeT extends string> extends Event {\r\n    override get type(): EventTypeT {\r\n        return super.type as EventTypeT;\r\n    }\r\n\r\n    constructor(type: EventTypeT, eventInitDict?: EventInit) {\r\n        super(type, eventInitDict);\r\n    }\r\n}\r\n\r\nexport type TypedEventMap<EventTypeT extends string> =\r\n    EventMap\r\n    | Record<EventTypeT, TypedEvent<EventTypeT>>;\r\n\r\ntype TypedEventHandler<EventT> =\r\n    (evt: EventT) => void;\r\n\r\nexport type TypedEventListener<EventMapT, EventTypeT extends keyof EventMapT> =\r\n    TypedEventHandler<EventMapT[EventTypeT]>;\r\n\r\nexport interface TypedEventListenerObject<EventMapT, EventTypeT extends keyof EventMapT> {\r\n    handleEvent: TypedEventListener<EventMapT, EventTypeT>;\r\n}\r\n\r\nexport type TypedEventListenerOrEventListenerObject<EventMapT, EventTypeT extends keyof EventMapT> =\r\n    TypedEventListener<EventMapT, EventTypeT>\r\n    | TypedEventListenerObject<EventMapT, EventTypeT>;\r\n\r\nexport interface ITypedEventTarget<EventMapT extends TypedEventMap<string> = TypedEventMap<string>> extends IEventTarget {\r\n    clearEventListeners<EventTypeT extends keyof EventMapT>(type?: EventTypeT): void;\r\n    addBubbler(bubbler: ITypedEventTarget<EventMapT>): void;\r\n    removeBubbler(bubbler: ITypedEventTarget<EventMapT>): void;\r\n    addScopedEventListener<EventTypeT extends keyof EventMapT>(scope: object, type: EventTypeT, callback: TypedEventListenerOrEventListenerObject<EventMapT, EventTypeT>, options?: boolean | AddEventListenerOptions): void;\r\n    addEventListener<EventTypeT extends keyof EventMapT>(type: EventTypeT, callback: TypedEventListenerOrEventListenerObject<EventMapT, EventTypeT>, options?: boolean | AddEventListenerOptions): void;\r\n    removeEventListener<EventTypeT extends keyof EventMapT>(type: EventTypeT, callback: TypedEventListenerOrEventListenerObject<EventMapT, EventTypeT>): void;\r\n}\r\n\r\nexport class TypedEventTarget<EventMapT extends TypedEventMap<string> = TypedEventMap<string>> extends CustomEventTarget implements ITypedEventTarget<EventMapT> {\r\n    override addBubbler(bubbler: ITypedEventTarget<EventMapT>) {\r\n        super.addBubbler(bubbler);\r\n    }\r\n\r\n    override removeBubbler(bubbler: ITypedEventTarget<EventMapT>) {\r\n        super.removeBubbler(bubbler);\r\n    }\r\n\r\n    override addScopedEventListener<EventTypeT extends keyof EventMapT>(scope: object, type: EventTypeT, callback: TypedEventListenerOrEventListenerObject<EventMapT, EventTypeT>, options?: boolean | AddEventListenerOptions): void {\r\n        super.addScopedEventListener(scope, type as string, callback as EventListenerOrEventListenerObject, options);\r\n    }\r\n\r\n    override addEventListener<EventTypeT extends keyof EventMapT>(type: EventTypeT, callback: TypedEventListenerOrEventListenerObject<EventMapT, EventTypeT>, options?: boolean | AddEventListenerOptions): void {\r\n        super.addEventListener(type as string, callback as EventListenerOrEventListenerObject, options);\r\n    }\r\n\r\n    override removeEventListener<EventTypeT extends keyof EventMapT>(type: EventTypeT, callback: TypedEventListenerOrEventListenerObject<EventMapT, EventTypeT>): void {\r\n        super.removeEventListener(type as string, callback as EventListenerOrEventListenerObject);\r\n    }\r\n\r\n    override clearEventListeners<EventTypeT extends keyof EventMapT>(type?: EventTypeT): void {\r\n        return super.clearEventListeners(type as string);\r\n    }\r\n}\r\n", "import { IResponse } from \"./IResponse\";\r\n\r\nexport function assertSuccess<T>(response: IResponse<T>): IResponse<T> {\r\n    if (response.status >= 400) {\r\n        throw new Error(\"Resource could not be retrieved: \" + response.requestPath);\r\n    }\r\n    return response;\r\n}", "import { IResponse } from \"./IResponse\";\r\nimport { assertSuccess } from \"./assertSuccess\";\r\n\r\nexport function unwrapResponse<T>(response: IResponse<T>): T {\r\n    const { content } = assertSuccess(response);\r\n    return content;\r\n}\r\n", "import { arrayClear } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { TypedEventTarget, TypedEventMap } from \"@juniper-lib/events/dist/TypedEventTarget\";\r\nimport type { IProgress } from \"./IProgress\";\r\n\r\nexport class BaseProgress<T extends TypedEventMap<string> = TypedEventMap<string>>\r\n    extends TypedEventTarget<T>\r\n    implements IProgress {\r\n    private readonly attached = new Array<IProgress>();\r\n    private soFar: number = null;\r\n    private total: number = null;\r\n    private msg: string = null;\r\n    private est: number = null;\r\n\r\n    protected get p() {\r\n        return this.total > 0\r\n            ? this.soFar / this.total\r\n            : 0;\r\n    }\r\n\r\n    report(soFar: number, total: number, msg?: string, est?: number): void {\r\n        this.soFar = soFar;\r\n        this.total = total;\r\n        this.msg = msg;\r\n        this.est = est;\r\n        for (const attach of this.attached) {\r\n            attach.report(soFar, total, msg, est);\r\n        }\r\n    }\r\n\r\n    attach(prog: IProgress): void {\r\n        this.attached.push(prog);\r\n        prog.report(this.soFar, this.total, this.msg, this.est);\r\n    }\r\n\r\n    clear() {\r\n        this.report(0, 0);\r\n        this._clear();\r\n    }\r\n\r\n    start(msg?: string) {\r\n        this.report(0, 1, msg || \"starting\");\r\n    }\r\n\r\n    end(msg?: string) {\r\n        this.report(1, 1, msg || \"done\");\r\n        this._clear();\r\n    }\r\n\r\n    private _clear() {\r\n        this.soFar = null;\r\n        this.total = null;\r\n        this.msg = null;\r\n        this.est = null;\r\n        arrayClear(this.attached);\r\n    }\r\n}", "import type { BaseParentProgressCallback } from \"./BaseParentProgressCallback\";\r\nimport { BaseProgress } from \"./BaseProgress\";\r\n\r\nexport class ChildProgressCallback extends BaseProgress {\r\n    constructor(private readonly i: number, private readonly prog: BaseParentProgressCallback) {\r\n        super();\r\n    }\r\n\r\n    override report(soFar: number, total: number, msg?: string, est?: number) {\r\n        super.report(soFar, total, msg, est);\r\n        this.prog.update(this.i, soFar, total, msg);\r\n    }\r\n}\r\n", "import { ChildProgressCallback } from \"./ChildProgressCallback\";\r\nimport type { IProgress } from \"./IProgress\";\r\n\r\nexport class BaseParentProgressCallback {\r\n    private weightTotal = 0;\r\n    private readonly start: number;\r\n\r\n    readonly subProgressCallbacks = new Array<IProgress>();\r\n    private readonly subProgressWeights = new Array<number>();\r\n    private readonly subProgressValues = new Array<number>();\r\n\r\n    constructor(private readonly prog: IProgress) {\r\n        this.start = performance.now();\r\n\r\n        for (let i = 0; i < this.subProgressWeights.length; ++i) {\r\n            this.subProgressValues[i] = 0;\r\n            this.subProgressCallbacks[i] = new ChildProgressCallback(i, this);\r\n        }\r\n    }\r\n\r\n    protected addSubProgress(weight?: number): IProgress {\r\n        weight = weight || 1;\r\n        this.weightTotal += weight;\r\n        this.subProgressWeights.push(weight);\r\n        this.subProgressValues.push(0);\r\n        const child = new ChildProgressCallback(this.subProgressCallbacks.length, this);\r\n        this.subProgressCallbacks.push(child);\r\n        return child;\r\n    }\r\n\r\n\r\n    update(i: number, subSoFar: number, subTotal: number, msg?: string) {\r\n        if (this.prog) {\r\n            this.subProgressValues[i] = subSoFar / subTotal;\r\n            let soFar = 0;\r\n            for (let j = 0; j < this.subProgressWeights.length; ++j) {\r\n                soFar += this.subProgressValues[j] * this.subProgressWeights[j];\r\n            }\r\n\r\n            const end = performance.now();\r\n            const delta = end - this.start;\r\n            const est = this.start - end + delta * this.weightTotal / soFar;\r\n            this.prog.report(soFar, this.weightTotal, msg, est);\r\n        }\r\n    }\r\n}\r\n", "import { BaseParentProgressCallback } from \"./BaseParentProgressCallback\";\r\nimport { IProgress } from \"./IProgress\";\r\n\r\nexport function progressSplitWeighted(prog: IProgress, subProgressWeights: number[]) {\r\n    const subProg = new WeightedParentProgressCallback(subProgressWeights, prog);\r\n    return subProg.subProgressCallbacks;\r\n}\r\n\r\n\r\nexport function progressSplit(prog: IProgress, taskCount: number) {\r\n    const subProgressWeights = new Array<number>(taskCount);\r\n    for (let i = 0; i < taskCount; ++i) {\r\n        subProgressWeights[i] = 1;\r\n    }\r\n\r\n    return progressSplitWeighted(prog, subProgressWeights);\r\n}\r\n\r\nclass WeightedParentProgressCallback extends BaseParentProgressCallback {\r\n\r\n    constructor(subProgressWeights: number[], prog: IProgress) {\r\n        super(prog);\r\n\r\n        for (const weight of subProgressWeights) {\r\n            this.addSubProgress(weight);\r\n        }\r\n    }\r\n}\r\n", "import { IProgress } from \"./IProgress\";\r\nimport { progressSplitWeighted } from \"./progressSplit\";\r\n\r\nexport function progressOfArray<T, U>(prog: IProgress, items: T[], callback: (val: T, prog: IProgress, i?: number) => Promise<U>): Promise<U[]> {\r\n    const weights = items.map(() => 1);\r\n    const progs = progressSplitWeighted(prog, weights);\r\n    return Promise.all(items.map(async (item, i) => {\r\n        const prog = progs[i];\r\n        prog.start();\r\n        const value = await callback(item, prog, i);\r\n        prog.end();\r\n        return value;\r\n    }));\r\n}\r\n", "import { IProgress } from \"./IProgress\";\r\nimport { progressSplitWeighted } from \"./progressSplit\";\r\n\r\nexport type subProgressCallback = (prog: IProgress) => Promise<any>;\r\n\r\nexport type TaskDef = [weight: number, task: subProgressCallback];\r\n\r\nexport async function progressTasksWeighted(prog: IProgress, taskDefs: TaskDef[]) {\r\n    const weights = new Array<number>(taskDefs.length);\r\n    const callbacks = new Array<subProgressCallback>(taskDefs.length);\r\n    for (let i = 0; i < taskDefs.length; ++i) {\r\n        const taskDef = taskDefs[i];\r\n        weights[i] = taskDef[0];\r\n        callbacks[i] = taskDef[1];\r\n    }\r\n\r\n    const progs = progressSplitWeighted(prog, weights);\r\n    const tasks = new Array<Promise<any>>(taskDefs.length);\r\n    for (let i = 0; i < taskDefs.length; ++i) {\r\n        tasks[i] = callbacks[i](progs[i]);\r\n    }\r\n\r\n    return await Promise.all(tasks);\r\n}\r\n\r\nexport function progressTasks(prog: IProgress, ...subTaskDef: subProgressCallback[]) {\r\n    const taskDefs = subTaskDef.map<TaskDef>((t) => [1, t]);\r\n    return progressTasksWeighted(prog, taskDefs);\r\n}", "import { isDefined, isFunction, isObject } from \"./typeChecks\";\r\n\r\nexport interface IDisposable {\r\n    dispose(): void;\r\n}\r\n\r\nexport interface IClosable {\r\n    close(): void;\r\n}\r\n\r\nexport interface ICloneable {\r\n    clone(): unknown;\r\n}\r\n\r\nexport interface IDestroyable {\r\n    destroy(): void;\r\n}\r\n\r\nfunction interfaceSigCheck<T>(obj: any, ...funcNames: string[]): obj is T {\r\n    if (!isObject(obj)) {\r\n        return false;\r\n    }\r\n\r\n    obj = obj as any;\r\n\r\n    for (const funcName of funcNames) {\r\n        if (!(funcName in obj)) {\r\n            return false;\r\n        }\r\n\r\n        const func = obj[funcName];\r\n        if (!isFunction(func)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isDisposable(obj: any): obj is IDisposable {\r\n    return interfaceSigCheck(obj, \"dispose\");\r\n}\r\n\r\nexport function isDestroyable(obj: any): obj is IDestroyable {\r\n    return interfaceSigCheck(obj, \"destroy\");\r\n}\r\n\r\nexport function isClosable(obj: any): obj is IClosable {\r\n    return interfaceSigCheck(obj, \"close\");\r\n}\r\n\r\nexport function isCloneable(obj: any): obj is ICloneable {\r\n    return interfaceSigCheck(obj, \"clone\");\r\n}\r\n\r\nexport function dispose(val: any): void {\r\n    if (isDisposable(val)) {\r\n        val.dispose();\r\n    }\r\n\r\n    if (isClosable(val)) {\r\n        val.close();\r\n    }\r\n\r\n    if (isDestroyable(val)) {\r\n        val.destroy();\r\n    }\r\n}\r\n\r\ntype Cleanupable = IDisposable | IClosable | IDestroyable;\r\n\r\nexport function using<T extends Cleanupable, U>(val: T, thunk: (val: T) => U): U {\r\n    try {\r\n        return thunk(val);\r\n    } finally {\r\n        dispose(val);\r\n    }\r\n}\r\n\r\nexport function usingArray<T extends Cleanupable, U>(vals: T[], thunk: (val: T[]) => U): U {\r\n    try {\r\n        return thunk(vals);\r\n    } finally {\r\n        if (isDefined(vals)) {\r\n            for (const val of vals) {\r\n                dispose(val);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function usingAsync<T extends Cleanupable, U>(val: T, thunk: (val: T) => Promise<U>): Promise<U> {\r\n    try {\r\n        return await thunk(val);\r\n    } finally {\r\n        dispose(val);\r\n    }\r\n}\r\n\r\n\r\nexport async function usingArrayAsync<T extends Cleanupable, U>(vals: T[], thunk: (val: T[]) => Promise<U>): Promise<U> {\r\n    try {\r\n        return await thunk(vals);\r\n    } finally {\r\n        if (isDefined(vals)) {\r\n            for (const val of vals) {\r\n                dispose(val);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass TrashHeap implements IDisposable {\r\n    constructor(private readonly objs: IDisposable[]) {\r\n    }\r\n\r\n    dispose() {\r\n        for (const obj of this.objs) {\r\n            dispose(obj);\r\n        }\r\n    }\r\n\r\n    add(obj: IDisposable) {\r\n        this.objs.push(obj);\r\n    }\r\n}\r\n\r\nexport function trashHeap(...objs: IDisposable[]): TrashHeap {\r\n    return new TrashHeap(objs);\r\n}", "import { Task } from \"@juniper-lib/events/dist/Task\";\r\nimport { once } from \"@juniper-lib/events/dist/once\";\r\nimport { MediaType } from \"@juniper-lib/mediatypes\";\r\nimport { isDefined, isNullOrUndefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { dispose as disposeOld } from \"@juniper-lib/tslib/dist/using\";\r\nimport { Height, Src, Width } from \"./attrs\";\r\nimport { Canvas, Img } from \"./tags\";\r\n\r\nexport type CanvasTypes = HTMLCanvasElement | OffscreenCanvas;\r\nexport type CanvasImageTypes = HTMLImageElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap;\r\nexport type Context2D = CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\r\nexport type GraphicsContext = RenderingContext | OffscreenCanvasRenderingContext2D;\r\n\r\ndeclare const IS_WORKER: boolean;\r\nexport const hasHTMLCanvas = /*@__PURE__*/ !IS_WORKER && \"HTMLCanvasElement\" in globalThis;\r\nexport const hasHTMLImage = /*@__PURE__*/ !IS_WORKER && \"HTMLImageElement\" in globalThis;\r\nexport const disableAdvancedSettings = /*@__PURE__*/ false;\r\nexport const hasOffscreenCanvas = /*@__PURE__*/ !disableAdvancedSettings && \"OffscreenCanvas\" in globalThis;\r\nexport const hasImageBitmap = /*@__PURE__*/ !disableAdvancedSettings && \"createImageBitmap\" in globalThis;\r\n\r\nexport function isHTMLCanvas(obj: any): obj is HTMLCanvasElement {\r\n    return !IS_WORKER && hasHTMLCanvas && obj instanceof HTMLCanvasElement;\r\n}\r\n\r\nexport function isHTMLImage(img: any): img is HTMLImageElement {\r\n    return !IS_WORKER && hasHTMLImage && img instanceof HTMLImageElement;\r\n}\r\n\r\nexport function isOffscreenCanvas(obj: any): obj is OffscreenCanvas {\r\n    return hasOffscreenCanvas && obj instanceof OffscreenCanvas;\r\n}\r\n\r\nexport function isImageBitmap(img: any): img is ImageBitmap {\r\n    return hasImageBitmap && img instanceof ImageBitmap;\r\n}\r\n\r\nexport function isImageData(img: any): img is ImageData {\r\n    return img instanceof ImageData;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is either an HTMLCanvasElement or an OffscreenCanvas.\r\n */\r\nexport function isCanvas(obj: any): obj is CanvasTypes {\r\n    return isHTMLCanvas(obj)\r\n        || isOffscreenCanvas(obj);\r\n}\r\n\r\nexport function isCanvasArray(arr: any): arr is CanvasTypes[] {\r\n    return isDefined(arr)\r\n        && arr.length > 0\r\n        && isCanvas(arr[0]);\r\n}\r\n\r\nexport function drawImageBitmapToCanvas(canv: CanvasTypes, img: ImageBitmap): void {\r\n    const g = canv.getContext(\"2d\") as Context2D;\r\n    if (isNullOrUndefined(g)) {\r\n        throw new Error(\"Could not create 2d context for canvas\");\r\n    }\r\n    g.drawImage(img, 0, 0);\r\n}\r\n\r\nexport function drawImageDataToCanvas(canv: CanvasTypes, img: ImageData): void {\r\n    const g = canv.getContext(\"2d\") as Context2D;\r\n    if (isNullOrUndefined(g)) {\r\n        throw new Error(\"Could not create 2d context for canvas\");\r\n    }\r\n    g.putImageData(img, 0, 0);\r\n}\r\n\r\nfunction testOffscreen2D() {\r\n    try {\r\n        const canv = new OffscreenCanvas(1, 1);\r\n        const g = canv.getContext(\"2d\");\r\n        return g != null;\r\n    }\r\n    catch (exp) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const hasOffscreenCanvasRenderingContext2D = /*@__PURE__*/ hasOffscreenCanvas && testOffscreen2D();\r\n\r\nexport const createUtilityCanvas = /*@__PURE__*/ hasOffscreenCanvasRenderingContext2D && createOffscreenCanvas\r\n    || !IS_WORKER && hasHTMLCanvas && createCanvas\r\n    || null;\r\n\r\nexport const createUICanvas = /*@__PURE__*/ !IS_WORKER && hasHTMLCanvas\r\n    ? createCanvas\r\n    : createUtilityCanvas;\r\n\r\nfunction testOffscreen3D() {\r\n    try {\r\n        const canv = new OffscreenCanvas(1, 1);\r\n        const g = canv.getContext(\"webgl2\");\r\n        return g != null;\r\n    }\r\n    catch (exp) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const hasOffscreenCanvasRenderingContext3D = /*@__PURE__*/ hasOffscreenCanvas && testOffscreen3D();\r\n\r\nexport function createOffscreenCanvas(width: number, height: number): OffscreenCanvas {\r\n    return new OffscreenCanvas(width, height);\r\n}\r\n\r\nexport function createCanvas(w: number, h: number): HTMLCanvasElement {\r\n    if (IS_WORKER) {\r\n        throw new Error(\"HTML Canvas is not supported in workers\");\r\n    }\r\n\r\n    return Canvas(Width(w), Height(h));\r\n}\r\n\r\nexport function createOffscreenCanvasFromImageBitmap(img: ImageBitmap): OffscreenCanvas {\r\n    const canv = createOffscreenCanvas(img.width, img.height);\r\n    drawImageBitmapToCanvas(canv, img);\r\n    return canv;\r\n}\r\n\r\nexport function createCanvasFromImageBitmap(img: ImageBitmap): HTMLCanvasElement {\r\n    if (IS_WORKER) {\r\n        throw new Error(\"HTML Canvas is not supported in workers\");\r\n    }\r\n\r\n    const canv = createCanvas(img.width, img.height);\r\n    drawImageBitmapToCanvas(canv, img);\r\n    return canv;\r\n}\r\n\r\nexport const createUtilityCanvasFromImageBitmap = /*@__PURE__*/ hasOffscreenCanvasRenderingContext2D && createOffscreenCanvasFromImageBitmap\r\n    || !IS_WORKER && hasHTMLCanvas && createCanvasFromImageBitmap\r\n    || null;\r\n\r\nexport function createOffscreenCanvasFromImageData(img: ImageData): OffscreenCanvas {\r\n    const canv = createOffscreenCanvas(img.width, img.height);\r\n    drawImageDataToCanvas(canv, img);\r\n    return canv;\r\n}\r\n\r\nexport function createCanvasFromImageData(img: ImageData): HTMLCanvasElement {\r\n    if (IS_WORKER) {\r\n        throw new Error(\"HTML Canvas is not supported in workers\");\r\n    }\r\n\r\n    const canv = createCanvas(img.width, img.height);\r\n    drawImageDataToCanvas(canv, img);\r\n    return canv;\r\n}\r\n\r\nexport const createUtilityCanvasFromImageData = /*@__PURE__*/ hasOffscreenCanvasRenderingContext2D && createOffscreenCanvasFromImageData\r\n    || !IS_WORKER && hasHTMLCanvas && createCanvasFromImageData\r\n    || null;\r\n\r\nexport function createCanvasFromOffscreenCanvas(canv: OffscreenCanvas): HTMLCanvasElement {\r\n    if (IS_WORKER) {\r\n        throw new Error(\"HTML Canvas is not supported in workers\");\r\n    }\r\n\r\n    const c = createCanvas(canv.width, canv.height);\r\n    drawImageToCanvas(c, canv);\r\n    return c;\r\n}\r\n\r\nexport function drawImageToCanvas(canv: CanvasTypes, img: CanvasImageTypes): void {\r\n    const g = canv.getContext(\"2d\") as Context2D;\r\n    if (isNullOrUndefined(g)) {\r\n        throw new Error(\"Could not create 2d context for canvas\");\r\n    }\r\n    g.drawImage(img, 0, 0);\r\n}\r\n\r\nexport function createOffscreenCanvasFromImage(img: HTMLImageElement): OffscreenCanvas {\r\n    const canv = createOffscreenCanvas(img.width, img.height);\r\n    drawImageToCanvas(canv, img);\r\n    return canv;\r\n}\r\n\r\nexport function createCanvasFromImage(img: HTMLImageElement): HTMLCanvasElement {\r\n    if (IS_WORKER) {\r\n        throw new Error(\"HTML Canvas is not supported in workers\");\r\n    }\r\n\r\n    const canv = createCanvas(img.width, img.height);\r\n    drawImageToCanvas(canv, img);\r\n    return canv;\r\n}\r\n\r\nexport const createUtilityCanvasFromImage = /*@__PURE__*/ hasOffscreenCanvasRenderingContext2D && createOffscreenCanvasFromImage\r\n    || !IS_WORKER && hasHTMLCanvas && createCanvasFromImage\r\n    || null;\r\n\r\nexport async function createImageFromFile(file: string): Promise<HTMLImageElement> {\r\n    if (IS_WORKER) {\r\n        throw new Error(\"HTML Image is not supported in workers\");\r\n    }\r\n\r\n    const img = Img(Src(file));\r\n    await once(img, \"load\", \"error\");\r\n    return img;\r\n}\r\n\r\n/**\r\n * Resizes a canvas element\r\n * @param canv\r\n * @param w - the new width of the canvas\r\n * @param h - the new height of the canvas\r\n * @param [superscale=1] - a value by which to scale width and height to achieve supersampling. Defaults to 1.\r\n * @returns true, if the canvas size changed, false if the given size (with super sampling) resulted in the same size.\r\n */\r\nexport function setCanvasSize(canv: CanvasTypes, w: number, h: number, superscale = 1) {\r\n    w = Math.floor(w * superscale);\r\n    h = Math.floor(h * superscale);\r\n    if (canv.width != w\r\n        || canv.height != h) {\r\n        canv.width = w;\r\n        canv.height = h;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function is2DRenderingContext(ctx: GraphicsContext): ctx is Context2D {\r\n    return isDefined((ctx as Context2D).textBaseline);\r\n}\r\n\r\nexport function setCanvas2DContextSize(ctx: Context2D, w: number, h: number, superscale = 1) {\r\n    const oldImageSmoothingEnabled = ctx.imageSmoothingEnabled,\r\n        oldTextBaseline = ctx.textBaseline,\r\n        oldTextAlign = ctx.textAlign,\r\n        oldFont = ctx.font,\r\n        resized = setCanvasSize(\r\n            ctx.canvas,\r\n            w,\r\n            h,\r\n            superscale);\r\n\r\n    if (resized) {\r\n        ctx.imageSmoothingEnabled = oldImageSmoothingEnabled;\r\n        ctx.textBaseline = oldTextBaseline;\r\n        ctx.textAlign = oldTextAlign;\r\n        ctx.font = oldFont;\r\n    }\r\n\r\n    return resized;\r\n}\r\n\r\n/**\r\n * Resizes the canvas element of a given rendering context.\r\n * \r\n * Note: the imageSmoothingEnabled, textBaseline, textAlign, and font \r\n * properties of the context will be restored after the context is resized,\r\n * as these values are usually reset to their default values when a canvas\r\n * is resized.\r\n * @param ctx\r\n * @param w - the new width of the canvas\r\n * @param h - the new height of the canvas\r\n * @param [superscale=1] - a value by which to scale width and height to achieve supersampling. Defaults to 1.\r\n * @returns true, if the canvas size changed, false if the given size (with super sampling) resulted in the same size.\r\n */\r\nexport function setContextSize(ctx: GraphicsContext, w: number, h: number, superscale = 1) {\r\n    if (is2DRenderingContext(ctx)) {\r\n        return setCanvas2DContextSize(ctx, w, h, superscale);\r\n    }\r\n    else {\r\n        return setCanvasSize(\r\n            ctx.canvas,\r\n            w,\r\n            h,\r\n            superscale);\r\n    }\r\n}\r\n\r\n/**\r\n * Resizes a canvas element to match the proportions of the size of the element in the DOM.\r\n * @param canv\r\n * @param [superscale=1] - a value by which to scale width and height to achieve supersampling. Defaults to 1.\r\n * @returns true, if the canvas size changed, false if the given size (with super sampling) resulted in the same size.\r\n */\r\nexport function resizeCanvas(canv: HTMLCanvasElement, superscale = 1) {\r\n    if (IS_WORKER) {\r\n        throw new Error(\"HTML Canvas is not supported in workers\");\r\n    }\r\n\r\n    return setCanvasSize(\r\n        canv,\r\n        canv.clientWidth,\r\n        canv.clientHeight,\r\n        superscale);\r\n}\r\n\r\n/**\r\n * Resizes a canvas element of a given rendering context to match the proportions of the size of the element in the DOM.\r\n * @param ctx\r\n * @param [superscale=1] - a value by which to scale width and height to achieve supersampling. Defaults to 1.\r\n * @returns true, if the canvas size changed, false if the given size (with super sampling) resulted in the same size.\r\n */\r\nexport function resizeContext(ctx: CanvasRenderingContext2D, superscale = 1) {\r\n    return setContextSize(\r\n        ctx,\r\n        ctx.canvas.clientWidth,\r\n        ctx.canvas.clientHeight,\r\n        superscale);\r\n}\r\n\r\nexport function canvasToBlob(canvas: CanvasTypes, type?: string | MediaType, quality?: number): Promise<Blob> {\r\n    if (type instanceof MediaType) {\r\n        type = type.value;\r\n    }\r\n\r\n    if (isOffscreenCanvas(canvas)) {\r\n        return canvas.convertToBlob({ type, quality });\r\n    }\r\n    else if (isHTMLCanvas(canvas)) {\r\n        const blobCreated = new Task<Blob>();\r\n        canvas.toBlob(blobCreated.resolve, type, quality);\r\n        return blobCreated;\r\n    }\r\n    else {\r\n        throw new Error(\"Cannot save image from canvas\");\r\n    }\r\n}\r\n\r\nexport async function snapshot(canvas: CanvasTypes): Promise<CanvasTypes> {\r\n    const copy = createUtilityCanvas(canvas.width, canvas.height);\r\n    drawImageToCanvas(copy, canvas);\r\n    return copy;\r\n}\r\n\r\nexport function dispose(val: any) {\r\n    if (isCanvas(val)) {\r\n        val.width = val.height = 0;\r\n    }\r\n    else {\r\n        disposeOld(val);\r\n    }\r\n}", "import { vec2, vec3 } from \"gl-matrix\";\r\nimport { isDefined, isGoodNumber, isNumber } from \"./typeChecks\";\r\n\r\nexport const RIGHT = /*@__PURE__*/ vec3.fromValues(1, 0, 0);\r\nexport const UP = /*@__PURE__*/ vec3.fromValues(0, 1, 0);\r\nexport const FWD = /*@__PURE__*/ vec3.fromValues(0, 0, -1);\r\nexport const Pi =/*@__PURE__*/ Math.PI;\r\nexport const HalfPi =/*@__PURE__*/ 0.5 * Pi;\r\nexport const Tau = /*@__PURE__*/ 2 * Pi;\r\nexport const TWENTY_FOUR_LOG10 = /*@__PURE__*/ 55.2620422318571;\r\nexport const LOG1000 = /*@__PURE__*/ 6.90775527898214;\r\nexport const LOG2_DIV2 = /*@__PURE__*/ 0.346573590279973;\r\nexport const EPSILON_FLOAT = /*@__PURE__*/ 1e-8;\r\nexport const TIME_MAX = 8640000000000000;\r\nexport const TIME_MIN = -TIME_MAX;\r\n\r\n/**\r\n * Find the median of an array of numbers.\r\n * Returns null on an empty array.\r\n * Assumes the array is sorted.\r\n * Returns the value of the middle element in an odd-length array.\r\n * Returns the midpoint between the middle-most two values of an even-length array.\r\n **/\r\nexport function calculateMedian(arr: readonly number[]): number {\r\n    if (arr.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (arr.length % 2 === 0) {\r\n        const mid = Math.floor(arr.length / 2) - 1;\r\n        return arr[mid] / 2 + arr[mid + 1] / 2;\r\n    }\r\n\r\n    const mid = (arr.length - 1) / 2;\r\n    return arr[mid];\r\n}\r\n\r\n/**\r\n * Calculates the arithmetic mean of an array of numbers.\r\n * Returns null on an empty array.\r\n **/\r\nexport function calculateMean(arr: readonly number[]): number {\r\n    if (arr.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    let accum = 0;\r\n    for (const value of arr) {\r\n        accum += value / arr.length;\r\n    }\r\n\r\n    return accum;\r\n}\r\n\r\n/**\r\n * Calculates the statistical variance of an array of numbers.\r\n * Returns null for arrays smaller than 2 elements.\r\n **/\r\nexport function calculateVariance(arr: readonly number[]): number {\r\n    if (arr.length < 2) {\r\n        return null;\r\n    }\r\n\r\n    const mean = calculateMean(arr);\r\n\r\n    const squaredDiffs = arr\r\n        .map((x) => (x - mean) ** 2)\r\n        .reduce((acc, x) => acc + x, 0);\r\n\r\n    return squaredDiffs / (arr.length - 1);\r\n}\r\n\r\n/**\r\n * Calculates the standard deviation of an array of numbers.\r\n * Returns null for arrays smaller than 2 elements.\r\n **/\r\nexport function calculateStandardDeviation(arr: readonly number[]): number {\r\n    if (arr.length < 2) {\r\n        return null;\r\n    }\r\n\r\n    const variance = calculateVariance(arr);\r\n    return Math.sqrt(variance);\r\n}\r\n\r\nexport function xy2i(x: number, y: number, width: number, components = 1): number {\r\n    return components * (x + width * y);\r\n}\r\n\r\nexport function vec22i(vec: vec2, width: number, components = 1): number {\r\n    return xy2i(vec[0], vec[1], width, components);\r\n}\r\n\r\nexport function i2vec2(vec: vec2, i: number, width: number, components = 1): void {\r\n    const stride = width * components;\r\n    const p = i % stride;\r\n    const x = Math.floor(p / components);\r\n    const y = Math.floor(i / stride);\r\n    vec2.set(vec, x, y);\r\n}\r\n\r\nexport function radiansClamp(radians: number) {\r\n    return ((radians % Tau) + Tau) % Tau;\r\n}\r\n\r\nexport function degreesClamp(radians: number) {\r\n    return ((radians % 360) + 360) % 360;\r\n}\r\n\r\n/**\r\n * Force a value onto a range\r\n */\r\nexport function clamp(v: number, min: number, max: number) {\r\n    return Math.min(max, Math.max(min, v));\r\n}\r\n\r\n/**\r\n * Convert degress to radians\r\n * @param degrees\r\n */\r\nexport function deg2rad(degrees: number) {\r\n    return degrees * Tau / 360;\r\n}\r\n\r\n/**\r\n * Convert radias to degress\r\n * @param radians\r\n */\r\nexport function rad2deg(radians: number) {\r\n    return radians * 360 / Tau;\r\n}\r\n\r\n/**\r\n * Returns the number with the largest magnitude.\r\n * @param a\r\n * @param b\r\n */\r\nexport function maxly(...numbers: number[]) {\r\n    let max = 0;\r\n    for (const n of numbers) {\r\n        if (Math.abs(n) > max) {\r\n            max = n;\r\n        }\r\n    }\r\n\r\n    return max;\r\n}\r\n\r\n/**\r\n * Returns the number with the smallest magnitude.\r\n * @param numbers\r\n */\r\nexport function minly(...numbers: number[]) {\r\n    let min = Number.MAX_VALUE;\r\n    for (const n of numbers) {\r\n        if (Math.abs(n) < min) {\r\n            min = n;\r\n        }\r\n    }\r\n\r\n    return min;\r\n}\r\n\r\n/**\r\n * Translate a value into a range.\r\n */\r\nexport function project(v: number, min: number, max: number) {\r\n    const delta = max - min;\r\n    if (delta === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return (v - min) / delta;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Translate a value out of a range.\r\n */\r\n\r\nexport function unproject(v: number, min: number, max: number) {\r\n    return v * (max - min) + min;\r\n}\r\n\r\n\r\nexport function formatNumber(value: number, digits = 0): string {\r\n    if (isNumber(value)) {\r\n        return value.toFixed(digits);\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport function parseNumber(value: string): number {\r\n    if (/\\d+/.test(value)) {\r\n        return parseFloat(value);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function formatVolume(value: number): string {\r\n    if (isNumber(value)) {\r\n        return clamp(unproject(value, 0, 100), 0, 100).toFixed(0);\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport function parseVolume(value: string): number {\r\n    if (/\\d+/.test(value)) {\r\n        return clamp(project(parseInt(value, 10), 0, 100), 0, 1);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Pick a value that is proportionally between two values.\r\n */\r\nexport function lerp(a: number, b: number, p: number) {\r\n    return (1 - p) * a + p * b;\r\n}\r\n\r\nexport interface IPoint {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface ISize {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface PaddingRect {\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    left: number;\r\n}\r\n\r\nexport interface IRectangle extends PaddingRect {\r\n    point: IPoint;\r\n    size: ISize;\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Point implements IPoint {\r\n    constructor(public x: number = 0, public y: number = 0) {\r\n        Object.seal(this);\r\n    }\r\n\r\n    set(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    copy(p: IPoint) {\r\n        if (isDefined(p)) {\r\n            this.x = p.x;\r\n            this.y = p.y;\r\n        }\r\n    }\r\n\r\n    toCell(character: ISize, scroll: IPoint, gridBounds: IRectangle) {\r\n        this.x = Math.round(this.x / character.width) + scroll.x - gridBounds.x;\r\n        this.y = Math.floor((this.y / character.height) - 0.25) + scroll.y;\r\n    }\r\n\r\n    inBounds(bounds: IRectangle) {\r\n        return bounds.left <= this.x\r\n            && this.x < bounds.right\r\n            && bounds.top <= this.y\r\n            && this.y < bounds.bottom;\r\n    }\r\n\r\n    clone() {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    toString() {\r\n        return `(x:${this.x}, y:${this.y})`;\r\n    }\r\n}\r\n\r\nexport class Size implements ISize {\r\n    constructor(public width = 0, public height = 0) {\r\n        Object.seal(this);\r\n    }\r\n\r\n    set(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    copy(s: ISize) {\r\n        if (isDefined(s)) {\r\n            this.width = s.width;\r\n            this.height = s.height;\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        return new Size(this.width, this.height);\r\n    }\r\n\r\n    toString() {\r\n        return `<w:${this.width}, h:${this.height}>`;\r\n    }\r\n}\r\n\r\nexport class Rectangle implements IRectangle {\r\n    point: Point;\r\n    size: Size;\r\n    constructor(x = 0, y = 0, width = 0, height = 0) {\r\n        this.point = new Point(x, y);\r\n        this.size = new Size(width, height);\r\n        Object.freeze(this);\r\n    }\r\n\r\n    get x() {\r\n        return this.point.x;\r\n    }\r\n\r\n    set x(x) {\r\n        this.point.x = x;\r\n    }\r\n\r\n    get left() {\r\n        return this.point.x;\r\n    }\r\n    set left(x) {\r\n        this.point.x = x;\r\n    }\r\n\r\n    get width() {\r\n        return this.size.width;\r\n    }\r\n    set width(width) {\r\n        this.size.width = width;\r\n    }\r\n\r\n    get right() {\r\n        return this.point.x + this.size.width;\r\n    }\r\n    set right(right) {\r\n        this.point.x = right - this.size.width;\r\n    }\r\n\r\n    get y() {\r\n        return this.point.y;\r\n    }\r\n    set y(y) {\r\n        this.point.y = y;\r\n    }\r\n\r\n    get top() {\r\n        return this.point.y;\r\n    }\r\n    set top(y) {\r\n        this.point.y = y;\r\n    }\r\n\r\n    get height() {\r\n        return this.size.height;\r\n    }\r\n    set height(height) {\r\n        this.size.height = height;\r\n    }\r\n\r\n    get bottom() {\r\n        return this.point.y + this.size.height;\r\n    }\r\n    set bottom(bottom) {\r\n        this.point.y = bottom - this.size.height;\r\n    }\r\n\r\n    get area() {\r\n        return this.width * this.height;\r\n    }\r\n\r\n    set(x: number, y: number, width: number, height: number) {\r\n        this.point.set(x, y);\r\n        this.size.set(width, height);\r\n    }\r\n\r\n    copy(r: IRectangle) {\r\n        if (isDefined(r)) {\r\n            this.point.copy(r.point);\r\n            this.size.copy(r.size);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        return new Rectangle(this.point.x, this.point.y, this.size.width, this.size.height);\r\n    }\r\n\r\n    overlap(r: IRectangle) {\r\n        const left = Math.max(this.left, r.left),\r\n            top = Math.max(this.top, r.top),\r\n            right = Math.min(this.right, r.right),\r\n            bottom = Math.min(this.bottom, r.bottom);\r\n        if (right > left && bottom > top) {\r\n            return new Rectangle(left, top, right - left, bottom - top);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return `[${this.point.toString()} x ${this.size.toString()}]`;\r\n    }\r\n}\r\n\r\nexport function isPowerOf2(v: number) {\r\n    return ((v != 0) && !(v & (v - 1)));\r\n}\r\n\r\nexport function nextPowerOf2(v: number) {\r\n    return Math.pow(2, Math.ceil(Math.log2(v)));\r\n}\r\n\r\nexport function prevPowerOf2(v: number) {\r\n    return Math.pow(2, Math.floor(Math.log2(v)));\r\n}\r\n\r\nexport function closestPowerOf2(v: number) {\r\n    return Math.pow(2, Math.round(Math.log2(v)));\r\n}\r\n\r\nexport function truncate(v: number): number {\r\n    if (Math.abs(v) > 0.0001) {\r\n        return v;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\ninterface Vec2 { x: number; y: number; }\r\ninterface Vec3 extends Vec2 { z: number }\r\ninterface Vec4 extends Vec3 { w: number }\r\ntype Vec = Vec2 | Vec3 | Vec4 | ArrayLike<number>;\r\n\r\nexport function warnOnNaN(val: number | Vec, msg?: string): void {\r\n    let type: string = null;\r\n    let isBad = false;\r\n\r\n    if (isNumber(val)) {\r\n        type = \"Value is\";\r\n        isBad = !isGoodNumber(val);\r\n    }\r\n    else if (\"length\" in val) {\r\n        type = \"Array contains\";\r\n        for (let i = 0; i < val.length; ++i) {\r\n            if (!isGoodNumber(val[i])) {\r\n                isBad = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        type = \"Vector component\";\r\n        if (\"w\" in val) {\r\n            isBad = isBad || !isGoodNumber(val.w);\r\n        }\r\n\r\n        if (\"z\" in val) {\r\n            isBad = isBad || !isGoodNumber(val.z);\r\n        }\r\n\r\n        isBad = isBad || !isGoodNumber(val.y);\r\n        isBad = isBad || !isGoodNumber(val.x);\r\n    }\r\n\r\n\r\n    if (isBad) {\r\n        if (msg) {\r\n            msg = `[${msg}] `;\r\n        }\r\n        else {\r\n            msg = \"\";\r\n        }\r\n\r\n        console.warn(`${msg}${type} not-a-number`);\r\n    }\r\n}\r\n", "import { Pi } from \"@juniper-lib/tslib/dist/math\";\r\n\r\nexport type TweenFunc = (t: number, k: number, d: boolean) => number;\r\n\r\n/**\r\n * Different modes of animating a single value from 0 to 1.\r\n **/\r\nexport type TweenType =\r\n    /**\r\n     * The most basic form of `tween, values increase in proportion to time, from\r\n     * 0 to 1 in the forward direction, then 1 to 0 in the reverse direction.\r\n     **/\r\n    \"Linear\"\r\n\r\n    /**\r\n     * Values increase in proportion to time from -1 to 0 in the forward direction,\r\n     * then 0 to 1 in the reverse, rather than decreasing from 1 to 0.\r\n     **/\r\n    | \"LinearContinuous\"\r\n\r\n    /**\r\n     * Values increase in proportion to the square of time, from 0 to 1 in the forward direction,\r\n     * then 1 to 0 in the reverse direction.\r\n     **/\r\n    | \"Quadratic\"\r\n\r\n    /**\r\n     * Values increase in proportion to the square of time. from -1 to 0 in the forward direction,\r\n     * then 0 to 1 in the reverse direction.\r\n     **/\r\n    | \"QuadraticContinuous\"\r\n\r\n    | \"Sine\"\r\n\r\n    | \"SineContinuous\"\r\n\r\n    /**\r\n     * Similar to <see cref=\"Sine\"/>, but values bump in the opposite direction slightly, before\r\n     * the beginning and the end of the curve.\r\n     **/\r\n    | \"Bump\"\r\n\r\n    /**\r\n     * Similar to <see cref=\"Sine\"/>, but values bump in the opposite direction slightly, before\r\n     * the beginning and the end of the curve.\r\n     **/\r\n    | \"BumpContinuous\"\r\n\r\n    | \"Jump\";\r\n\r\n/**\r\n * Implementations for each of the values in <see cref=\"TweenType\"/>.\r\n * All functions receive a value t, representing the proportion of the way through the animation process we are\r\n * calculating. All functions take an extra `k` parameter, for scaling tertiary effects; most functions do not use it.\r\n * All functions return a value v, mapping the value t to one of the desired 'tween shapes.\r\n **/\r\nexport function isContinuous(tween: TweenType): boolean {\r\n    return tween == \"LinearContinuous\"\r\n        || tween == \"QuadraticContinuous\"\r\n        || tween == \"SineContinuous\"\r\n        || tween == \"BumpContinuous\";\r\n}\r\n\r\nexport function linear(t: number): number {\r\n    return t;\r\n}\r\n\r\nexport function quadratic(t: number): number {\r\n    return t * t;\r\n}\r\n\r\nexport function sine(t: number): number {\r\n    const a = t * Pi;\r\n    return Math.sin(a);\r\n}\r\n\r\nexport function bump(t: number, k: number): number {\r\n    const a = t * Pi;\r\n    return ((0.5 * (1 - Math.cos(a))) - (k * Math.sin(2 * a)));\r\n}\r\n\r\nexport function jump(t: number, k: number): number {\r\n    const a = (t - 0.5) * Pi;\r\n    return t * t + k * Math.cos(a);\r\n}\r\n\r\nexport function linearContinuous(t: number, _k: number, d: boolean): number {\r\n    if (d) {\r\n        return t - 1;\r\n    }\r\n    else {\r\n        return 1 - t;\r\n    }\r\n}\r\n\r\nexport function quadraticContinuous(t: number, _k: number, d: boolean): number {\r\n    t = linearContinuous(t, null, d);\r\n    return Math.sign(t) * quadratic(t);\r\n}\r\n\r\nexport function sineContinuous(t: number, _k: number, d: boolean): number {\r\n    t = linearContinuous(t, null, d);\r\n    return sine(t);\r\n}\r\n\r\nexport function bumpContinuous(t: number, k: number, d: boolean): number {\r\n    t = linearContinuous(t, null, d);\r\n    return bump(t, k);\r\n}", "import { isNullOrUndefined } from \"./typeChecks\";\r\n\r\nexport function singleton<T>(name: string, create?: () => T): T {\r\n    const box = globalThis as any;\r\n    let value = box[name] as T;\r\n    if (isNullOrUndefined(value)) {\r\n        if (isNullOrUndefined(create)) {\r\n            throw new Error(`No value ${name} found`);\r\n        }\r\n        value = create();\r\n        box[name] = value;\r\n    }\r\n    return value;\r\n}", "const { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding } = THREE;\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };", "import { isDefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { Color, CubeTexture, Euler, Material, Mesh, MeshBasicMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, Object3D, Quaternion, Texture } from \"three\";\r\n\r\nexport function isMesh(obj: any): obj is Mesh {\r\n    return isDefined(obj)\r\n        && obj.isMesh;\r\n}\r\n\r\nexport function isMaterial(obj: any): obj is Material {\r\n    return isDefined(obj)\r\n        && obj.isMaterial;\r\n}\r\n\r\nfunction isNamedMaterial<T extends Material>(name: string, obj: any): obj is T {\r\n    return isMaterial(obj)\r\n        && obj.type === name;\r\n}\r\n\r\nexport function isMeshBasicMaterial(obj: any): obj is MeshBasicMaterial {\r\n    return isNamedMaterial(\"MeshBasicMaterial\", obj);\r\n}\r\n\r\nexport function isMeshStandardMaterial(obj: any): obj is MeshStandardMaterial {\r\n    return isNamedMaterial(\"MeshStandardMaterial\", obj);\r\n}\r\n\r\nexport function isMeshPhongMaterial(obj: any): obj is MeshPhongMaterial {\r\n    return isNamedMaterial(\"MeshPhongMaterial\", obj);\r\n}\r\n\r\nexport function isMeshPhysicalMaterial(obj: any): obj is MeshPhysicalMaterial {\r\n    return isNamedMaterial(\"MeshPhysicalMaterial\", obj);\r\n}\r\n\r\nexport function isTexture(obj: any): obj is Texture {\r\n    return isDefined(obj)\r\n        && (obj as Texture).isTexture;\r\n}\r\n\r\nexport function isColor(obj: any): obj is Color {\r\n    return isDefined(obj)\r\n        && (obj as Color).isColor;\r\n}\r\n\r\nexport function isCubeTexture(obj: any): obj is CubeTexture {\r\n    return isDefined(obj)\r\n        && obj.isCubeTexture;\r\n}\r\n\r\nexport function isObject3D(obj: any): obj is Object3D {\r\n    return isDefined(obj)\r\n        && (obj as Object3D).isObject3D;\r\n}\r\n\r\nexport function isQuaternion(obj: any): obj is Quaternion {\r\n    return isDefined(obj)\r\n        && (obj as Quaternion).isQuaternion;\r\n}\r\n\r\nexport function isEuler(obj: any): obj is Euler {\r\n    return isDefined(obj)\r\n        && (obj as Euler).isEuler;\r\n}", "import { isDisableable } from \"@juniper-lib/dom/dist/tags\";\r\nimport { isDefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { BufferGeometry, Material, Mesh, Object3D, Vector3 } from \"three\";\r\nimport { isObject3D } from \"./typeChecks\";\r\n\r\nexport interface ErsatzObject {\r\n    object: Object3D;\r\n}\r\n\r\nexport function isErsatzObject(obj: any): obj is ErsatzObject {\r\n    return isDefined(obj)\r\n        && isObject3D(obj.object);\r\n}\r\n\r\nexport type Objects = Object3D | ErsatzObject;\r\n\r\nexport function isObjects(obj: any): obj is Objects {\r\n    return isErsatzObject(obj)\r\n        || isObject3D(obj);\r\n}\r\n\r\nexport function objectResolve(obj: Objects): Object3D {\r\n    if (isErsatzObject(obj)) {\r\n        return obj.object;\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nexport function objectSetVisible(obj: Objects, visible: boolean): boolean {\r\n    obj = objectResolve(obj);\r\n    obj.visible = visible;\r\n    return visible;\r\n}\r\n\r\nexport function objectIsVisible(obj: Objects): boolean {\r\n    obj = objectResolve(obj);\r\n    return obj.visible;\r\n}\r\n\r\nexport function objectIsFullyVisible(obj: Objects) {\r\n    if (!obj) {\r\n        return false;\r\n    }\r\n\r\n    obj = objectResolve(obj);\r\n    while (obj) {\r\n        if (!obj.visible) {\r\n            return false;\r\n        }\r\n        obj = obj.parent;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function objectToggleVisible(obj: Objects): void {\r\n    objectSetVisible(obj, !objectIsVisible(obj));\r\n}\r\n\r\nexport function objGraph<T extends Objects>(obj: T, ...children: Objects[]): T {\r\n    const toAdd = children\r\n        .filter(isDefined)\r\n        .map(objectResolve);\r\n    if (toAdd.length > 0) {\r\n        objectResolve(obj)\r\n            .add(...toAdd);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nexport function objRemoveFromParent(obj: Objects) {\r\n    obj = objectResolve(obj);\r\n    if (isDefined(obj)) {\r\n        obj.removeFromParent();\r\n    }\r\n}\r\n\r\nexport function obj(name: string, ...rest: Objects[]): Object3D {\r\n    const obj = new Object3D();\r\n    obj.name = name;\r\n    objGraph(obj, ...rest);\r\n    return obj;\r\n}\r\n\r\nexport function objectClearChildren(obj: Objects) {\r\n    obj = objectResolve(obj);\r\n    obj.clear();\r\n}\r\n\r\nexport function objectSetEnabled(obj: Objects, enabled: boolean) {\r\n    obj = objectResolve(obj);\r\n    if (isDisableable(obj)) {\r\n        obj.disabled = !enabled;\r\n    }\r\n}\r\n\r\nexport function objectSetWorldPosition(obj: Objects, pos: Vector3) {\r\n    obj = objectResolve(obj);\r\n    const parent = obj.parent;\r\n    obj.removeFromParent();\r\n    obj.position.copy(pos);\r\n    if (isDefined(parent)) {\r\n        parent.attach(obj);\r\n    }\r\n}\r\n\r\nexport function mesh<\r\n    TGeometry extends BufferGeometry = BufferGeometry,\r\n    TMaterial extends Material | Material[] = Material | Material[]\r\n>(name: string, geom?: TGeometry, mat?: TMaterial): Mesh<TGeometry, TMaterial> {\r\n    const mesh = new Mesh(geom, mat);\r\n    mesh.name = name;\r\n    return mesh;\r\n}", "import { bump } from \"@juniper-lib/graphics2d/dist/animation/tween\";\r\nimport { singleton } from \"@juniper-lib/tslib/dist/singleton\";\r\nimport { IDisposable, dispose } from \"@juniper-lib/tslib/dist/using\";\r\nimport { Object3D, Vector3 } from \"three\";\r\nimport { RayTarget } from \"../eventSystem/RayTarget\";\r\nimport { objectResolve, Objects } from \"../objects\";\r\nimport { isMesh } from \"../typeChecks\";\r\n\r\n/**\r\n * This is a hack to make sure all Applications get the same scaleOnHover state as the Environment.\r\n **/\r\nconst scaledItems = singleton(\"Juniper:ScaledItems\", () => new Map<Objects, ScaleState>());\r\nconst start = 1;\r\nconst end = 1.1;\r\nconst timeScale = 0.005;\r\n\r\nclass ScaleState implements IDisposable {\r\n    private readonly obj: Object3D;\r\n    private readonly base: Vector3;\r\n\r\n    private p: number;\r\n    private dir: number;\r\n    private running: boolean;\r\n    private wasDisabled: boolean;\r\n\r\n    constructor(private readonly target: RayTarget) {\r\n        this.obj = objectResolve(this.target);\r\n        this.base = this.obj.scale.clone();\r\n        this.p = 0;\r\n        this.dir = 0;\r\n        this.running = false;\r\n        this.wasDisabled = this.disabled;\r\n\r\n        this.target.addScopedEventListener(this, \"enter\", (evt) => {\r\n            if (evt.pointer.type !== \"nose\") {\r\n                this.run(1);\r\n            }\r\n        });\r\n\r\n        this.target.addScopedEventListener(this, \"exit\", (evt) => {\r\n            if (evt.pointer.type !== \"nose\") {\r\n                this.run(-1);\r\n            }\r\n        });\r\n\r\n        this.obj.traverse(child => {\r\n            if (isMesh(child)) {\r\n                this.target.addMesh(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    private get disabled() {\r\n        return this.target.disabled;\r\n    }\r\n\r\n    private run(d: number) {\r\n        if (!this.disabled || (d === -1 || this.p > 0)) {\r\n            this.dir = d;\r\n            this.running = true;\r\n        }\r\n    }\r\n\r\n    updateScaling(dt: number) {\r\n        if (this.disabled !== this.wasDisabled) {\r\n            this.wasDisabled = this.disabled;\r\n            if (this.disabled) {\r\n                this.run(-1);\r\n            }\r\n        }\r\n\r\n        if (this.running) {\r\n            this.p += this.dir * dt;\r\n\r\n            if (this.dir > 0 && this.p >= 1\r\n                || this.dir < 0 && this.p < 0) {\r\n                this.p = Math.max(0, Math.min(1, this.p));\r\n                this.running = false;\r\n            }\r\n\r\n            const q = bump(this.p, 1.1);\r\n            this.obj.scale.copy(this.base)\r\n                .multiplyScalar(q * (end - start) + start);\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        this.target.removeScope(this);\r\n    }\r\n}\r\n\r\nexport function updateScalings(dt: number) {\r\n    dt *= timeScale;\r\n    for (const state of scaledItems.values()) {\r\n        state.updateScaling(dt);\r\n    }\r\n}\r\n\r\nexport function removeScaledObj(obj: Object3D) {\r\n    const state = scaledItems.get(obj);\r\n    if (state) {\r\n        scaledItems.delete(obj);\r\n        dispose(state);\r\n    }\r\n}\r\n\r\nexport function scaleOnHover(target: RayTarget<any>, enabled: boolean) {\r\n    const has = scaledItems.has(target);\r\n    if (enabled != has) {\r\n        if (enabled) {\r\n            scaledItems.set(target, new ScaleState(target));\r\n        }\r\n        else {\r\n            const scaler = scaledItems.get(target);\r\n            dispose(scaler);\r\n            scaledItems.delete(target);\r\n        }\r\n    }\r\n}", "import { dispose } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { isArray } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { removeScaledObj } from \"./animation/scaleOnHover\";\r\n\r\nexport function cleanup(obj: any) {\r\n    const cleanupQ = new Array<any>();\r\n    const cleanupSeen = new Set<any>();\r\n\r\n    cleanupQ.push(obj);\r\n    while (cleanupQ.length > 0) {\r\n        const here = cleanupQ.shift();\r\n        if (here && !cleanupSeen.has(here)) {\r\n            cleanupSeen.add(here);\r\n\r\n            if (here.isMesh) {\r\n                cleanupQ.push(\r\n                    here.material,\r\n                    here.geometry);\r\n            }\r\n\r\n            if (here.isMaterial) {\r\n                cleanupQ.push(...Object.values(here));\r\n            }\r\n\r\n            if (here.isObject3D) {\r\n                cleanupQ.push(...here.children);\r\n                here.clear();\r\n                removeScaledObj(here);\r\n            }\r\n\r\n            if (isArray(here)) {\r\n                cleanupQ.push(...here);\r\n            }\r\n\r\n            dispose(here);\r\n        }\r\n    }\r\n\r\n    cleanupSeen.clear();\r\n}\r\n", "import { TypedEvent, TypedEventTarget } from \"@juniper-lib/events/dist/TypedEventTarget\";\r\nimport { IDataLogger } from \"@juniper-lib/tslib/dist/IDataLogger\";\r\nimport type { IProgress } from \"@juniper-lib/progress/dist/IProgress\";\r\nimport { isDefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport type { IDisposable } from \"@juniper-lib/tslib/dist/using\";\r\nimport type { Environment } from \"./Environment\";\r\n\r\nclass ApplicationEvent<T extends string> extends TypedEvent<T> {\r\n    constructor(type: T, public readonly app: Application) {\r\n        super(type);\r\n    }\r\n}\r\n\r\nexport class ApplicationJoinRoomEvent extends ApplicationEvent<\"joinroom\">{\r\n    constructor(app: Application, public readonly roomName: string) {\r\n        super(\"joinroom\", app);\r\n    }\r\n}\r\n\r\nexport class ApplicationQuitEvent extends ApplicationEvent<\"quit\">{\r\n    constructor(app: Application) {\r\n        super(\"quit\", app);\r\n    }\r\n}\r\n\r\nexport class ApplicationShownEvent extends ApplicationEvent<\"shown\">{\r\n    constructor(app: Application) {\r\n        super(\"shown\", app);\r\n    }\r\n}\r\n\r\nexport class ApplicationHiddenEvent extends ApplicationEvent<\"hidden\">{\r\n    constructor(app: Application) {\r\n        super(\"hidden\", app);\r\n    }\r\n}\r\n\r\n\r\nexport type ApplicationEvents = {\r\n    joinroom: ApplicationJoinRoomEvent;\r\n    quit: ApplicationQuitEvent;\r\n    shown: ApplicationShownEvent;\r\n    hidden: ApplicationHiddenEvent;\r\n}\r\n\r\nexport abstract class Application<EventsT extends ApplicationEvents = ApplicationEvents>\r\n    extends TypedEventTarget<EventsT>\r\n    implements IDisposable, IDataLogger {\r\n\r\n    private dataLogger: IDataLogger = null;\r\n\r\n    constructor(public readonly env: Environment) {\r\n        super();\r\n    }\r\n\r\n    quit() {\r\n        this.dispatchEvent(new ApplicationQuitEvent(this));\r\n    }\r\n\r\n    join(roomName: string) {\r\n        this.dispatchEvent(new ApplicationJoinRoomEvent(this, roomName));\r\n        this.env.avatar.reset();\r\n    }\r\n\r\n    async show(prog?: IProgress): Promise<void> {\r\n        await this.showing(prog);\r\n        this.dispatchEvent(new ApplicationShownEvent(this));\r\n    }\r\n\r\n    hide(): void {\r\n        this.hiding();\r\n        this.dispatchEvent(new ApplicationHiddenEvent(this));\r\n    }\r\n\r\n    init(params: Map<string, unknown>): Promise<void> {\r\n        this.dataLogger = params.get(\"dataLogger\") as IDataLogger;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    log(key: string, value?: object): void {\r\n        if (isDefined(this.dataLogger)) {\r\n            this.dataLogger.log(key, value);\r\n        }\r\n    }\r\n\r\n    error(page: string, operation: string, exception: any): void {\r\n        if (isDefined(this.dataLogger)) {\r\n            this.dataLogger.error(page, operation, exception);\r\n        }\r\n    }\r\n\r\n    onError(page: string, operation: string): (exception: any) => void {\r\n        return this.error.bind(this, page, operation);\r\n    }\r\n\r\n    protected abstract showing(prog?: IProgress): Promise<void>;\r\n    protected abstract hiding(): void;\r\n\r\n    abstract get visible(): boolean;\r\n\r\n    abstract load(prog?: IProgress): Promise<void>;\r\n    abstract dispose(): void;\r\n}\r\n\r\nexport type ApplicationConstructor = Constructor<Application, typeof Application>\r\n\r\nexport interface ApplicationModule {\r\n    default: ApplicationConstructor;\r\n}", "import type { IProgress } from \"@juniper-lib/progress/dist/IProgress\";\r\nimport { singleton } from \"@juniper-lib/tslib/dist/singleton\";\r\nimport { isString } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { px } from \"./css\";\r\n\r\nconst DEFAULT_TEST_TEXT = \"The quick brown fox jumps over the lazy dog\";\r\nconst loadedFonts = singleton<string[]>(\"juniper::loadedFonts\", () => []);\r\n\r\nexport interface FontDescription {\r\n    fontSize: number;\r\n    fontFamily: string;\r\n\r\n    fontStyle?: string;\r\n    fontVariant?: string;\r\n    fontWeight?: string;\r\n}\r\n\r\nexport function makeFont(style: FontDescription): string {\r\n    const fontParts = [];\r\n    if (style.fontStyle && style.fontStyle !== \"normal\") {\r\n        fontParts.push(style.fontStyle);\r\n    }\r\n\r\n    if (style.fontVariant && style.fontVariant !== \"normal\") {\r\n        fontParts.push(style.fontVariant);\r\n    }\r\n\r\n    if (style.fontWeight && style.fontWeight !== \"normal\") {\r\n        fontParts.push(style.fontWeight);\r\n    }\r\n\r\n    fontParts.push(px(style.fontSize));\r\n    fontParts.push(style.fontFamily);\r\n\r\n    return fontParts.join(\" \");\r\n}\r\n\r\nexport async function loadFont(font: string | FontDescription, testString: string | null = null, prog?: IProgress) {\r\n    if (!isString(font)) {\r\n        font = makeFont(font);\r\n    }\r\n\r\n    if (loadedFonts.indexOf(font) === -1) {\r\n        testString = testString || DEFAULT_TEST_TEXT;\r\n        if (prog) {\r\n            prog.start(font);\r\n        }\r\n        const fonts = await document.fonts.load(font, testString);\r\n        if (prog) {\r\n            prog.end(font);\r\n        }\r\n        if (fonts.length === 0) {\r\n            console.warn(`Failed to load font \"${font}\". If this is a system font, just set the object's \\`value\\` property, instead of calling \\`loadFontAndSetText\\`.`);\r\n        }\r\n        else {\r\n            loadedFonts.push(font);\r\n        }\r\n    }\r\n}", "import { Application_Javascript, Application_Json, MediaType, Text_Css } from \"@juniper-lib/mediatypes\";\r\nimport { IProgress } from \"@juniper-lib/progress/dist/IProgress\";\r\nimport { isBoolean, isDefined, isFunction } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { IFetcher, IFetcherBodiedResult } from \"./IFetcher\";\r\nimport { IResponse } from \"./IResponse\";\r\nimport { unwrapResponse } from \"./unwrapResponse\";\r\n\r\nexport function isAsset(obj: any): obj is BaseAsset {\r\n    return isDefined(obj)\r\n        && isFunction(obj.then)\r\n        && isFunction(obj.catch)\r\n        && isFunction(obj.finally)\r\n        && isFunction(obj.fetch)\r\n        && isFunction(obj.getSize);\r\n}\r\n\r\nexport abstract class BaseAsset<ResultT = any, ErrorT = unknown> implements Promise<ResultT> {\r\n\r\n    private readonly promise: Promise<ResultT>;\r\n\r\n    private _result: ResultT = null;\r\n    private _error: ErrorT = null;\r\n    private _started = false;\r\n    private _finished = false;\r\n\r\n    get result(): ResultT {\r\n        if (isDefined(this.error)) {\r\n            throw this.error;\r\n        }\r\n\r\n        return this._result;\r\n    }\r\n\r\n    get error(): ErrorT {\r\n        return this._error;\r\n    }\r\n\r\n    get started(): boolean {\r\n        return this._started;\r\n    }\r\n\r\n    get finished(): boolean {\r\n        return this._finished;\r\n    }\r\n\r\n    private resolve: (value: ResultT) => void = null;\r\n    private reject: (reason: ErrorT) => void = null;\r\n\r\n    constructor(public readonly path: string, public readonly type: string | MediaType) {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = (value: ResultT) => {\r\n                this._result = value;\r\n                this._finished = true;\r\n                resolve(value);\r\n            };\r\n\r\n            this.reject = (reason: ErrorT) => {\r\n                this._error = reason;\r\n                this._finished = true;\r\n                reject(reason);\r\n            };\r\n        });\r\n    }\r\n\r\n    async getSize(fetcher: IFetcher): Promise<[this, number]> {\r\n        try {\r\n            const { contentLength } = await fetcher\r\n                .head(this.path)\r\n                .accept(this.type)\r\n                .exec();\r\n            return [this, contentLength || 1];\r\n        }\r\n        catch (exp) {\r\n            console.warn(exp);\r\n            return [this, 1];\r\n        }\r\n    }\r\n\r\n    async fetch(fetcher: IFetcher, prog?: IProgress) {\r\n        try {\r\n            const result = await this.getResult(fetcher, prog);\r\n            this.resolve(result);\r\n        }\r\n        catch (err) {\r\n            this.reject(err);\r\n        }\r\n    }\r\n\r\n    protected abstract getResult(fetcher: IFetcher, prog?: IProgress): Promise<ResultT>;\r\n\r\n    get [Symbol.toStringTag](): string {\r\n        return this.promise.toString();\r\n    }\r\n\r\n    then<TResult1 = ResultT, TResult2 = never>(onfulfilled?: (value: ResultT) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\r\n        return this.promise.then(onfulfilled, onrejected);\r\n    }\r\n\r\n    catch<TResult = never>(onrejected?: (reason: any) => TResult | PromiseLike<TResult>): Promise<ResultT | TResult> {\r\n        return this.promise.catch(onrejected);\r\n    }\r\n\r\n    finally(onfinally?: () => void): Promise<ResultT> {\r\n        return this.promise.finally(onfinally);\r\n    }\r\n}\r\n\r\nexport class AssetWorker<ErrorT = unknown> extends BaseAsset<Worker, ErrorT> {\r\n\r\n    constructor(path: string, private readonly workerType: WorkerType = \"module\") {\r\n        super(path, Application_Javascript);\r\n    }\r\n\r\n    protected getResult(fetcher: IFetcher, prog?: IProgress): Promise<Worker> {\r\n        return fetcher\r\n            .get(this.path)\r\n            .progress(prog)\r\n            .worker(this.workerType)\r\n            .then(unwrapResponse);\r\n    }\r\n}\r\n\r\nexport class AssetCustom<ResultT, ErrorT = unknown> extends BaseAsset<ResultT, ErrorT> {\r\n    constructor(path: string, type: string | MediaType, private readonly getter: (fetcher: IFetcher, path: string, type: string | MediaType, prog?: IProgress) => Promise<ResultT>) {\r\n        super(path, type);\r\n    }\r\n\r\n    getResult(fetcher: IFetcher, prog?: IProgress): Promise<ResultT> {\r\n        return this.getter(fetcher, this.path, this.type, prog);\r\n    }\r\n}\r\n\r\nexport abstract class BaseFetchedAsset<ResultT, ErrorT = unknown> extends BaseAsset<ResultT, ErrorT> {\r\n\r\n    private readonly useCache: boolean;\r\n\r\n    constructor(path: string, type: string | MediaType, useCache: boolean);\r\n    constructor(path: string, type: string | MediaType);\r\n    constructor(path: string, useCache: boolean);\r\n    constructor(path: string);\r\n    constructor(path: string, typeOrUseCache?: string | MediaType | boolean, useCache?: boolean) {\r\n        let type: string | MediaType;\r\n        if (isBoolean(typeOrUseCache)) {\r\n            useCache = typeOrUseCache;\r\n        }\r\n        else {\r\n            type = typeOrUseCache;\r\n        }\r\n        super(path, type);\r\n\r\n        this.useCache = !!useCache;\r\n    }\r\n\r\n    protected getResult(fetcher: IFetcher, prog?: IProgress): Promise<ResultT> {\r\n        return this.getRequest(fetcher, prog)\r\n            .then(unwrapResponse);\r\n    }\r\n\r\n    private getRequest(fetcher: IFetcher, prog?: IProgress): Promise<IResponse<ResultT>> {\r\n        const request = fetcher\r\n            .get(this.path)\r\n            .useCache(this.useCache)\r\n            .progress(prog);\r\n        return this.getResponse(request);\r\n    }\r\n\r\n    protected abstract getResponse(request: IFetcherBodiedResult): Promise<IResponse<ResultT>>;\r\n}\r\n\r\nexport class AssetAudioBuffer<ErrorT = unknown> extends BaseFetchedAsset<AudioBuffer, ErrorT> {\r\n\r\n    private readonly context: BaseAudioContext;\r\n\r\n    constructor(context: BaseAudioContext, path: string);\r\n    constructor(context: BaseAudioContext, path: string, useCache: boolean);\r\n    constructor(context: BaseAudioContext, path: string, type: string | MediaType);\r\n    constructor(context: BaseAudioContext, path: string, type: string | MediaType, useCache: boolean);\r\n    constructor(context: BaseAudioContext, path: string, typeOrUseCache?: string | MediaType | boolean, useCache?: boolean) {\r\n        if (isBoolean(typeOrUseCache)) {\r\n            super(path, typeOrUseCache);\r\n        }\r\n        else {\r\n            super(path, typeOrUseCache, useCache);\r\n        }\r\n\r\n        this.context = context;\r\n    }\r\n\r\n    protected getResponse(request: IFetcherBodiedResult): Promise<IResponse<AudioBuffer>> {\r\n        return request.audioBuffer(this.context, this.type);\r\n    }\r\n}\r\n\r\nexport class AssetFile<ErrorT = unknown> extends BaseFetchedAsset<string, ErrorT> {\r\n    protected getResponse(request: IFetcherBodiedResult): Promise<IResponse<string>> {\r\n        return request.file(this.type);\r\n    }\r\n}\r\n\r\nexport class AssetImage<ErrorT = unknown> extends BaseFetchedAsset<HTMLImageElement, ErrorT> {\r\n    protected getResponse(request: IFetcherBodiedResult): Promise<IResponse<HTMLImageElement>> {\r\n        return request.image(this.type);\r\n    }\r\n}\r\n\r\nexport class AssetObject<T, ErrorT = unknown> extends BaseFetchedAsset<T, ErrorT> {\r\n    constructor(path: string) {\r\n        super(path, Application_Json);\r\n    }\r\n\r\n    protected getResponse(request: IFetcherBodiedResult): Promise<IResponse<T>> {\r\n        return request.object(this.type);\r\n    }\r\n}\r\n\r\nexport class AssetText<ErrorT = unknown> extends BaseFetchedAsset<string, ErrorT> {\r\n    protected getResponse(request: IFetcherBodiedResult): Promise<IResponse<string>> {\r\n        return request.text(this.type);\r\n    }\r\n}\r\n\r\nexport class AssetStyleSheet<ErrorT = unknown> extends BaseFetchedAsset<void, ErrorT> {\r\n    constructor(path: string, useCache?: boolean) {\r\n        super(path, Text_Css, useCache);\r\n    }\r\n\r\n    protected getResponse(request: IFetcherBodiedResult): Promise<IResponse> {\r\n        return request.style();\r\n    }\r\n}\r\n\r\nexport class AssetScript<ErrorT = unknown> extends BaseFetchedAsset<void, ErrorT> {\r\n    private readonly test: () => boolean = null;\r\n    constructor(path: string);\r\n    constructor(path: string, useCache?: boolean);\r\n    constructor(path: string, test: () => boolean);\r\n    constructor(path: string, test: () => boolean, useCache: boolean);\r\n    constructor(path: string, testOrUseCache?: boolean | (() => boolean), useCache?: boolean) {\r\n        let test: () => boolean = undefined;\r\n\r\n        if (isBoolean(testOrUseCache)) {\r\n            useCache = testOrUseCache;\r\n            testOrUseCache = undefined;\r\n        }\r\n\r\n        if (isFunction(testOrUseCache)) {\r\n            test = testOrUseCache;\r\n        }\r\n\r\n        super(path, Application_Javascript, useCache);\r\n\r\n        this.test = test;\r\n    }\r\n\r\n    protected getResponse(request: IFetcherBodiedResult): Promise<IResponse> {\r\n        return request.script(this.test);\r\n    }\r\n}", "import { arrayScan } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { Task } from \"@juniper-lib/events/dist/Task\";\r\n\r\nfunction isDead(task: AnimationTask): boolean {\r\n    return !task.started || task.finished;\r\n}\r\n\r\nclass AnimationTask extends Task {\r\n    private time = 0;\r\n    private duration = 0;\r\n    private onTick: (t: number) => void = null;\r\n\r\n    constructor() {\r\n        super(false);\r\n    }\r\n\r\n    begin(delay: number, duration: number, onTick: (t: number) => void) {\r\n        this.restart();\r\n        this.time = -delay;\r\n        this.duration = duration;\r\n        this.onTick = onTick;\r\n        this.onTick(0);\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (!isDead(this)) {\r\n            this.time += dt / this.duration;\r\n            if (this.time >= 1) {\r\n                this.onTick(1);\r\n                this.resolve();\r\n            }\r\n            else if (this.time >= 0) {\r\n                this.onTick(this.time);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Animator {\r\n    private animations = new Array<AnimationTask>();\r\n\r\n    update(dt: number) {\r\n        dt = 0.001 * dt;\r\n        for (const animation of this.animations) {\r\n            animation.update(dt);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (const animation of this.animations) {\r\n            animation.resolve();\r\n        }\r\n    }\r\n\r\n    start(delay: number, duration: number, update: (t: number) => void): Promise<void> {\r\n        let task = arrayScan(this.animations, isDead);\r\n        if (!task) {\r\n            this.animations.push(task = new AnimationTask());\r\n        }\r\n        task.begin(delay, duration, update);\r\n        return task;\r\n    }\r\n}\r\n", "export function getWidth(img: TexImageSource) {\r\n    if (img instanceof HTMLVideoElement) {\r\n        return img.videoWidth;\r\n    }\r\n    else if (img instanceof VideoFrame) {\r\n        return img.displayWidth;\r\n    }\r\n    else {\r\n        return img.width;\r\n    }\r\n}\r\n\r\nexport function getHeight(img: TexImageSource) {\r\n    if (img instanceof HTMLVideoElement) {\r\n        return img.videoHeight;\r\n    }\r\n    else if (img instanceof VideoFrame) {\r\n        return img.displayHeight;\r\n    }\r\n    else {\r\n        return img.height;\r\n    }\r\n}", "const MICROMETERS_PER_MILLIMETER = /*@__PURE__*/  1000;\r\nconst MILLIMETERS_PER_CENTIMETER = /*@__PURE__*/  10;\r\nconst CENTIMETERS_PER_INCH = /*@__PURE__*/  2.54;\r\nconst CENTIMETERS_PER_METER = /*@__PURE__*/  100;\r\nconst INCHES_PER_HAND = /*@__PURE__*/  4;\r\nconst HANDS_PER_FOOT = /*@__PURE__*/  3;\r\nconst FEET_PER_YARD = /*@__PURE__*/  3;\r\nconst FEET_PER_ROD = /*@__PURE__*/  16.5;\r\nconst METERS_PER_KILOMETER = /*@__PURE__*/  1000;\r\nconst RODS_PER_FURLONG = /*@__PURE__*/  40;\r\nconst FURLONGS_PER_MILE = /*@__PURE__*/  8;\r\n\r\nconst MICROMETERS_PER_CENTIMETER = /*@__PURE__*/  MICROMETERS_PER_MILLIMETER * MILLIMETERS_PER_CENTIMETER;\r\nconst MICROMETERS_PER_INCH = /*@__PURE__*/  MICROMETERS_PER_CENTIMETER * CENTIMETERS_PER_INCH;\r\nconst MICROMETERS_PER_HAND = /*@__PURE__*/  MICROMETERS_PER_INCH * INCHES_PER_HAND;\r\nconst MICROMETERS_PER_FOOT = /*@__PURE__*/  MICROMETERS_PER_HAND * HANDS_PER_FOOT;\r\nconst MICROMETERS_PER_YARD = /*@__PURE__*/  MICROMETERS_PER_FOOT * FEET_PER_YARD;\r\nconst MICROMETERS_PER_METER = /*@__PURE__*/  MICROMETERS_PER_CENTIMETER * CENTIMETERS_PER_METER;\r\nconst MICROMETERS_PER_ROD = /*@__PURE__*/  MICROMETERS_PER_FOOT * FEET_PER_ROD;\r\nconst MICROMETERS_PER_FURLONG = /*@__PURE__*/  MICROMETERS_PER_ROD * RODS_PER_FURLONG;\r\nconst MICROMETERS_PER_KILOMETER = /*@__PURE__*/  MICROMETERS_PER_METER * METERS_PER_KILOMETER;\r\nconst MICROMETERS_PER_MILE = /*@__PURE__*/  MICROMETERS_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst MILLIMETERS_PER_INCH = /*@__PURE__*/  MILLIMETERS_PER_CENTIMETER * CENTIMETERS_PER_INCH;\r\nconst MILLIMETERS_PER_HAND = /*@__PURE__*/  MILLIMETERS_PER_INCH * INCHES_PER_HAND;\r\nconst MILLIMETERS_PER_FOOT = /*@__PURE__*/  MILLIMETERS_PER_HAND * HANDS_PER_FOOT;\r\nconst MILLIMETERS_PER_YARD = /*@__PURE__*/  MILLIMETERS_PER_FOOT * FEET_PER_YARD;\r\nconst MILLIMETERS_PER_METER = /*@__PURE__*/  MILLIMETERS_PER_CENTIMETER * CENTIMETERS_PER_METER;\r\nconst MILLIMETERS_PER_ROD = /*@__PURE__*/  MILLIMETERS_PER_FOOT * FEET_PER_ROD;\r\nconst MILLIMETERS_PER_FURLONG = /*@__PURE__*/  MILLIMETERS_PER_ROD * RODS_PER_FURLONG;\r\nconst MILLIMETERS_PER_KILOMETER = /*@__PURE__*/  MILLIMETERS_PER_METER * METERS_PER_KILOMETER;\r\nconst MILLIMETERS_PER_MILE = /*@__PURE__*/  MILLIMETERS_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst CENTIMETERS_PER_HAND = /*@__PURE__*/  CENTIMETERS_PER_INCH * INCHES_PER_HAND;\r\nconst CENTIMETERS_PER_FOOT = /*@__PURE__*/  CENTIMETERS_PER_HAND * HANDS_PER_FOOT;\r\nconst CENTIMETERS_PER_YARD = /*@__PURE__*/  CENTIMETERS_PER_FOOT * FEET_PER_YARD;\r\nconst CENTIMETERS_PER_ROD = /*@__PURE__*/  CENTIMETERS_PER_FOOT * FEET_PER_ROD;\r\nconst CENTIMETERS_PER_FURLONG = /*@__PURE__*/  CENTIMETERS_PER_ROD * RODS_PER_FURLONG;\r\nconst CENTIMETERS_PER_KILOMETER = /*@__PURE__*/  CENTIMETERS_PER_METER * METERS_PER_KILOMETER;\r\nconst CENTIMETERS_PER_MILE = /*@__PURE__*/  CENTIMETERS_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst INCHES_PER_FOOT = /*@__PURE__*/  INCHES_PER_HAND * HANDS_PER_FOOT;\r\nconst INCHES_PER_YARD = /*@__PURE__*/  INCHES_PER_FOOT * FEET_PER_YARD;\r\nconst INCHES_PER_METER = /*@__PURE__*/  CENTIMETERS_PER_METER / CENTIMETERS_PER_INCH;\r\nconst INCHES_PER_ROD = /*@__PURE__*/  INCHES_PER_FOOT * FEET_PER_ROD;\r\nconst INCHES_PER_FURLONG = /*@__PURE__*/  INCHES_PER_ROD * RODS_PER_FURLONG;\r\nconst INCHES_PER_KILOMETER = /*@__PURE__*/  INCHES_PER_METER * METERS_PER_KILOMETER;\r\nconst INCHES_PER_MILE = /*@__PURE__*/  INCHES_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst HANDS_PER_YARD = /*@__PURE__*/  HANDS_PER_FOOT * FEET_PER_YARD;\r\nconst HANDS_PER_METER = /*@__PURE__*/  CENTIMETERS_PER_METER / CENTIMETERS_PER_HAND;\r\nconst HANDS_PER_ROD = /*@__PURE__*/  HANDS_PER_FOOT * FEET_PER_ROD;\r\nconst HANDS_PER_FURLONG = /*@__PURE__*/  HANDS_PER_ROD * RODS_PER_FURLONG;\r\nconst HANDS_PER_KILOMETER = /*@__PURE__*/  HANDS_PER_METER * METERS_PER_KILOMETER;\r\nconst HANDS_PER_MILE = /*@__PURE__*/  HANDS_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst FEET_PER_METER = /*@__PURE__*/  INCHES_PER_METER / INCHES_PER_FOOT;\r\nconst FEET_PER_FURLONG = /*@__PURE__*/  FEET_PER_ROD * RODS_PER_FURLONG;\r\nconst FEET_PER_KILOMETER = /*@__PURE__*/  FEET_PER_METER * METERS_PER_KILOMETER;\r\nconst FEET_PER_MILE = /*@__PURE__*/  FEET_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst YARDS_PER_METER = /*@__PURE__*/  INCHES_PER_METER / INCHES_PER_YARD;\r\nconst YARDS_PER_ROD = /*@__PURE__*/  FEET_PER_ROD / FEET_PER_YARD;\r\nconst YARDS_PER_FURLONG = /*@__PURE__*/  YARDS_PER_ROD * RODS_PER_FURLONG;\r\nconst YARDS_PER_KILOMETER = /*@__PURE__*/  YARDS_PER_METER * METERS_PER_KILOMETER;\r\nconst YARDS_PER_MILE = /*@__PURE__*/  YARDS_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst METERS_PER_ROD = /*@__PURE__*/  FEET_PER_ROD / FEET_PER_METER;\r\nconst METERS_PER_FURLONG = /*@__PURE__*/  METERS_PER_ROD * RODS_PER_FURLONG;\r\nconst METERS_PER_MILE = /*@__PURE__*/  METERS_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst RODS_PER_KILOMETER = /*@__PURE__*/  METERS_PER_KILOMETER / METERS_PER_ROD;\r\nconst RODS_PER_MILE = /*@__PURE__*/  RODS_PER_FURLONG * FURLONGS_PER_MILE;\r\n\r\nconst FURLONGS_PER_KILOMETER = /*@__PURE__*/  METERS_PER_KILOMETER /METERS_PER_FURLONG;\r\n\r\nconst KILOMETERS_PER_MILE = /*@__PURE__*/  FURLONGS_PER_MILE / FURLONGS_PER_KILOMETER;\r\n\r\n\r\nexport function centimeters2Micrometers(centimeters: number): number {\r\n    return centimeters * MICROMETERS_PER_CENTIMETER;\r\n}\r\n\r\nexport function centimeters2Millimeters(centimeters: number): number {\r\n    return centimeters * MILLIMETERS_PER_CENTIMETER;\r\n}\r\n\r\nexport function centimeters2Inches(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_INCH;\r\n}\r\n\r\nexport function centimeters2Hands(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_HAND;\r\n}\r\n\r\nexport function centimeters2Feet(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_FOOT;\r\n}\r\n\r\nexport function centimeters2Yards(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_YARD;\r\n}\r\n\r\nexport function centimeters2Meters(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_METER;\r\n}\r\n\r\nexport function centimeters2Rods(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_ROD;\r\n}\r\n\r\nexport function centimeters2Furlongs(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_FURLONG;\r\n}\r\n\r\nexport function centimeters2Kilometers(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_KILOMETER;\r\n}\r\n\r\nexport function centimeters2Miles(centimeters: number): number {\r\n    return centimeters / CENTIMETERS_PER_MILE;\r\n}\r\n\r\nexport function feet2Micrometers(feet: number): number {\r\n    return feet * MICROMETERS_PER_FOOT;\r\n}\r\n\r\nexport function feet2Millimeters(feet: number): number {\r\n    return feet * MILLIMETERS_PER_FOOT;\r\n}\r\n\r\nexport function feet2Centimeters(feet: number): number {\r\n    return feet * CENTIMETERS_PER_FOOT;\r\n}\r\n\r\nexport function feet2Inches(feet: number): number {\r\n    return feet * INCHES_PER_FOOT;\r\n}\r\n\r\nexport function feet2Hands(feet: number): number {\r\n    return feet * HANDS_PER_FOOT;\r\n}\r\n\r\nexport function feet2Yards(feet: number): number {\r\n    return feet / FEET_PER_YARD;\r\n}\r\n\r\nexport function feet2Meters(feet: number): number {\r\n    return feet / FEET_PER_METER;\r\n}\r\n\r\nexport function feet2Rods(feet: number): number {\r\n    return feet / FEET_PER_ROD;\r\n}\r\n\r\nexport function feet2Furlongs(feet: number): number {\r\n    return feet / FEET_PER_FURLONG;\r\n}\r\n\r\nexport function feet2Kilometers(feet: number): number {\r\n    return feet / FEET_PER_KILOMETER;\r\n}\r\n\r\nexport function feet2Miles(feet: number): number {\r\n    return feet / FEET_PER_MILE;\r\n}\r\n\r\nexport function furlongs2Micrometers(furlongs: number): number {\r\n    return furlongs * MICROMETERS_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Millimeters(furlongs: number): number {\r\n    return furlongs * MILLIMETERS_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Centimeters(furlongs: number): number {\r\n    return furlongs * CENTIMETERS_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Inches(furlongs: number): number {\r\n    return furlongs * INCHES_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Hands(furlongs: number): number {\r\n    return furlongs * HANDS_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Feet(furlongs: number): number {\r\n    return furlongs * FEET_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Yards(furlongs: number): number {\r\n    return furlongs * YARDS_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Meters(furlongs: number): number {\r\n    return furlongs * METERS_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Rods(furlongs: number): number {\r\n    return furlongs * RODS_PER_FURLONG;\r\n}\r\n\r\nexport function furlongs2Kilometers(furlongs: number): number {\r\n    return furlongs / FURLONGS_PER_KILOMETER;\r\n}\r\n\r\nexport function furlongs2Miles(furlongs: number): number {\r\n    return furlongs / FURLONGS_PER_MILE;\r\n}\r\n\r\nexport function hands2Micrometers(hands: number): number {\r\n    return hands * MICROMETERS_PER_HAND;\r\n}\r\n\r\nexport function hands2Millimeters(hands: number): number {\r\n    return hands * MILLIMETERS_PER_HAND;\r\n}\r\n\r\nexport function hands2Centimeters(hands: number): number {\r\n    return hands * CENTIMETERS_PER_HAND;\r\n}\r\n\r\nexport function hands2Inches(hands: number): number {\r\n    return hands * INCHES_PER_HAND;\r\n}\r\n\r\nexport function hands2Feet(hands: number): number {\r\n    return hands / HANDS_PER_FOOT;\r\n}\r\n\r\nexport function hands2Yards(hands: number): number {\r\n    return hands / HANDS_PER_YARD;\r\n}\r\n\r\nexport function hands2Meters(hands: number): number {\r\n    return hands / HANDS_PER_METER;\r\n}\r\n\r\nexport function hands2Rods(hands: number): number {\r\n    return hands / HANDS_PER_ROD;\r\n}\r\n\r\nexport function hands2Furlongs(hands: number): number {\r\n    return hands / HANDS_PER_FURLONG;\r\n}\r\n\r\nexport function hands2Kilometers(hands: number): number {\r\n    return hands / HANDS_PER_KILOMETER;\r\n}\r\n\r\nexport function hands2Miles(hands: number): number {\r\n    return hands / HANDS_PER_MILE;\r\n}\r\n\r\nexport function inches2Micrometers(inches: number): number {\r\n    return inches * MICROMETERS_PER_INCH;\r\n}\r\n\r\nexport function inches2Millimeters(inches: number): number {\r\n    return inches * MILLIMETERS_PER_INCH;\r\n}\r\n\r\nexport function inches2Centimeters(inches: number): number {\r\n    return inches * CENTIMETERS_PER_INCH;\r\n}\r\n\r\nexport function inches2Hands(inches: number): number {\r\n    return inches / INCHES_PER_HAND;\r\n}\r\n\r\nexport function inches2Feet(inches: number): number {\r\n    return inches / INCHES_PER_FOOT;\r\n}\r\n\r\nexport function inches2Yards(inches: number): number {\r\n    return inches / INCHES_PER_YARD;\r\n}\r\n\r\nexport function inches2Meters(inches: number): number {\r\n    return inches / INCHES_PER_METER;\r\n}\r\n\r\nexport function inches2Rods(inches: number): number {\r\n    return inches / INCHES_PER_ROD;\r\n}\r\n\r\nexport function inches2Furlongs(inches: number): number {\r\n    return inches / INCHES_PER_FURLONG;\r\n}\r\n\r\nexport function inches2Kilometers(inches: number): number {\r\n    return inches / INCHES_PER_KILOMETER;\r\n}\r\n\r\nexport function inches2Miles(inches: number): number {\r\n    return inches / INCHES_PER_MILE;\r\n}\r\n\r\nexport function kilometers2Micrometers(kilometers: number): number {\r\n    return kilometers * MICROMETERS_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Millimeters(kilometers: number): number {\r\n    return kilometers * MILLIMETERS_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Centimeters(kilometers: number): number {\r\n    return kilometers * CENTIMETERS_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Inches(kilometers: number): number {\r\n    return kilometers * INCHES_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Hands(kilometers: number): number {\r\n    return kilometers * HANDS_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Feet(kilometers: number): number {\r\n    return kilometers * FEET_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Yards(kilometers: number): number {\r\n    return kilometers * YARDS_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Meters(kilometers: number): number {\r\n    return kilometers * METERS_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Rods(kilometers: number): number {\r\n    return kilometers * RODS_PER_KILOMETER;\r\n}\r\nexport function kilometers2Furlongs(kilometers: number): number {\r\n    return kilometers * FURLONGS_PER_KILOMETER;\r\n}\r\n\r\nexport function kilometers2Miles(kilometers: number): number {\r\n    return kilometers / KILOMETERS_PER_MILE;\r\n}\r\n\r\nexport function meters2Micrometers(meters: number): number {\r\n    return meters * MICROMETERS_PER_METER;\r\n}\r\n\r\nexport function meters2Millimeters(meters: number): number {\r\n    return meters * MILLIMETERS_PER_METER;\r\n}\r\n\r\nexport function meters2Centimeters(meters: number): number {\r\n    return meters * CENTIMETERS_PER_METER;\r\n}\r\n\r\nexport function meters2Inches(meters: number): number {\r\n    return meters * INCHES_PER_METER;\r\n}\r\n\r\nexport function meters2Hands(meters: number): number {\r\n    return meters * HANDS_PER_METER;\r\n}\r\n\r\nexport function meters2Feet(meters: number): number {\r\n    return meters * FEET_PER_METER;\r\n}\r\n\r\nexport function meters2Yards(meters: number): number {\r\n    return meters * YARDS_PER_METER;\r\n}\r\n\r\nexport function meters2Rods(meters: number): number {\r\n    return meters / METERS_PER_ROD;\r\n}\r\n\r\nexport function meters2Furlongs(meters: number): number {\r\n    return meters / METERS_PER_FURLONG;\r\n}\r\n\r\nexport function meters2Kilometers(meters: number): number {\r\n    return meters / METERS_PER_KILOMETER;\r\n}\r\n\r\nexport function meters2Miles(meters: number): number {\r\n    return meters / METERS_PER_MILE;\r\n}\r\n\r\nexport function micrometers2Millimeters(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_MILLIMETER;\r\n}\r\n\r\nexport function micrometers2Centimeters(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_CENTIMETER;\r\n}\r\n\r\nexport function micrometers2Inches(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_INCH;\r\n}\r\n\r\nexport function micrometers2Hands(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_HAND;\r\n}\r\n\r\nexport function micrometers2Feet(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_FOOT;\r\n}\r\n\r\nexport function micrometers2Yards(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_YARD;\r\n}\r\n\r\nexport function micrometers2Meters(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_METER;\r\n}\r\n\r\nexport function micrometers2Rods(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_ROD;\r\n}\r\n\r\nexport function micrometers2Furlongs(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_FURLONG;\r\n}\r\n\r\nexport function micrometers2Kilometers(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_KILOMETER;\r\n}\r\n\r\nexport function micrometers2Miles(micrometers: number): number {\r\n    return micrometers / MICROMETERS_PER_MILE;\r\n}\r\n\r\nexport function miles2Micrometers(miles: number): number {\r\n    return miles * MICROMETERS_PER_MILE;\r\n}\r\n\r\nexport function miles2Millimeters(miles: number): number {\r\n    return miles * MILLIMETERS_PER_MILE;\r\n}\r\n\r\nexport function miles2Centimeters(miles: number): number {\r\n    return miles * CENTIMETERS_PER_MILE;\r\n}\r\n\r\nexport function miles2Inches(miles: number): number {\r\n    return miles * INCHES_PER_MILE;\r\n}\r\n\r\nexport function miles2Hands(miles: number): number {\r\n    return miles * HANDS_PER_MILE;\r\n}\r\n\r\nexport function miles2Feet(miles: number): number {\r\n    return miles * FEET_PER_MILE;\r\n}\r\n\r\nexport function miles2Yards(miles: number): number {\r\n    return miles * YARDS_PER_MILE;\r\n}\r\n\r\nexport function miles2Meters(miles: number): number {\r\n    return miles * METERS_PER_MILE;\r\n}\r\n\r\nexport function miles2Rods(miles: number): number {\r\n    return miles * RODS_PER_MILE;\r\n}\r\n\r\nexport function miles2Furlongs(miles: number): number {\r\n    return miles * FURLONGS_PER_MILE;\r\n}\r\n\r\nexport function miles2Kilometers(miles: number): number {\r\n    return miles * KILOMETERS_PER_MILE;\r\n}\r\n\r\nexport function millimeters2Micrometers(millimeters: number): number {\r\n    return millimeters * MICROMETERS_PER_MILLIMETER;\r\n}\r\n\r\nexport function millimeters2Centimeters(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_CENTIMETER;\r\n}\r\n\r\nexport function millimeters2Inches(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_INCH;\r\n}\r\n\r\nexport function millimeters2Hands(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_HAND;\r\n}\r\n\r\nexport function millimeters2Feet(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_FOOT;\r\n}\r\n\r\nexport function millimeters2Yards(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_YARD;\r\n}\r\n\r\nexport function millimeters2Meters(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_METER;\r\n}\r\n\r\nexport function millimeters2Rods(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_ROD;\r\n}\r\n\r\nexport function millimeters2Furlongs(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_FURLONG;\r\n}\r\n\r\nexport function millimeters2Kilometers(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_KILOMETER;\r\n}\r\n\r\nexport function millimeters2Miles(millimeters: number): number {\r\n    return millimeters / MILLIMETERS_PER_MILE;\r\n}\r\n\r\nexport function rods2Micrometers(rods: number): number {\r\n    return rods * MICROMETERS_PER_ROD;\r\n}\r\n\r\nexport function rods2Millimeters(rods: number): number {\r\n    return rods * MILLIMETERS_PER_ROD;\r\n}\r\n\r\nexport function rods2Centimeters(rods: number): number {\r\n    return rods * CENTIMETERS_PER_ROD;\r\n}\r\n\r\nexport function rods2Inches(rods: number): number {\r\n    return rods * INCHES_PER_ROD;\r\n}\r\n\r\nexport function rods2Hands(rods: number): number {\r\n    return rods * HANDS_PER_ROD;\r\n}\r\n\r\nexport function rods2Feet(rods: number): number {\r\n    return rods * FEET_PER_ROD;\r\n}\r\n\r\nexport function rods2Yards(rods: number): number {\r\n    return rods * YARDS_PER_ROD;\r\n}\r\n\r\nexport function rods2Meters(rods: number): number {\r\n    return rods * METERS_PER_ROD;\r\n}\r\n\r\nexport function rods2Furlongs(rods: number): number {\r\n    return rods / RODS_PER_FURLONG;\r\n}\r\n\r\nexport function rods2Kilometers(rods: number): number {\r\n    return rods / RODS_PER_KILOMETER;\r\n}\r\n\r\nexport function rods2Miles(rods: number): number {\r\n    return rods / RODS_PER_MILE;\r\n}\r\n\r\nexport function yards2Micrometers(yards: number): number {\r\n    return yards * MICROMETERS_PER_YARD;\r\n}\r\n\r\nexport function yards2Millimeters(yards: number): number {\r\n    return yards * MILLIMETERS_PER_YARD;\r\n}\r\n\r\nexport function yards2Centimeters(yards: number): number {\r\n    return yards * CENTIMETERS_PER_YARD;\r\n}\r\n\r\nexport function yards2Inches(yards: number): number {\r\n    return yards * INCHES_PER_YARD;\r\n}\r\n\r\nexport function yards2Hands(yards: number): number {\r\n    return yards * HANDS_PER_YARD;\r\n}\r\n\r\nexport function yards2Feet(yards: number): number {\r\n    return yards * FEET_PER_YARD;\r\n}\r\n\r\nexport function yards2Meters(yards: number): number {\r\n    return yards / YARDS_PER_METER;\r\n}\r\n\r\nexport function yards2Rods(yards: number): number {\r\n    return yards / YARDS_PER_ROD;\r\n}\r\n\r\nexport function yards2Furlongs(yards: number): number {\r\n    return yards / YARDS_PER_FURLONG;\r\n}\r\n\r\nexport function yards2Kilometers(yards: number): number {\r\n    return yards / YARDS_PER_KILOMETER;\r\n}\r\n\r\nexport function yards2Miles(yards: number): number {\r\n    return yards / YARDS_PER_MILE;\r\n}", "import { Mesh, PlaneGeometry } from \"three\";\r\nimport { SolidMaterial } from \"./materials\";\r\n\r\nexport const plane = /*@__PURE__*/ new PlaneGeometry(1, 1, 1, 1);\r\nplane.name = \"PlaneGeom\";\r\n\r\nexport class Plane extends Mesh {\r\n    constructor(sx: number, sy: number, material: SolidMaterial) {\r\n        super(plane, material);\r\n        this.scale.set(sx, sy, 1);\r\n    }\r\n}", "import { Matrix4, Object3D, Quaternion, Vector3, Vector4 } from \"three\";\r\n\r\nconst M = new Matrix4();\r\nconst P3 = new Vector3();\r\nconst P4 = new Vector4();\r\nconst Q = new Quaternion();\r\n\r\nexport function getRelativeXRRigidTransform(ref: Object3D, obj: Object3D, scale: Vector3): XRRigidTransform {\r\n    M.copy(ref.matrixWorld)\r\n        .invert()\r\n        .multiply(obj.matrixWorld)\r\n        .decompose(P3, Q, scale);\r\n    P4.set(P3.x, P3.y, P3.z, 1);\r\n    return new XRRigidTransform(P4, Q);\r\n}", "import { UniformsLib, ShaderLib, ShaderMaterial, Vector2, UniformsUtils } from \"three\";\r\n\r\n/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  linewidth: <float>,\r\n *  dashed: <boolean>,\r\n *  dashScale: <float>,\r\n *  dashSize: <float>,\r\n *  dashOffset: <float>,\r\n *  gapSize: <float>,\r\n *  resolution: <Vector2>, // to be set by renderer\r\n * }\r\n */\r\n\r\n\r\nUniformsLib.line = {\r\n\r\n    worldUnits: { value: 1 },\r\n\tlinewidth: { value: 1 },\r\n\tresolution: { value: new Vector2(1, 1) },\r\n    dashOffset: { value: 0 },\r\n    dashScale: { value: 1 },\r\n    dashSize: { value: 1 },\r\n    gapSize: { value: 1 } // todo FIX - maybe change to totalSize\r\n\r\n};\r\n\r\nShaderLib['line'] = {\r\n\r\n\tuniforms: UniformsUtils.merge([\r\n        UniformsLib.common,\r\n        UniformsLib.fog,\r\n        UniformsLib.line\r\n    ]),\r\n\r\n    vertexShader:\r\n\t/* glsl */`\r\n\t\t#include <common>\r\n\t\t#include <color_pars_vertex>\r\n\t\t#include <fog_pars_vertex>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\t\t#include <clipping_planes_pars_vertex>\r\n\r\n\t\tuniform float linewidth;\r\n\t\tuniform vec2 resolution;\r\n\r\n\t\tattribute vec3 instanceStart;\r\n\t\tattribute vec3 instanceEnd;\r\n\r\n\t\tattribute vec3 instanceColorStart;\r\n\t\tattribute vec3 instanceColorEnd;\r\n\r\n\t\t#ifdef WORLD_UNITS\r\n\r\n\t\t\tvarying vec4 worldPos;\r\n\t\t\tvarying vec3 worldStart;\r\n\t\t\tvarying vec3 worldEnd;\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tvarying vec2 vUv;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t#else\r\n\r\n\t\t\tvarying vec2 vUv;\r\n\r\n\t\t#endif\r\n\r\n\t\t#ifdef USE_DASH\r\n\r\n\t\t\tuniform float dashScale;\r\n\t\t\tattribute float instanceDistanceStart;\r\n\t\t\tattribute float instanceDistanceEnd;\r\n\t\t\tvarying float vLineDistance;\r\n\r\n\t\t#endif\r\n\r\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\r\n\r\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\r\n\r\n\t\t\t// conservative estimate of the near plane\r\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\r\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\r\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\r\n\r\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\r\n\r\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#ifdef USE_COLOR\r\n\r\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\r\n\t\t\t\tvUv = uv;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tfloat aspect = resolution.x / resolution.y;\r\n\r\n\t\t\t// camera space\r\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\r\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\r\n\r\n\t\t\t#ifdef WORLD_UNITS\r\n\r\n\t\t\t\tworldStart = start.xyz;\r\n\t\t\t\tworldEnd = end.xyz;\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tvUv = uv;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\r\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\r\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\r\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\r\n\r\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\r\n\r\n\t\t\tif ( perspective ) {\r\n\r\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\r\n\r\n\t\t\t\t\ttrimSegment( start, end );\r\n\r\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\r\n\r\n\t\t\t\t\ttrimSegment( end, start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// clip space\r\n\t\t\tvec4 clipStart = projectionMatrix * start;\r\n\t\t\tvec4 clipEnd = projectionMatrix * end;\r\n\r\n\t\t\t// ndc space\r\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\r\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\r\n\r\n\t\t\t// direction\r\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\r\n\r\n\t\t\t// account for clip-space aspect ratio\r\n\t\t\tdir.x *= aspect;\r\n\t\t\tdir = normalize( dir );\r\n\r\n\t\t\t#ifdef WORLD_UNITS\r\n\r\n\t\t\t\t// get the offset direction as perpendicular to the view vector\r\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\r\n\t\t\t\tvec3 offset;\r\n\t\t\t\tif ( position.y < 0.5 ) {\r\n\r\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// sign flip\r\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\r\n\r\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\r\n\r\n\t\t\t\t// don't extend the line if we're rendering dashes because we\r\n\t\t\t\t// won't be rendering the endcaps\r\n\t\t\t\t#ifndef USE_DASH\r\n\r\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\r\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\r\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\r\n\r\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\r\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\r\n\t\t\t\t\toffset.z += 0.5;\r\n\r\n\t\t\t\t#endif\r\n\r\n\t\t\t\t// endcaps\r\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\r\n\r\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// adjust for linewidth\r\n\t\t\t\toffset *= linewidth * 0.5;\r\n\r\n\t\t\t\t// set the world position\r\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\r\n\t\t\t\tworldPos.xyz += offset;\r\n\r\n\t\t\t\t// project the worldpos\r\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\r\n\r\n\t\t\t\t// shift the depth of the projected points so the line\r\n\t\t\t\t// segements overlap neatly\r\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\r\n\t\t\t\tclip.z = clipPose.z * clip.w;\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\r\n\t\t\t\t// undo aspect ratio adjustment\r\n\t\t\t\tdir.x /= aspect;\r\n\t\t\t\toffset.x /= aspect;\r\n\r\n\t\t\t\t// sign flip\r\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\r\n\r\n\t\t\t\t// endcaps\r\n\t\t\t\tif ( position.y < 0.0 ) {\r\n\r\n\t\t\t\t\toffset += - dir;\r\n\r\n\t\t\t\t} else if ( position.y > 1.0 ) {\r\n\r\n\t\t\t\t\toffset += dir;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// adjust for linewidth\r\n\t\t\t\toffset *= linewidth;\r\n\r\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\r\n\t\t\t\toffset /= resolution.y;\r\n\r\n\t\t\t\t// select end\r\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\r\n\r\n\t\t\t\t// back to clip space\r\n\t\t\t\toffset *= clip.w;\r\n\r\n\t\t\t\tclip.xy += offset;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tgl_Position = clip;\r\n\r\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\t\t\t#include <clipping_planes_vertex>\r\n\t\t\t#include <fog_vertex>\r\n\r\n\t\t}\r\n\t\t`,\r\n\r\n    fragmentShader:\r\n\t/* glsl */`\r\n\t\tuniform vec3 diffuse;\r\n\t\tuniform float opacity;\r\n\t\tuniform float linewidth;\r\n\r\n\t\t#ifdef USE_DASH\r\n\r\n\t\t\tuniform float dashOffset;\r\n\t\t\tuniform float dashSize;\r\n\t\t\tuniform float gapSize;\r\n\r\n\t\t#endif\r\n\r\n\t\tvarying float vLineDistance;\r\n\r\n\t\t#ifdef WORLD_UNITS\r\n\r\n\t\t\tvarying vec4 worldPos;\r\n\t\t\tvarying vec3 worldStart;\r\n\t\t\tvarying vec3 worldEnd;\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tvarying vec2 vUv;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t#else\r\n\r\n\t\t\tvarying vec2 vUv;\r\n\r\n\t\t#endif\r\n\r\n\t\t#include <common>\r\n\t\t#include <color_pars_fragment>\r\n\t\t#include <fog_pars_fragment>\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\t\t#include <clipping_planes_pars_fragment>\r\n\r\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\r\n\r\n\t\t\tfloat mua;\r\n\t\t\tfloat mub;\r\n\r\n\t\t\tvec3 p13 = p1 - p3;\r\n\t\t\tvec3 p43 = p4 - p3;\r\n\r\n\t\t\tvec3 p21 = p2 - p1;\r\n\r\n\t\t\tfloat d1343 = dot( p13, p43 );\r\n\t\t\tfloat d4321 = dot( p43, p21 );\r\n\t\t\tfloat d1321 = dot( p13, p21 );\r\n\t\t\tfloat d4343 = dot( p43, p43 );\r\n\t\t\tfloat d2121 = dot( p21, p21 );\r\n\r\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\r\n\r\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\r\n\r\n\t\t\tmua = numer / denom;\r\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\r\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\r\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\r\n\r\n\t\t\treturn vec2( mua, mub );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <clipping_planes_fragment>\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\r\n\r\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tfloat alpha = opacity;\r\n\r\n\t\t\t#ifdef WORLD_UNITS\r\n\r\n\t\t\t\t// Find the closest points on the view ray and the line segment\r\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\r\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\r\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\r\n\r\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\r\n\t\t\t\tvec3 p2 = rayEnd * params.y;\r\n\t\t\t\tvec3 delta = p1 - p2;\r\n\t\t\t\tfloat len = length( delta );\r\n\t\t\t\tfloat norm = len / linewidth;\r\n\r\n\t\t\t\t#ifndef USE_DASH\r\n\r\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\r\n\r\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\r\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\r\n\r\n\t\t\t\t\t#else\r\n\r\n\t\t\t\t\t\tif ( norm > 0.5 ) {\r\n\r\n\t\t\t\t\t\t\tdiscard;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t#endif\r\n\r\n\t\t\t\t#endif\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\r\n\r\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\r\n\t\t\t\t\tfloat a = vUv.x;\r\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\r\n\t\t\t\t\tfloat len2 = a * a + b * b;\r\n\t\t\t\t\tfloat dlen = fwidth( len2 );\r\n\r\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\r\n\r\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t#else\r\n\r\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\r\n\r\n\t\t\t\t\t\tfloat a = vUv.x;\r\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\r\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\r\n\r\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t#endif\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\t\t\t#include <color_fragment>\r\n\r\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <encodings_fragment>\r\n\t\t\t#include <fog_fragment>\r\n\t\t\t#include <premultiplied_alpha_fragment>\r\n\r\n\t\t}\r\n\t\t`\r\n};\r\n\r\nclass LineMaterial extends ShaderMaterial {\r\n\r\n    constructor(parameters) {\r\n\r\n        super({\r\n\r\n            type: 'LineMaterial',\r\n\r\n            uniforms: UniformsUtils.clone(ShaderLib['line'].uniforms),\r\n\r\n            vertexShader: ShaderLib['line'].vertexShader,\r\n            fragmentShader: ShaderLib['line'].fragmentShader,\r\n\r\n            clipping: true // required for clipping support\r\n\r\n        });\r\n\r\n        Object.defineProperties(this, {\r\n\r\n            color: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.diffuse.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.diffuse.value = value;\r\n\r\n                }\r\n\r\n            },\r\n\r\n            worldUnits: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return 'WORLD_UNITS' in this.defines;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    if (value === true) {\r\n\r\n                        this.defines.WORLD_UNITS = '';\r\n\r\n                    } else {\r\n\r\n                        delete this.defines.WORLD_UNITS;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            },\r\n\r\n            linewidth: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.linewidth.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.linewidth.value = value;\r\n\r\n                }\r\n\r\n            },\r\n\r\n            dashed: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return Boolean('USE_DASH' in this.defines);\r\n\r\n                },\r\n\r\n                set(value) {\r\n\r\n                    if (Boolean(value) !== Boolean('USE_DASH' in this.defines)) {\r\n\r\n                        this.needsUpdate = true;\r\n\r\n                    }\r\n\r\n                    if (value === true) {\r\n\r\n                        this.defines.USE_DASH = '';\r\n\r\n                    } else {\r\n\r\n                        delete this.defines.USE_DASH;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            },\r\n\r\n            dashScale: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.dashScale.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.dashScale.value = value;\r\n\r\n                }\r\n\r\n            },\r\n\r\n            dashSize: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.dashSize.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.dashSize.value = value;\r\n\r\n                }\r\n\r\n            },\r\n\r\n            dashOffset: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.dashOffset.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.dashOffset.value = value;\r\n\r\n                }\r\n\r\n            },\r\n\r\n            gapSize: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.gapSize.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.gapSize.value = value;\r\n\r\n                }\r\n\r\n            },\r\n\r\n            opacity: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.opacity.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.opacity.value = value;\r\n\r\n                }\r\n\r\n            },\r\n\r\n            resolution: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return this.uniforms.resolution.value;\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    this.uniforms.resolution.value.copy(value);\r\n\r\n                }\r\n\r\n            },\r\n\r\n            alphaToCoverage: {\r\n\r\n                enumerable: true,\r\n\r\n                get: function () {\r\n\r\n                    return Boolean('USE_ALPHA_TO_COVERAGE' in this.defines);\r\n\r\n                },\r\n\r\n                set: function (value) {\r\n\r\n                    if (Boolean(value) !== Boolean('USE_ALPHA_TO_COVERAGE' in this.defines)) {\r\n\r\n                        this.needsUpdate = true;\r\n\r\n                    }\r\n\r\n                    if (value === true) {\r\n\r\n                        this.defines.USE_ALPHA_TO_COVERAGE = '';\r\n                        this.extensions.derivatives = true;\r\n\r\n                    } else {\r\n\r\n                        delete this.defines.USE_ALPHA_TO_COVERAGE;\r\n                        this.extensions.derivatives = false;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n        this.setValues(parameters);\r\n\r\n    }\r\n\r\n}\r\n\r\nLineMaterial.prototype.isLineMaterial = true;\r\n\r\nexport { LineMaterial };\r\n", "import { dispose } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { singleton } from \"@juniper-lib/tslib/dist/singleton\";\r\nimport { isNullOrUndefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { Color, LineBasicMaterial, LineBasicMaterialParameters, Material, MaterialParameters, MeshBasicMaterial, MeshBasicMaterialParameters, MeshPhongMaterial, MeshPhongMaterialParameters, MeshPhysicalMaterial, MeshStandardMaterial, Object3D, ShaderMaterial, ShaderMaterialParameters, SpriteMaterial, SpriteMaterialParameters } from \"three\";\r\nimport { LineMaterial, LineMaterialParameters } from \"./examples/lines/LineMaterial\";\r\nimport { isMaterial, isMesh } from \"./typeChecks\";\r\n\r\nconst materials = singleton(\"Juniper:Three:Materials\", () => new Map<string, Material>());\r\n\r\nfunction del(obj: any, name: string) {\r\n    if (name in obj) {\r\n        delete obj[name];\r\n    }\r\n}\r\n\r\nexport type SolidMaterial = MeshBasicMaterial | MeshPhongMaterial | ShaderMaterial;\r\nexport type SolidMaterialOpts = MeshBasicMaterialParameters | MeshPhongMaterialParameters | ShaderMaterialParameters;\r\n\r\nfunction makeMaterial<MaterialT extends Material, OptionsT extends MaterialParameters>(slug: string, material: (new (opts: OptionsT) => MaterialT), options: OptionsT): MaterialT {\r\n\r\n    const key = `${slug}_${Object\r\n        .keys(options)\r\n        .map((k) => `${k}:${(options as any)[k]}`)\r\n        .join(\",\")}`;\r\n\r\n    if (!materials.has(key)) {\r\n        del(options, \"name\");\r\n        materials.set(key, new material(options));\r\n    }\r\n\r\n    return materials.get(key) as MaterialT;\r\n}\r\n\r\nfunction trans<T>(options: T): T {\r\n    return Object.assign(options, {\r\n        transparent: true\r\n    });\r\n}\r\n\r\nexport function solid(options: MeshBasicMaterialParameters): MeshBasicMaterial {\r\n    return makeMaterial(\"solid\", MeshBasicMaterial, options);\r\n}\r\n\r\nexport function solidTransparent(options: MeshBasicMaterialParameters): MeshBasicMaterial {\r\n    return makeMaterial(\"solidTransparent\", MeshBasicMaterial, trans(options));\r\n}\r\n\r\nexport function lit(options: MeshPhongMaterialParameters): MeshPhongMaterial {\r\n    return makeMaterial(\"lit\", MeshPhongMaterial, options);\r\n}\r\n\r\nexport function litTransparent(options: MeshPhongMaterialParameters): MeshPhongMaterial {\r\n    return makeMaterial(\"litTransparent\", MeshPhongMaterial, trans(options));\r\n}\r\n\r\nexport function line(options: LineBasicMaterialParameters): LineBasicMaterial {\r\n    return makeMaterial(\"line\", LineBasicMaterial, options);\r\n}\r\n\r\nexport function lineTransparent(options: LineBasicMaterialParameters): LineBasicMaterial {\r\n    return makeMaterial(\"lineTransparent\", LineBasicMaterial, trans(options));\r\n}\r\n\r\nexport function line2(options: LineMaterialParameters) {\r\n    return makeMaterial(\"line2\", LineMaterial, options);\r\n}\r\n\r\nexport function sprite(options: SpriteMaterialParameters): SpriteMaterial {\r\n    return makeMaterial(\"sprite\", SpriteMaterial, options);\r\n}\r\n\r\nexport function spriteTransparent(options: SpriteMaterialParameters): SpriteMaterial {\r\n    return makeMaterial(\"spriteTransparent\", SpriteMaterial, trans(options));\r\n}\r\n\r\nexport type MaterialConverter<OldMatT extends Material, NewMatT extends Material> = (oldMat: OldMatT) => NewMatT;\r\nexport function convertMaterials<OldMatT extends Material, NewMatT extends Material>(root: Object3D, convertMaterial: MaterialConverter<OldMatT, NewMatT>): void {\r\n    const oldMats = new Set<Material>();\r\n    root.traverse(obj => {\r\n        if (isMesh(obj) && isMaterial(obj.material)) {\r\n            const oldMat = obj.material;\r\n            const newMat = convertMaterial(oldMat as any);\r\n            if (oldMat !== newMat) {\r\n                oldMats.add(oldMat);\r\n                obj.material = newMat;\r\n            }\r\n        }\r\n    });\r\n\r\n    for (const oldMat of oldMats) {\r\n        dispose(oldMat);\r\n    }\r\n}\r\n\r\nexport function materialStandardToBasic(oldMat: MeshStandardMaterial): MeshBasicMaterial {\r\n\r\n    if (oldMat.type !== \"MeshStandardMaterial\") {\r\n        throw new Error(\"Input material is not MeshStandardMaterial\");\r\n    }\r\n\r\n    const params: MeshBasicMaterialParameters = {\r\n        alphaMap: oldMat.alphaMap,\r\n        alphaTest: oldMat.alphaTest,\r\n        alphaToCoverage: oldMat.alphaToCoverage,\r\n        aoMap: oldMat.aoMap,\r\n        aoMapIntensity: oldMat.aoMapIntensity,\r\n        blendDst: oldMat.blendDst,\r\n        blendDstAlpha: oldMat.blendDstAlpha,\r\n        blendEquation: oldMat.blendEquation,\r\n        blendEquationAlpha: oldMat.blendEquationAlpha,\r\n        blending: oldMat.blending,\r\n        blendSrc: oldMat.blendSrc,\r\n        blendSrcAlpha: oldMat.blendSrcAlpha,\r\n        clipIntersection: oldMat.clipIntersection,\r\n        clippingPlanes: oldMat.clippingPlanes,\r\n        clipShadows: oldMat.clipShadows,\r\n        color: oldMat.color,\r\n        colorWrite: oldMat.colorWrite,\r\n        depthFunc: oldMat.depthFunc,\r\n        depthTest: oldMat.depthTest,\r\n        depthWrite: oldMat.depthWrite,\r\n        dithering: oldMat.dithering,\r\n        envMap: oldMat.envMap,\r\n        fog: oldMat.fog,\r\n        lightMap: oldMat.lightMap,\r\n        lightMapIntensity: oldMat.lightMapIntensity,\r\n        map: oldMat.emissiveMap || oldMat.map,\r\n        name: oldMat.name + \"-Standard-To-Basic\",\r\n        opacity: oldMat.opacity,\r\n        polygonOffset: oldMat.polygonOffset,\r\n        polygonOffsetFactor: oldMat.polygonOffsetFactor,\r\n        polygonOffsetUnits: oldMat.polygonOffsetUnits,\r\n        precision: oldMat.precision,\r\n        premultipliedAlpha: oldMat.premultipliedAlpha,\r\n        shadowSide: oldMat.shadowSide,\r\n        side: oldMat.side,\r\n        stencilFail: oldMat.stencilFail,\r\n        stencilFunc: oldMat.stencilFunc,\r\n        stencilFuncMask: oldMat.stencilFuncMask,\r\n        stencilRef: oldMat.stencilRef,\r\n        stencilWrite: oldMat.stencilWrite,\r\n        stencilWriteMask: oldMat.stencilWriteMask,\r\n        stencilZFail: oldMat.stencilZFail,\r\n        stencilZPass: oldMat.stencilZPass,\r\n        toneMapped: oldMat.toneMapped,\r\n        transparent: oldMat.transparent,\r\n        userData: oldMat.userData,\r\n        vertexColors: oldMat.vertexColors,\r\n        visible: oldMat.visible,\r\n        wireframe: oldMat.wireframe,\r\n        wireframeLinecap: oldMat.wireframeLinecap,\r\n        wireframeLinejoin: oldMat.wireframeLinejoin,\r\n        wireframeLinewidth: oldMat.wireframeLinewidth\r\n    };\r\n    for (const [key, value] of Object.entries(params)) {\r\n        if (isNullOrUndefined(value)) {\r\n            delete (params as any)[key];\r\n        }\r\n    }\r\n    return new MeshBasicMaterial(params);\r\n}\r\n\r\nexport function materialStandardToPhong(oldMat: MeshStandardMaterial): MeshPhongMaterial {\r\n\r\n    if (oldMat.type !== \"MeshStandardMaterial\") {\r\n        throw new Error(\"Input material is not MeshStandardMaterial\");\r\n    }\r\n\r\n    const params: MeshPhongMaterialParameters = {\r\n        alphaMap: oldMat.alphaMap,\r\n        alphaTest: oldMat.alphaTest,\r\n        alphaToCoverage: oldMat.alphaToCoverage,\r\n        aoMap: oldMat.aoMap,\r\n        aoMapIntensity: oldMat.aoMapIntensity,\r\n        blendDst: oldMat.blendDst,\r\n        blendDstAlpha: oldMat.blendDstAlpha,\r\n        blendEquation: oldMat.blendEquation,\r\n        blendEquationAlpha: oldMat.blendEquationAlpha,\r\n        blending: oldMat.blending,\r\n        blendSrc: oldMat.blendSrc,\r\n        blendSrcAlpha: oldMat.blendSrcAlpha,\r\n        bumpMap: oldMat.bumpMap,\r\n        bumpScale: oldMat.bumpScale,\r\n        clipIntersection: oldMat.clipIntersection,\r\n        clippingPlanes: oldMat.clippingPlanes,\r\n        clipShadows: oldMat.clipShadows,\r\n        color: oldMat.color,\r\n        colorWrite: oldMat.colorWrite,\r\n        depthFunc: oldMat.depthFunc,\r\n        depthTest: oldMat.depthTest,\r\n        depthWrite: oldMat.depthWrite,\r\n        displacementBias: oldMat.displacementBias,\r\n        displacementMap: oldMat.displacementMap,\r\n        displacementScale: oldMat.displacementScale,\r\n        dithering: oldMat.dithering,\r\n        emissive: oldMat.emissive,\r\n        emissiveIntensity: oldMat.emissiveIntensity,\r\n        emissiveMap: oldMat.emissiveMap,\r\n        envMap: oldMat.envMap,\r\n        flatShading: oldMat.flatShading,\r\n        fog: oldMat.fog,\r\n        lightMap: oldMat.lightMap,\r\n        lightMapIntensity: oldMat.lightMapIntensity,\r\n        map: oldMat.map,\r\n        name: oldMat.name + \"-Standard-To-Phong\",\r\n        normalMap: oldMat.normalMap,\r\n        normalMapType: oldMat.normalMapType,\r\n        normalScale: oldMat.normalScale,\r\n        opacity: oldMat.opacity,\r\n        polygonOffset: oldMat.polygonOffset,\r\n        polygonOffsetFactor: oldMat.polygonOffsetFactor,\r\n        polygonOffsetUnits: oldMat.polygonOffsetUnits,\r\n        precision: oldMat.precision,\r\n        premultipliedAlpha: oldMat.premultipliedAlpha,\r\n        shadowSide: oldMat.shadowSide,\r\n        side: oldMat.side,\r\n        stencilFail: oldMat.stencilFail,\r\n        stencilFunc: oldMat.stencilFunc,\r\n        stencilFuncMask: oldMat.stencilFuncMask,\r\n        stencilRef: oldMat.stencilRef,\r\n        stencilWrite: oldMat.stencilWrite,\r\n        stencilWriteMask: oldMat.stencilWriteMask,\r\n        stencilZFail: oldMat.stencilZFail,\r\n        stencilZPass: oldMat.stencilZPass,\r\n        toneMapped: oldMat.toneMapped,\r\n        transparent: oldMat.transparent,\r\n        userData: oldMat.userData,\r\n        vertexColors: oldMat.vertexColors,\r\n        visible: oldMat.visible,\r\n        wireframe: oldMat.wireframe,\r\n        wireframeLinecap: oldMat.wireframeLinecap,\r\n        wireframeLinejoin: oldMat.wireframeLinejoin,\r\n        wireframeLinewidth: oldMat.wireframeLinewidth\r\n    };\r\n    for (const [key, value] of Object.entries(params)) {\r\n        if (isNullOrUndefined(value)) {\r\n            delete (params as any)[key];\r\n        }\r\n    }\r\n    return new MeshPhongMaterial(params);\r\n}\r\n\r\n\r\nexport function materialPhongToBasic(oldMat: MeshPhongMaterial): MeshBasicMaterial {\r\n\r\n    if (oldMat.type !== \"MeshPhongMaterial\") {\r\n        throw new Error(\"Input material is not MeshPhongMaterial\");\r\n    }\r\n\r\n    const params: MeshBasicMaterialParameters = {\r\n        alphaMap: oldMat.alphaMap,\r\n        alphaTest: oldMat.alphaTest,\r\n        alphaToCoverage: oldMat.alphaToCoverage,\r\n        aoMap: oldMat.aoMap,\r\n        aoMapIntensity: oldMat.aoMapIntensity,\r\n        blendDst: oldMat.blendDst,\r\n        blendDstAlpha: oldMat.blendDstAlpha,\r\n        blendEquation: oldMat.blendEquation,\r\n        blendEquationAlpha: oldMat.blendEquationAlpha,\r\n        blending: oldMat.blending,\r\n        blendSrc: oldMat.blendSrc,\r\n        blendSrcAlpha: oldMat.blendSrcAlpha,\r\n        clipIntersection: oldMat.clipIntersection,\r\n        clippingPlanes: oldMat.clippingPlanes,\r\n        clipShadows: oldMat.clipShadows,\r\n        color: oldMat.color,\r\n        colorWrite: oldMat.colorWrite,\r\n        depthFunc: oldMat.depthFunc,\r\n        depthTest: oldMat.depthTest,\r\n        depthWrite: oldMat.depthWrite,\r\n        dithering: oldMat.dithering,\r\n        envMap: oldMat.envMap,\r\n        fog: oldMat.fog,\r\n        lightMap: oldMat.lightMap,\r\n        lightMapIntensity: oldMat.lightMapIntensity,\r\n        map: oldMat.emissiveMap || oldMat.map,\r\n        name: oldMat.name + \"-Phong-To-Basic\",\r\n        opacity: oldMat.opacity,\r\n        polygonOffset: oldMat.polygonOffset,\r\n        polygonOffsetFactor: oldMat.polygonOffsetFactor,\r\n        polygonOffsetUnits: oldMat.polygonOffsetUnits,\r\n        precision: oldMat.precision,\r\n        premultipliedAlpha: oldMat.premultipliedAlpha,\r\n        reflectivity: oldMat.reflectivity,\r\n        refractionRatio: oldMat.refractionRatio,\r\n        shadowSide: oldMat.shadowSide,\r\n        side: oldMat.side,\r\n        specularMap: oldMat.specularMap,\r\n        stencilFail: oldMat.stencilFail,\r\n        stencilFunc: oldMat.stencilFunc,\r\n        stencilFuncMask: oldMat.stencilFuncMask,\r\n        stencilRef: oldMat.stencilRef,\r\n        stencilWrite: oldMat.stencilWrite,\r\n        stencilWriteMask: oldMat.stencilWriteMask,\r\n        stencilZFail: oldMat.stencilZFail,\r\n        stencilZPass: oldMat.stencilZPass,\r\n        toneMapped: oldMat.toneMapped,\r\n        transparent: oldMat.transparent,\r\n        userData: oldMat.userData,\r\n        vertexColors: oldMat.vertexColors,\r\n        visible: oldMat.visible,\r\n        wireframe: oldMat.wireframe,\r\n        wireframeLinecap: oldMat.wireframeLinecap,\r\n        wireframeLinejoin: oldMat.wireframeLinejoin,\r\n        wireframeLinewidth: oldMat.wireframeLinewidth\r\n    };\r\n    for (const [key, value] of Object.entries(params)) {\r\n        if (isNullOrUndefined(value)) {\r\n            delete (params as any)[key];\r\n        }\r\n    }\r\n    return new MeshBasicMaterial(params);\r\n}\r\n\r\nexport function materialPhysicalToPhong(oldMat: MeshPhysicalMaterial): MeshPhongMaterial {\r\n\r\n    if (oldMat.type !== \"MeshPhysicalMaterial\") {\r\n        throw new Error(\"Input material is not MeshPhysicalMaterial\");\r\n    }\r\n\r\n    const params: MeshPhongMaterialParameters = {\r\n        alphaMap: oldMat.alphaMap,\r\n        alphaTest: oldMat.alphaTest,\r\n        alphaToCoverage: oldMat.alphaToCoverage,\r\n        aoMap: oldMat.aoMap,\r\n        aoMapIntensity: oldMat.aoMapIntensity,\r\n        blendDst: oldMat.blendDst,\r\n        blendDstAlpha: oldMat.blendDstAlpha,\r\n        blendEquation: oldMat.blendEquation,\r\n        blendEquationAlpha: oldMat.blendEquationAlpha,\r\n        blending: oldMat.blending,\r\n        blendSrc: oldMat.blendSrc,\r\n        blendSrcAlpha: oldMat.blendSrcAlpha,\r\n        bumpMap: oldMat.bumpMap,\r\n        bumpScale: oldMat.bumpScale,\r\n        clipIntersection: oldMat.clipIntersection,\r\n        clippingPlanes: oldMat.clippingPlanes,\r\n        clipShadows: oldMat.clipShadows,\r\n        color: oldMat.color,\r\n        colorWrite: oldMat.colorWrite,\r\n        depthFunc: oldMat.depthFunc,\r\n        depthTest: oldMat.depthTest,\r\n        depthWrite: oldMat.depthWrite,\r\n        displacementBias: oldMat.displacementBias,\r\n        displacementMap: oldMat.displacementMap,\r\n        displacementScale: oldMat.displacementScale,\r\n        dithering: oldMat.dithering,\r\n        emissive: oldMat.emissive,\r\n        emissiveIntensity: oldMat.emissiveIntensity,\r\n        emissiveMap: oldMat.emissiveMap,\r\n        envMap: oldMat.envMap,\r\n        flatShading: oldMat.flatShading,\r\n        fog: oldMat.fog,\r\n        lightMap: oldMat.lightMap,\r\n        lightMapIntensity: oldMat.lightMapIntensity,\r\n        map: oldMat.map,\r\n        name: oldMat.name + \"-Standard-To-Phong\",\r\n        normalMap: oldMat.normalMap,\r\n        normalMapType: oldMat.normalMapType,\r\n        normalScale: oldMat.normalScale,\r\n        opacity: oldMat.opacity,\r\n        polygonOffset: oldMat.polygonOffset,\r\n        polygonOffsetFactor: oldMat.polygonOffsetFactor,\r\n        polygonOffsetUnits: oldMat.polygonOffsetUnits,\r\n        precision: oldMat.precision,\r\n        premultipliedAlpha: oldMat.premultipliedAlpha,\r\n        reflectivity: oldMat.reflectivity,\r\n        shadowSide: oldMat.shadowSide,\r\n        shininess: oldMat.sheen,\r\n        side: oldMat.side,\r\n        specular: oldMat.specularColor,\r\n        specularMap: oldMat.specularColorMap,\r\n        stencilFail: oldMat.stencilFail,\r\n        stencilFunc: oldMat.stencilFunc,\r\n        stencilFuncMask: oldMat.stencilFuncMask,\r\n        stencilRef: oldMat.stencilRef,\r\n        stencilWrite: oldMat.stencilWrite,\r\n        stencilWriteMask: oldMat.stencilWriteMask,\r\n        stencilZFail: oldMat.stencilZFail,\r\n        stencilZPass: oldMat.stencilZPass,\r\n        toneMapped: oldMat.toneMapped,\r\n        transparent: oldMat.transparent,\r\n        userData: oldMat.userData,\r\n        vertexColors: oldMat.vertexColors,\r\n        visible: oldMat.visible,\r\n        wireframe: oldMat.wireframe,\r\n        wireframeLinecap: oldMat.wireframeLinecap,\r\n        wireframeLinejoin: oldMat.wireframeLinejoin,\r\n        wireframeLinewidth: oldMat.wireframeLinewidth\r\n    };\r\n    for (const [key, value] of Object.entries(params)) {\r\n        if (isNullOrUndefined(value)) {\r\n            delete (params as any)[key];\r\n        }\r\n    }\r\n    return new MeshPhongMaterial(params);\r\n}\r\n\r\nexport type ColorOpts = (Color | number | string);\r\n\r\nexport const black = /*@__PURE__*/ 0x000000;\r\nexport const blue = /*@__PURE__*/ 0x0000ff;\r\nexport const green = /*@__PURE__*/ 0x00ff00;\r\nexport const cyan = /*@__PURE__*/ 0x00ffff;\r\nexport const red = /*@__PURE__*/ 0xff0000;\r\nexport const magenta = /*@__PURE__*/ 0xff00ff;\r\nexport const yellow = /*@__PURE__*/ 0xffff00;\r\nexport const grey = /*@__PURE__*/ 0xc0c0c0;\r\nexport const white = /*@__PURE__*/ 0xffffff;\r\n\r\nexport const colorBlack = /*@__PURE__*/ new Color(black);\r\nexport const colorBlue = /*@__PURE__*/ new Color(blue);\r\nexport const colorGreen = /*@__PURE__*/ new Color(green);\r\nexport const colorCyan = /*@__PURE__*/ new Color(cyan);\r\nexport const colorRed = /*@__PURE__*/ new Color(red);\r\nexport const colorMagenta = /*@__PURE__*/ new Color(magenta);\r\nexport const colorYellow = /*@__PURE__*/ new Color(yellow);\r\nexport const colorGrey = /*@__PURE__*/ new Color(grey);\r\nexport const colorWhite = /*@__PURE__*/ new Color(white);\r\n\r\nexport const solidBlack = /*@__PURE__*/ solid({ color: black });\r\nexport const solidBlue = /*@__PURE__*/ solid({ color: blue });\r\nexport const solidGreen = /*@__PURE__*/ solid({ color: green });\r\nexport const solidCyan = /*@__PURE__*/ solid({ color: cyan });\r\nexport const solidRed = /*@__PURE__*/ solid({ color: red });\r\nexport const solidMagenta = /*@__PURE__*/ solid({ color: magenta });\r\nexport const solidYellow = /*@__PURE__*/ solid({ color: yellow });\r\nexport const solidGrey = /*@__PURE__*/ solid({ color: grey });\r\nexport const solidWhite = /*@__PURE__*/ solid({ color: white });\r\nexport function solidTransparentBlack(opacity: number) { return solidTransparent({ color: black, opacity }); }\r\nexport function solidTransparentBlue(opacity: number) { return solidTransparent({ color: blue, opacity }); }\r\nexport function solidTransparentGreen(opacity: number) { return solidTransparent({ color: green, opacity }); }\r\nexport function solidTransparentCyan(opacity: number) { return solidTransparent({ color: cyan, opacity }); }\r\nexport function solidTransparentRed(opacity: number) { return solidTransparent({ color: red, opacity }); }\r\nexport function solidTransparentMagenta(opacity: number) { return solidTransparent({ color: magenta, opacity }); }\r\nexport function solidTransparentYellow(opacity: number) { return solidTransparent({ color: yellow, opacity }); }\r\nexport function solidTransparentGrey(opacity: number) { return solidTransparent({ color: grey, opacity }); }\r\nexport function solidTransparentWhite(opacity: number) { return solidTransparent({ color: white, opacity }); }\r\n\r\nexport const litBlack = /*@__PURE__*/ lit({ color: black });\r\nexport const litBlue = /*@__PURE__*/ lit({ color: blue });\r\nexport const litGreen = /*@__PURE__*/ lit({ color: green });\r\nexport const litCyan = /*@__PURE__*/ lit({ color: cyan });\r\nexport const litRed = /*@__PURE__*/ lit({ color: red });\r\nexport const litMagenta = /*@__PURE__*/ lit({ color: magenta });\r\nexport const litYellow = /*@__PURE__*/ lit({ color: yellow });\r\nexport const litGrey = /*@__PURE__*/ lit({ color: grey });\r\nexport const litWhite = /*@__PURE__*/ lit({ color: white });\r\nexport function litTransparentBlack(opacity: number) { return litTransparent({ color: black, opacity }); }\r\nexport function litTransparentBlue(opacity: number) { return litTransparent({ color: blue, opacity }); }\r\nexport function litTransparentGreen(opacity: number) { return litTransparent({ color: green, opacity }); }\r\nexport function litTransparentCyan(opacity: number) { return litTransparent({ color: cyan, opacity }); }\r\nexport function litTransparentRed(opacity: number) { return litTransparent({ color: red, opacity }); }\r\nexport function litTransparentMagenta(opacity: number) { return litTransparent({ color: magenta, opacity }); }\r\nexport function litTransparentYellow(opacity: number) { return litTransparent({ color: yellow, opacity }); }\r\nexport function litTransparentGrey(opacity: number) { return litTransparent({ color: grey, opacity }); }\r\nexport function litTransparentWhite(opacity: number) { return litTransparent({ color: white, opacity }); }\r\n\r\nexport const lineBlack = /*@__PURE__*/ line({ color: black });\r\nexport const lineBlue = /*@__PURE__*/ line({ color: blue });\r\nexport const lineGreen = /*@__PURE__*/ line({ color: green });\r\nexport const lineCyan = /*@__PURE__*/ line({ color: cyan });\r\nexport const lineRed = /*@__PURE__*/ line({ color: red });\r\nexport const lineMagenta = /*@__PURE__*/ line({ color: magenta });\r\nexport const lineYellow = /*@__PURE__*/ line({ color: yellow });\r\nexport const lineGrey = /*@__PURE__*/ line({ color: grey });\r\nexport const lineWhite = /*@__PURE__*/ line({ color: white });\r\nexport function lineTransparentBlack(opacity: number) { return lineTransparent({ color: black, opacity }); }\r\nexport function lineTransparentBlue(opacity: number) { return lineTransparent({ color: blue, opacity }); }\r\nexport function lineTransparentGreen(opacity: number) { return lineTransparent({ color: green, opacity }); }\r\nexport function lineTransparentCyan(opacity: number) { return lineTransparent({ color: cyan, opacity }); }\r\nexport function lineTransparentRed(opacity: number) { return lineTransparent({ color: red, opacity }); }\r\nexport function lineTransparentMagenta(opacity: number) { return lineTransparent({ color: magenta, opacity }); }\r\nexport function lineTransparentYellow(opacity: number) { return lineTransparent({ color: yellow, opacity }); }\r\nexport function lineTransparentGrey(opacity: number) { return lineTransparent({ color: grey, opacity }); }\r\nexport function lineTransparentWhite(opacity: number) { return lineTransparent({ color: white, opacity }); }\r\n\r\nexport const spriteBlack = /*@__PURE__*/ sprite({ color: black });\r\nexport const spriteBlue = /*@__PURE__*/ sprite({ color: blue });\r\nexport const spriteGreen = /*@__PURE__*/ sprite({ color: green });\r\nexport const spriteCyan = /*@__PURE__*/ sprite({ color: cyan });\r\nexport const spriteRed = /*@__PURE__*/ sprite({ color: red });\r\nexport const spriteMagenta = /*@__PURE__*/ sprite({ color: magenta });\r\nexport const spriteYellow = /*@__PURE__*/ sprite({ color: yellow });\r\nexport const spriteGrey = /*@__PURE__*/ sprite({ color: grey });\r\nexport const spriteWhite = /*@__PURE__*/ sprite({ color: white });\r\nexport function spriteTransparentBlack(opacity: number) { return spriteTransparent({ color: black, opacity }); }\r\nexport function spriteTransparentBlue(opacity: number) { return spriteTransparent({ color: blue, opacity }); }\r\nexport function spriteTransparentGreen(opacity: number) { return spriteTransparent({ color: green, opacity }); }\r\nexport function spriteTransparentCyan(opacity: number) { return spriteTransparent({ color: cyan, opacity }); }\r\nexport function spriteTransparentRed(opacity: number) { return spriteTransparent({ color: red, opacity }); }\r\nexport function spriteTransparentMagenta(opacity: number) { return spriteTransparent({ color: magenta, opacity }); }\r\nexport function spriteTransparentYellow(opacity: number) { return spriteTransparent({ color: yellow, opacity }); }\r\nexport function spriteTransparentGrey(opacity: number) { return spriteTransparent({ color: grey, opacity }); }\r\nexport function spriteTransparentWhite(opacity: number) { return spriteTransparent({ color: white, opacity }); }", "import { arrayCompare, arrayScan } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { createUtilityCanvasFromImageBitmap, createUtilityCanvasFromImageData, dispose, isImageBitmap, isImageData, isOffscreenCanvas } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { getHeight, getWidth } from \"@juniper-lib/tslib/dist/images\";\r\nimport { isDefined, isNullOrUndefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { inches2Meters, meters2Inches } from \"@juniper-lib/tslib/dist/units/length\";\r\nimport { IDisposable } from \"@juniper-lib/tslib/dist/using\";\r\nimport { BufferGeometry, Matrix4, Mesh, MeshBasicMaterial, MeshBasicMaterialParameters, Object3D, Texture, Vector3, VideoTexture } from \"three\";\r\nimport { plane } from \"../Plane\";\r\nimport { StereoLayoutName } from \"../VideoPlayer3D\";\r\nimport { cleanup } from \"../cleanup\";\r\nimport { BaseEnvironment } from \"../environment/BaseEnvironment\";\r\nimport { getRelativeXRRigidTransform } from \"../getRelativeXRRigidTransform\";\r\nimport { solidTransparent } from \"../materials\";\r\nimport { mesh, objGraph, objectIsFullyVisible } from \"../objects\";\r\nimport { isMesh, isMeshBasicMaterial } from \"../typeChecks\";\r\n\r\nconst S = new Vector3();\r\n\r\nlet copyCounter = 0;\r\n\r\nexport type Image2DObjectSizeMode = \"none\"\r\n    | \"fixed-height\"\r\n    | \"fixed-width\";\r\n\r\nexport type WebXRLayerType = \"none\" | \"static\" | \"dynamic\";\r\n\r\nexport class Image2D\r\n    extends Object3D\r\n    implements IDisposable {\r\n\r\n    private readonly lastMatrixWorld = new Matrix4();\r\n\r\n    private _imageWidth = 0;\r\n    private _imageHeight = 0;\r\n    private forceUpdate = false;\r\n    private wasUsingLayer = false;\r\n\r\n    private layer: XRQuadLayer = null;\r\n    private curImage: TexImageSource = null;\r\n    private lastImage: TexImageSource = null;\r\n    private lastWidth: number = null;\r\n    private lastHeight: number = null;\r\n\r\n    protected env: BaseEnvironment = null;\r\n\r\n    mesh: Mesh<BufferGeometry, MeshBasicMaterial> = null;\r\n    stereoLayoutName: StereoLayoutName = \"mono\";\r\n    sizeMode: Image2DObjectSizeMode = \"none\";\r\n\r\n    constructor(env: BaseEnvironment, name: string, public webXRLayerType: WebXRLayerType, materialOrOptions: MeshBasicMaterialParameters | MeshBasicMaterial = null) {\r\n        super();\r\n\r\n        if (env) {\r\n            this.setEnvAndName(env, name);\r\n\r\n            const material = isMeshBasicMaterial(materialOrOptions)\r\n                ? materialOrOptions\r\n                : solidTransparent(Object.assign(\r\n                    {},\r\n                    materialOrOptions,\r\n                    { name: this.name }));\r\n\r\n            objGraph(this,\r\n                this.mesh = mesh(name + \"-Mesh\", plane, material));\r\n        }\r\n    }\r\n\r\n    override copy(source: this, recursive = true) {\r\n        super.copy(source, recursive);\r\n        this.webXRLayerType = source.webXRLayerType;\r\n        this.setImageSize(source.imageWidth, source.imageHeight);\r\n        this.setEnvAndName(source.env, source.name + (++copyCounter));\r\n        this.mesh = arrayScan(this.children, isMesh) as Mesh<BufferGeometry, MeshBasicMaterial>;\r\n        if (isNullOrUndefined(this.mesh)) {\r\n            this.mesh = source.mesh.clone();\r\n            objGraph(this, this.mesh);\r\n        }\r\n\r\n        this.setTextureMap(source.curImage);\r\n\r\n        return this;\r\n    }\r\n\r\n    dispose(): void {\r\n        this.env.removeScope(this);\r\n        this.disposeImage();\r\n        cleanup(this.mesh);\r\n    }\r\n\r\n    private disposeImage() {\r\n        this.removeWebXRLayer();\r\n        cleanup(this.mesh.material.map);\r\n        this.curImage = null;\r\n    }\r\n\r\n    private setImageSize(width: number, height: number) {\r\n        if (width !== this.imageWidth\r\n            || height !== this.imageHeight) {\r\n            const { objectWidth, objectHeight } = this;\r\n            this._imageWidth = width;\r\n            this._imageHeight = height;\r\n            if (this.sizeMode !== \"none\") {\r\n                if (this.sizeMode === \"fixed-width\") {\r\n                    this.objectWidth = objectWidth;\r\n                }\r\n                else {\r\n                    this.objectHeight = objectHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get imageWidth() {\r\n        return this._imageWidth;\r\n    }\r\n\r\n    get imageHeight() {\r\n        return this._imageHeight;\r\n    }\r\n\r\n    get imageAspectRatio() {\r\n        return this.imageWidth / this.imageHeight;\r\n    }\r\n\r\n    get objectWidth() {\r\n        return this.scale.x;\r\n    }\r\n\r\n    set objectWidth(v) {\r\n        this.scale.set(v, this.scale.y = v / this.imageAspectRatio, 1);\r\n    }\r\n\r\n    get objectHeight() {\r\n        return this.scale.y;\r\n    }\r\n\r\n    set objectHeight(v) {\r\n        this.scale.set(this.imageAspectRatio * v, v, 1);\r\n    }\r\n\r\n    get pixelDensity() {\r\n        const inches = meters2Inches(this.objectWidth);\r\n        const ppi = this.imageWidth / inches;\r\n        return ppi;\r\n    }\r\n\r\n    set pixelDensity(ppi) {\r\n        const inches = this.imageWidth / ppi;\r\n        const meters = inches2Meters(inches);\r\n        this.objectWidth = meters;\r\n    }\r\n\r\n    private setEnvAndName(env: BaseEnvironment, name: string) {\r\n        this.env = env;\r\n        this.name = name;\r\n        this.env.addScopedEventListener(this, \"update\", (evt) =>\r\n            this.checkWebXRLayer(evt.frame));\r\n    }\r\n\r\n    private get needsLayer(): boolean {\r\n        if (!objectIsFullyVisible(this)\r\n            || isNullOrUndefined(this.mesh.material.map)\r\n            || isNullOrUndefined(this.curImage)) {\r\n            return false;\r\n        }\r\n\r\n        if (!(this.curImage instanceof HTMLVideoElement)) {\r\n            return true;\r\n        }\r\n\r\n        return !this.curImage.paused || this.curImage.currentTime > 0;\r\n    }\r\n\r\n    removeWebXRLayer() {\r\n        if (isDefined(this.layer)) {\r\n            this.wasUsingLayer = false;\r\n            this.env.removeWebXRLayer(this.layer);\r\n            this.mesh.visible = true;\r\n\r\n            const layer = this.layer;\r\n            this.layer = null;\r\n\r\n            setTimeout(() => dispose(layer), 100);\r\n        }\r\n\r\n    }\r\n\r\n    setTextureMap(img: TexImageSource): void {\r\n        if (this.curImage) {\r\n            this.disposeImage();\r\n        }\r\n\r\n        if (img) {\r\n            if (isImageBitmap(img)) {\r\n                img = createUtilityCanvasFromImageBitmap(img);\r\n            }\r\n            else if (isImageData(img)) {\r\n                img = createUtilityCanvasFromImageData(img);\r\n            }\r\n\r\n            if (isOffscreenCanvas(img)) {\r\n                img = img as any as HTMLCanvasElement;\r\n            }\r\n\r\n            this.curImage = img;\r\n\r\n            this.setImageSize(getWidth(img), getHeight(img));\r\n            if (img instanceof HTMLVideoElement) {\r\n                this.mesh.material.map = new VideoTexture(img);\r\n            }\r\n            else {\r\n                this.mesh.material.map = new Texture(img);\r\n                this.mesh.material.map.needsUpdate = true;\r\n            }\r\n        }\r\n\r\n        this.mesh.material.needsUpdate = true;\r\n    }\r\n\r\n    private get isVideo() {\r\n        return this.curImage instanceof HTMLVideoElement;\r\n    }\r\n\r\n    updateTexture() {\r\n        if (isDefined(this.curImage)) {\r\n            const newWidth = getWidth(this.curImage);\r\n            const newHeight = getHeight(this.curImage);;\r\n            if (this.imageWidth !== newWidth\r\n                || this.imageHeight !== newHeight) {\r\n\r\n                const img = this.curImage;\r\n\r\n                this.disposeImage();\r\n\r\n                this.setTextureMap(img);\r\n            }\r\n            else {\r\n                this.mesh.material.map.needsUpdate\r\n                    = this.forceUpdate\r\n                    = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkWebXRLayer(frame?: XRFrame): void {\r\n        if (this.mesh.material.map && this.curImage) {\r\n            const isLayersAvailable = this.webXRLayerType !== \"none\"\r\n                && this.env.hasXRCompositionLayers\r\n                && this.env.showWebXRLayers\r\n                && isDefined(frame)\r\n                && (this.isVideo && isDefined(this.env.xrMediaBinding)\r\n                    || !this.isVideo && isDefined(this.env.xrBinding));\r\n            const useLayer = isLayersAvailable && this.needsLayer;\r\n\r\n            const useLayerChanged = useLayer !== this.wasUsingLayer;\r\n            const imageChanged = this.curImage !== this.lastImage\r\n                || this.mesh.material.needsUpdate\r\n                || this.mesh.material.map.needsUpdate\r\n                || this.forceUpdate;\r\n            const sizeChanged = this.imageWidth !== this.lastWidth\r\n                || this.imageHeight !== this.lastHeight;\r\n\r\n            this.wasUsingLayer = useLayer;\r\n            this.lastImage = this.curImage;\r\n            this.lastWidth = this.imageWidth;\r\n            this.lastHeight = this.imageHeight;\r\n\r\n            if (useLayerChanged || sizeChanged) {\r\n                if ((!useLayer || sizeChanged) && this.layer) {\r\n                    this.removeWebXRLayer();\r\n                }\r\n\r\n                if (useLayer) {\r\n                    const space = this.env.referenceSpace;\r\n\r\n                    const transform = getRelativeXRRigidTransform(this.env.stage, this.mesh, S);\r\n                    this.lastMatrixWorld.copy(this.matrixWorld);\r\n                    const width = S.x / 2;\r\n                    const height = S.y / 2;\r\n                    const layout = this.stereoLayoutName === \"mono\"\r\n                        ? \"mono\"\r\n                        : this.stereoLayoutName === \"left-right\" || this.stereoLayoutName === \"right-left\"\r\n                            ? \"stereo-left-right\"\r\n                            : \"stereo-top-bottom\";\r\n\r\n                    if (this.isVideo) {\r\n                        const invertStereo = this.stereoLayoutName === \"right-left\"\r\n                            || this.stereoLayoutName === \"bottom-top\";\r\n\r\n                        this.layer = this.env.xrMediaBinding.createQuadLayer(this.curImage as HTMLVideoElement, {\r\n                            space,\r\n                            layout,\r\n                            invertStereo,\r\n                            transform,\r\n                            width,\r\n                            height\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.layer = this.env.xrBinding.createQuadLayer({\r\n                            space,\r\n                            layout,\r\n                            textureType: \"texture\",\r\n                            isStatic: this.webXRLayerType === \"static\",\r\n                            viewPixelWidth: getWidth(this.curImage),\r\n                            viewPixelHeight: getHeight(this.curImage),\r\n                            transform,\r\n                            width,\r\n                            height\r\n                        });\r\n                    }\r\n\r\n                    this.env.addWebXRLayer(this.layer, 500);\r\n                    this.mesh.visible = false;\r\n                }\r\n            }\r\n\r\n            if (this.layer) {\r\n                if (imageChanged || this.layer.needsRedraw) {\r\n                    const gl = this.env.gl;\r\n                    const gLayer = this.env.xrBinding.getSubImage(this.layer, frame);\r\n\r\n                    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n                    gl.bindTexture(gl.TEXTURE_2D, gLayer.colorTexture);\r\n                    gl.texSubImage2D(\r\n                        gl.TEXTURE_2D,\r\n                        0,\r\n                        0, 0,\r\n                        gl.RGBA,\r\n                        gl.UNSIGNED_BYTE,\r\n                        this.curImage);\r\n                    gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n                    gl.bindTexture(gl.TEXTURE_2D, null);\r\n                    this.forceUpdate = false;\r\n                }\r\n\r\n                if (arrayCompare(this.matrixWorld.elements, this.lastMatrixWorld.elements) >= 0) {\r\n                    this.layer.transform = getRelativeXRRigidTransform(this.env.stage, this.mesh, S);\r\n                    this.lastMatrixWorld.copy(this.matrixWorld);\r\n                    this.layer.width = S.x / 2;\r\n                    this.layer.height = S.y / 2;\r\n                }\r\n            }\r\n            else {\r\n                this.forceUpdate = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n", "import type { CanvasTypes, Context2D } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { createUICanvas } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { TypedEvent, TypedEventTarget } from \"@juniper-lib/events/dist/TypedEventTarget\";\r\nimport { isDefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\n\r\ntype CanvasImageEvents = {\r\n    redrawn: TypedEvent<\"redrawn\">;\r\n}\r\n\r\nexport interface CanvasImageOptions {\r\n    scale: number;\r\n}\r\n\r\nexport abstract class CanvasImage\r\n    extends TypedEventTarget<CanvasImageEvents> {\r\n\r\n    private _canvas: CanvasTypes;\r\n    private _scale = 250;\r\n    private _g: Context2D;\r\n    private _visible = true;\r\n    private wasVisible: boolean = null;\r\n\r\n    protected redrawnEvt = new TypedEvent(\"redrawn\");\r\n\r\n    constructor(width: number, height: number, options?: Partial<CanvasImageOptions>) {\r\n        super();\r\n\r\n        if (isDefined(options)) {\r\n\r\n            if (isDefined(options.scale)) {\r\n                this._scale = options.scale;\r\n            }\r\n\r\n        }\r\n\r\n        this._canvas = createUICanvas(width, height);\r\n        this._g = this.canvas.getContext(\"2d\") as Context2D;\r\n    }\r\n\r\n    protected fillRect(color: string, x: number, y: number, width: number, height: number, margin: number) {\r\n        this.g.fillStyle = color;\r\n        this.g.fillRect(x + margin, y + margin, width - 2 * margin, height - 2 * margin);\r\n    }\r\n\r\n    protected drawText(text: string, x: number, y: number, align: CanvasTextAlign) {\r\n        this.g.textAlign = align;\r\n        this.g.strokeText(text, x, y);\r\n        this.g.fillText(text, x, y);\r\n    }\r\n\r\n    protected redraw(): void {\r\n        if ((this.visible || this.wasVisible) && this.onRedraw()) {\r\n            this.wasVisible = this.visible;\r\n            this.dispatchEvent(this.redrawnEvt);\r\n        }\r\n    }\r\n\r\n    protected onClear(): void {\r\n        this.g.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n\r\n    clear() {\r\n        this.onClear();\r\n        this.dispatchEvent(this.redrawnEvt);\r\n    }\r\n\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    protected get g() {\r\n        return this._g;\r\n    }\r\n\r\n    get imageWidth(): number {\r\n        return this.canvas.width;\r\n    }\r\n\r\n    get imageHeight(): number {\r\n        return this.canvas.height;\r\n    }\r\n\r\n    get aspectRatio(): number {\r\n        return this.imageWidth / this.imageHeight;\r\n    }\r\n\r\n    get width(): number {\r\n        return this.imageWidth / this.scale;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.imageHeight / this.scale;\r\n    }\r\n\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n\r\n    set scale(v) {\r\n        if (this.scale !== v) {\r\n            this._scale = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(v) {\r\n        if (this.visible !== v) {\r\n            this.wasVisible = this._visible;\r\n            this._visible = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    protected abstract onRedraw(): boolean;\r\n}\r\n", "import { Context2D, createUtilityCanvas, setContextSize } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { makeFont } from \"@juniper-lib/dom/dist/fonts\";\r\nimport { clamp, HalfPi, PaddingRect } from \"@juniper-lib/tslib/dist/math\";\r\nimport { isDefined, isNullOrUndefined, isNumber } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { CanvasImage, CanvasImageOptions } from \"./CanvasImage\";\r\n\r\nexport type TextDirection = \"horizontal\" | \"vertical\";\r\n\r\nexport interface TextImageOptions extends CanvasImageOptions {\r\n    minWidth: number;\r\n    maxWidth: number;\r\n    minHeight: number;\r\n    maxHeight: number;\r\n    freezeDimensions: boolean;\r\n\r\n    bgFillColor: CssColorValue;\r\n    bgStrokeColor: CssColorValue;\r\n    bgStrokeSize: number;\r\n\r\n    textStrokeColor: CssColorValue;\r\n    textStrokeSize: number;\r\n    textFillColor: CssColorValue;\r\n    textDirection: TextDirection;\r\n\r\n    fontStyle: string;\r\n    fontVariant: string;\r\n    fontWeight: string;\r\n    fontFamily: string;\r\n    fontSize: number;\r\n\r\n    padding: PaddingRect | number;\r\n\r\n    value: string;\r\n}\r\n\r\nexport class TextImage extends CanvasImage {\r\n    private trueWidth: number = null;\r\n    private trueHeight: number = null;\r\n    private trueFontSize: number = null;\r\n    private dx: number = null;\r\n\r\n    private _minWidth: number = null;\r\n    private _maxWidth: number = null;\r\n    private _minHeight: number = null;\r\n    private _maxHeight: number = null;\r\n    private _freezeDimensions = false;\r\n    private _dimensionsFrozen = false;\r\n\r\n    private _bgFillColor: string = null;\r\n    private _bgStrokeColor: string = null;\r\n    private _bgStrokeSize: number = null;\r\n\r\n    private _textStrokeColor: string = null;\r\n    private _textStrokeSize: number = null;\r\n    private _textFillColor = \"black\";\r\n    private _textDirection = \"horizontal\";\r\n\r\n    private _fontStyle = \"normal\";\r\n    private _fontVariant = \"normal\";\r\n    private _fontWeight = \"normal\";\r\n    private _fontFamily = \"sans-serif\";\r\n    private _fontSize = 20;\r\n\r\n    private _padding: PaddingRect;\r\n\r\n    private _value: string = null;\r\n\r\n    constructor(options: Partial<TextImageOptions>) {\r\n        super(10, 10, options);\r\n\r\n        if (isDefined(options)) {\r\n            if (isDefined(options.minWidth)) {\r\n                this._minWidth = options.minWidth;\r\n            }\r\n\r\n            if (isDefined(options.maxWidth)) {\r\n                this._maxWidth = options.maxWidth;\r\n            }\r\n\r\n            if (isDefined(options.minHeight)) {\r\n                this._minHeight = options.minHeight;\r\n            }\r\n\r\n            if (isDefined(options.maxHeight)) {\r\n                this._maxHeight = options.maxHeight;\r\n            }\r\n\r\n            if (isDefined(options.freezeDimensions)) {\r\n                this._freezeDimensions = options.freezeDimensions;\r\n            }\r\n\r\n            if (isDefined(options.textStrokeColor)) {\r\n                this._textStrokeColor = options.textStrokeColor;\r\n            }\r\n\r\n            if (isDefined(options.textStrokeSize)) {\r\n                this._textStrokeSize = options.textStrokeSize;\r\n            }\r\n\r\n            if (isDefined(options.bgFillColor)) {\r\n                this._bgFillColor = options.bgFillColor;\r\n            }\r\n\r\n            if (isDefined(options.bgStrokeColor)) {\r\n                this._bgStrokeColor = options.bgStrokeColor;\r\n            }\r\n\r\n            if (isDefined(options.bgStrokeSize)) {\r\n                this._bgStrokeSize = options.bgStrokeSize;\r\n            }\r\n\r\n            if (isDefined(options.value)) {\r\n                this._value = options.value;\r\n            }\r\n\r\n            if (isDefined(options.textFillColor)) {\r\n                this._textFillColor = options.textFillColor;\r\n            }\r\n\r\n            if (isDefined(options.textDirection)) {\r\n                this._textDirection = options.textDirection;\r\n            }\r\n\r\n            if (isDefined(options.fontStyle)) {\r\n                this._fontStyle = options.fontStyle;\r\n            }\r\n\r\n            if (isDefined(options.fontVariant)) {\r\n                this._fontVariant = options.fontVariant;\r\n            }\r\n\r\n            if (isDefined(options.fontWeight)) {\r\n                this._fontWeight = options.fontWeight;\r\n            }\r\n\r\n            if (isDefined(options.fontFamily)) {\r\n                this._fontFamily = options.fontFamily;\r\n            }\r\n\r\n            if (isDefined(options.fontSize)) {\r\n                this._fontSize = options.fontSize;\r\n            }\r\n\r\n            if (isDefined(options.padding)) {\r\n                if (isNumber(options.padding)) {\r\n                    this._padding = {\r\n                        left: options.padding,\r\n                        right: options.padding,\r\n                        top: options.padding,\r\n                        bottom: options.padding\r\n                    };\r\n                }\r\n                else {\r\n                    this._padding = options.padding;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isNullOrUndefined(this._padding)) {\r\n            this._padding = {\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                left: 0\r\n            };\r\n        }\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    get minWidth() {\r\n        return this._minWidth;\r\n    }\r\n\r\n    set minWidth(v) {\r\n        if (this.minWidth !== v) {\r\n            this._minWidth = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get maxWidth() {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    set maxWidth(v) {\r\n        if (this.maxWidth !== v) {\r\n            this._maxWidth = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get minHeight() {\r\n        return this._minHeight;\r\n    }\r\n\r\n    set minHeight(v) {\r\n        if (this.minHeight !== v) {\r\n            this._minHeight = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get maxHeight() {\r\n        return this._maxHeight;\r\n    }\r\n\r\n    set maxHeight(v) {\r\n        if (this.maxHeight !== v) {\r\n            this._maxHeight = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n\r\n    get padding() {\r\n        return this._padding;\r\n    }\r\n\r\n    set padding(v) {\r\n        if (v instanceof Array) {\r\n            throw new Error(\"Invalid padding\");\r\n        }\r\n        if (this.padding.top !== v.top\r\n            || this.padding.right != v.right\r\n            || this.padding.bottom != v.bottom\r\n            || this.padding.left != v.left) {\r\n            this._padding = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get textDirection() {\r\n        return this._textDirection;\r\n    }\r\n\r\n    set textDirection(v) {\r\n        if (this.textDirection !== v) {\r\n            this._textDirection = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get fontStyle() {\r\n        return this._fontStyle;\r\n    }\r\n\r\n    set fontStyle(v) {\r\n        if (this.fontStyle !== v) {\r\n            this._fontStyle = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get fontVariant() {\r\n        return this._fontVariant;\r\n    }\r\n\r\n    set fontVariant(v) {\r\n        if (this.fontVariant !== v) {\r\n            this._fontVariant = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get fontWeight() {\r\n        return this._fontWeight;\r\n    }\r\n\r\n    set fontWeight(v) {\r\n        if (this.fontWeight !== v) {\r\n            this._fontWeight = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get fontSize() {\r\n        return this._fontSize;\r\n    }\r\n\r\n    set fontSize(v) {\r\n        if (this.fontSize !== v) {\r\n            this._fontSize = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get fontFamily() {\r\n        return this._fontFamily;\r\n    }\r\n\r\n    set fontFamily(v) {\r\n        if (this.fontFamily !== v) {\r\n            this._fontFamily = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get textFillColor() {\r\n        return this._textFillColor;\r\n    }\r\n\r\n    set textFillColor(v) {\r\n        if (this.textFillColor !== v) {\r\n            this._textFillColor = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get textStrokeColor() {\r\n        return this._textStrokeColor;\r\n    }\r\n\r\n    set textStrokeColor(v) {\r\n        if (this.textStrokeColor !== v) {\r\n            this._textStrokeColor = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get textStrokeSize() {\r\n        return this._textStrokeSize;\r\n    }\r\n\r\n    set textStrokeSize(v) {\r\n        if (this.textStrokeSize !== v) {\r\n            this._textStrokeSize = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get bgFillColor() {\r\n        return this._bgFillColor;\r\n    }\r\n\r\n    set bgFillColor(v) {\r\n        if (this.bgFillColor !== v) {\r\n            this._bgFillColor = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get bgStrokeColor() {\r\n        return this._bgStrokeColor;\r\n    }\r\n\r\n    set bgStrokeColor(v) {\r\n        if (this.bgStrokeColor !== v) {\r\n            this._bgStrokeColor = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get bgStrokeSize() {\r\n        return this._bgStrokeSize;\r\n    }\r\n\r\n    set bgStrokeSize(v) {\r\n        if (this.bgStrokeSize !== v) {\r\n            this._bgStrokeSize = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(v) {\r\n        if (this.value !== v) {\r\n            this._value = v;\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    private split(value: string) {\r\n        return value\r\n            .replace(/\\r\\n/g, \"\\n\")\r\n            .split(\"\\n\");\r\n    }\r\n\r\n    protected unfreeze() {\r\n        this._dimensionsFrozen = false;\r\n    }\r\n\r\n    private lastValue: string = null;\r\n\r\n    protected onRedraw() {\r\n        this.onClear();\r\n\r\n        if (this.visible\r\n            && this.fontFamily\r\n            && this.fontSize\r\n            && (this.textFillColor || (this.textStrokeColor && this.textStrokeSize))\r\n            && this.value\r\n            && this.value !== this.lastValue) {\r\n\r\n            const lines = this.split(this.value);\r\n            const isVertical = this.textDirection && this.textDirection.indexOf(\"vertical\") === 0;\r\n\r\n            if (this.trueWidth === null\r\n                || this.trueHeight === null\r\n                || this.dx === null\r\n                || this.trueFontSize === null\r\n                || !this._dimensionsFrozen) {\r\n\r\n                this._dimensionsFrozen = this._freezeDimensions;\r\n\r\n                const autoResize = this.minWidth != null\r\n                    || this.maxWidth != null\r\n                    || this.minHeight != null\r\n                    || this.maxHeight != null;\r\n\r\n                const _targetMinWidth = ((this.minWidth || 0) - this.padding.right - this.padding.left) * this.scale;\r\n                const _targetMaxWidth = ((this.maxWidth || 4096) - this.padding.right - this.padding.left) * this.scale;\r\n                const _targetMinHeight = ((this.minHeight || 0) - this.padding.top - this.padding.bottom) * this.scale;\r\n                const _targetMaxHeight = ((this.maxHeight || 4096) - this.padding.top - this.padding.bottom) * this.scale;\r\n\r\n                const targetMinWidth = isVertical ? _targetMinHeight : _targetMinWidth;\r\n                const targetMaxWidth = isVertical ? _targetMaxHeight : _targetMaxWidth;\r\n                const targetMinHeight = isVertical ? _targetMinWidth : _targetMinHeight;\r\n                const targetMaxHeight = isVertical ? _targetMaxWidth : _targetMaxHeight;\r\n\r\n                const tried = [];\r\n\r\n\r\n                this.trueWidth = 0;\r\n                this.trueHeight = 0;\r\n\r\n                this.dx = 0;\r\n\r\n                let tooBig = false,\r\n                    tooSmall = false,\r\n                    highFontSize = 10000,\r\n                    lowFontSize = 0;\r\n\r\n                this.trueFontSize = clamp(this.fontSize * this.scale, lowFontSize, highFontSize);\r\n\r\n                let minFont = null,\r\n                    minFontDelta = Number.MAX_VALUE;\r\n                do {\r\n                    const realFontSize = this.fontSize;\r\n                    this._fontSize = this.trueFontSize;\r\n                    const font = makeFont(this);\r\n                    this._fontSize = realFontSize;\r\n\r\n                    this.g.textAlign = \"center\";\r\n                    this.g.textBaseline = \"middle\";\r\n                    this.g.font = font;\r\n\r\n                    this.trueWidth = 0;\r\n                    this.trueHeight = 0;\r\n                    for (const line of lines) {\r\n                        const metrics = this.g.measureText(line);\r\n                        this.trueWidth = Math.max(this.trueWidth, metrics.width);\r\n                        this.trueHeight += this.trueFontSize;\r\n                        if (isNumber(metrics.actualBoundingBoxLeft)\r\n                            && isNumber(metrics.actualBoundingBoxRight)\r\n                            && isNumber(metrics.actualBoundingBoxAscent)\r\n                            && isNumber(metrics.actualBoundingBoxDescent)) {\r\n                            if (!autoResize) {\r\n                                this.trueWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                                this.trueHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                                this.dx = (metrics.actualBoundingBoxLeft - this.trueWidth / 2) / 2;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (autoResize) {\r\n                        const dMinWidth = this.trueWidth - targetMinWidth;\r\n                        const dMaxWidth = this.trueWidth - targetMaxWidth;\r\n                        const dMinHeight = this.trueHeight - targetMinHeight;\r\n                        const dMaxHeight = this.trueHeight - targetMaxHeight;\r\n\r\n                        const mdMinWidth = Math.abs(dMinWidth);\r\n                        const mdMaxWidth = Math.abs(dMaxWidth);\r\n                        const mdMinHeight = Math.abs(dMinHeight);\r\n                        const mdMaxHeight = Math.abs(dMaxHeight);\r\n\r\n                        tooBig = dMaxWidth > 1 || dMaxHeight > 1;\r\n                        tooSmall = dMinWidth < -1 && dMinHeight < -1;\r\n\r\n                        const minDif = Math.min(mdMinWidth, Math.min(mdMaxWidth, Math.min(mdMinHeight, mdMaxHeight)));\r\n                        if (minDif < minFontDelta) {\r\n                            minFontDelta = minDif;\r\n                            minFont = this.g.font;\r\n                        }\r\n\r\n                        if ((tooBig || tooSmall)\r\n                            && tried.indexOf(this.g.font) > -1\r\n                            && minFont) {\r\n                            this.g.font = minFont;\r\n                            tooBig = false;\r\n                            tooSmall = false;\r\n                        }\r\n\r\n                        if (tooBig) {\r\n                            highFontSize = this.trueFontSize;\r\n                            this.trueFontSize = (lowFontSize + this.trueFontSize) / 2;\r\n                        }\r\n                        else if (tooSmall) {\r\n                            lowFontSize = this.trueFontSize;\r\n                            this.trueFontSize = (this.trueFontSize + highFontSize) / 2;\r\n                        }\r\n                    }\r\n\r\n                    tried.push(this.g.font);\r\n                } while (tooBig || tooSmall);\r\n\r\n                if (autoResize) {\r\n                    if (this.trueWidth < targetMinWidth) {\r\n                        this.trueWidth = targetMinWidth;\r\n                    }\r\n                    else if (this.trueWidth > targetMaxWidth) {\r\n                        this.trueWidth = targetMaxWidth;\r\n                    }\r\n\r\n                    if (this.trueHeight < targetMinHeight) {\r\n                        this.trueHeight = targetMinHeight;\r\n                    }\r\n                    else if (this.trueHeight > targetMaxHeight) {\r\n                        this.trueHeight = targetMaxHeight;\r\n                    }\r\n                }\r\n\r\n                const newW = this.trueWidth + this.scale * (this.padding.right + this.padding.left);\r\n                const newH = this.trueHeight + this.scale * (this.padding.top + this.padding.bottom);\r\n                try {\r\n                    setContextSize(this.g, newW, newH);\r\n                }\r\n                catch (exp) {\r\n                    console.error(exp);\r\n                    throw exp;\r\n                }\r\n            }\r\n\r\n            if (this.bgFillColor) {\r\n                this.g.fillStyle = this.bgFillColor;\r\n                this.g.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n            }\r\n            else {\r\n                this.g.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            }\r\n\r\n            if (this.textStrokeColor && this.textStrokeSize) {\r\n                this.g.lineWidth = this.textStrokeSize * this.scale;\r\n                this.g.strokeStyle = this.textStrokeColor;\r\n            }\r\n\r\n            if (this.textFillColor) {\r\n                this.g.fillStyle = this.textFillColor;\r\n            }\r\n\r\n            const di = 0.5 * (lines.length - 1);\r\n\r\n            for (let i = 0; i < lines.length; ++i) {\r\n                const line = lines[i];\r\n                const dy = (i - di) * this.trueFontSize;\r\n                const x = this.dx + this.trueWidth / 2 + this.scale * this.padding.left;\r\n                const y = dy + this.trueHeight / 2 + this.scale * this.padding.top;\r\n\r\n                if (this.textStrokeColor && this.textStrokeSize) {\r\n                    this.g.strokeText(line, x, y);\r\n                }\r\n\r\n                if (this.textFillColor) {\r\n                    this.g.fillText(line, x, y);\r\n                }\r\n            }\r\n\r\n            if (this.bgStrokeColor && this.bgStrokeSize) {\r\n                this.g.strokeStyle = this.bgStrokeColor;\r\n                this.g.lineWidth = this.bgStrokeSize * this.scale;\r\n                const s = this.bgStrokeSize / 2;\r\n                this.g.strokeRect(s, s, this.canvas.width - this.bgStrokeSize, this.canvas.height - this.bgStrokeSize);\r\n            }\r\n\r\n            if (isVertical) {\r\n                const canv = createUtilityCanvas(this.canvas.height, this.canvas.width);\r\n                const g = canv.getContext(\"2d\") as Context2D;\r\n                if (g) {\r\n                    g.translate(canv.width / 2, canv.height / 2);\r\n                    if (this.textDirection === \"vertical\"\r\n                        || this.textDirection === \"vertical-left\") {\r\n                        g.rotate(HalfPi);\r\n                    }\r\n                    else if (this.textDirection === \"vertical-right\") {\r\n                        g.rotate(-HalfPi);\r\n                    }\r\n                    g.translate(-this.canvas.width / 2, -this.canvas.height / 2);\r\n                    g.drawImage(this.canvas, 0, 0);\r\n                    setContextSize(this.g, canv.width, canv.height);\r\n                }\r\n                else {\r\n                    console.warn(\"Couldn't rotate the TextImage\");\r\n                }\r\n                this.g.drawImage(canv, 0, 0);\r\n            }\r\n\r\n            this.lastValue = this.value;\r\n            return true;\r\n        }\r\n        else {\r\n            const changed = this.value !== this.lastValue;\r\n            this.lastValue = this.value;\r\n            return changed;\r\n        }\r\n\r\n    }\r\n}", "import { isHTMLCanvas } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { elementIsDisplayed, elementSetDisplay } from \"@juniper-lib/dom/dist/tags\";\r\nimport type { CanvasImage } from \"@juniper-lib/graphics2d/dist/CanvasImage\";\r\nimport { MeshBasicMaterialParameters } from \"three\";\r\nimport { BaseEnvironment } from \"../environment/BaseEnvironment\";\r\nimport { objectSetVisible } from \"../objects\";\r\nimport { Image2D, WebXRLayerType } from \"./Image2D\";\r\nimport type { IWidget } from \"./widgets\";\r\n\r\nconst redrawnEvt = { type: \"redrawn\" };\r\n\r\nexport class CanvasImageMesh<T extends CanvasImage>\r\n    extends Image2D\r\n    implements IWidget {\r\n\r\n    private _image: T = null;\r\n\r\n    get object() {\r\n        return this;\r\n    }\r\n\r\n    get element() {\r\n        if (isHTMLCanvas(this.image.canvas)) {\r\n            return this.image.canvas;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get canvas() {\r\n        return this._image.canvas;\r\n    }\r\n\r\n    constructor(env: BaseEnvironment, name: string, webXRLayerType: WebXRLayerType, image: T, materialOptions?: MeshBasicMaterialParameters) {\r\n        super(env, name, webXRLayerType, materialOptions);\r\n        this.image = image;\r\n    }\r\n\r\n    protected onRedrawn() {\r\n        this.updateTexture();\r\n        this.dispatchEvent(redrawnEvt);\r\n    }\r\n\r\n    get image(): T {\r\n        return this._image;\r\n    }\r\n\r\n    set image(v: T) {\r\n        if (this.image) {\r\n            this.image.removeScope(this);\r\n        }\r\n\r\n        this._image = v;\r\n\r\n        if (this.image) {\r\n            this.image.addScopedEventListener(this, \"redrawn\", () => this.onRedrawn());\r\n            this.setTextureMap(this.image.canvas);\r\n            this.onRedrawn();\r\n        }\r\n    }\r\n\r\n    override get imageWidth() {\r\n        return this.image.width;\r\n    }\r\n\r\n    override get imageHeight() {\r\n        return this.image.height;\r\n    }\r\n\r\n    override copy(source: this, recursive = true): this {\r\n        super.copy(source, recursive);\r\n        this.image = source.image;\r\n        return this;\r\n    }\r\n\r\n    get isVisible() {\r\n        return elementIsDisplayed(this);\r\n    }\r\n\r\n    set isVisible(v) {\r\n        elementSetDisplay(this, v, \"inline-block\");\r\n        objectSetVisible(this, v);\r\n        objectSetVisible(this.mesh, v);\r\n        this.image.visible = v;\r\n    }\r\n}\r\n", "import { TextImage, TextImageOptions } from \"@juniper-lib/graphics2d/dist/TextImage\";\r\nimport { MeshBasicMaterialParameters } from \"three\";\r\nimport { BaseEnvironment } from \"../environment/BaseEnvironment\";\r\nimport { CanvasImageMesh } from \"./CanvasImageMesh\";\r\nimport { WebXRLayerType } from \"./Image2D\";\r\n\r\n\r\nexport class TextMesh extends CanvasImageMesh<TextImage> {\r\n    constructor(env: BaseEnvironment, name: string, webXRLayerType: WebXRLayerType, textOptions: TextImage | Partial<TextImageOptions>, materialOptions?: MeshBasicMaterialParameters) {\r\n        let image: TextImage;\r\n        if (textOptions instanceof TextImage) {\r\n            image = textOptions;\r\n        }\r\n        else {\r\n            image = new TextImage(textOptions);\r\n        }\r\n\r\n        super(env, name, webXRLayerType, image, materialOptions);\r\n    }\r\n\r\n    protected override onRedrawn() {\r\n        this.objectHeight = this.imageHeight;\r\n        super.onRedrawn();\r\n    }\r\n}", "import { arrayRemove } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { TypedEventTarget } from \"@juniper-lib/events/dist/TypedEventTarget\";\r\nimport { Mesh, Object3D } from \"three\";\r\nimport { ErsatzObject, objectIsFullyVisible, objectResolve, Objects } from \"../objects\";\r\nimport { Pointer3DEvents } from \"./devices/Pointer3DEvent\";\r\n\r\nconst RAY_TARGET_KEY = \"Juniper:ThreeJS:EventSystem:RayTarget\";\r\n\r\nexport class RayTarget<EventsT = void>\r\n    extends TypedEventTarget<EventsT & Pointer3DEvents>\r\n    implements ErsatzObject {\r\n\r\n    readonly meshes = new Array<Mesh>();\r\n\r\n    private _disabled = false;\r\n    private _clickable = false;\r\n    private _draggable = false;\r\n    private _navigable = false;\r\n\r\n    constructor(public readonly object: Object3D) {\r\n        super();\r\n        this.object.userData[RAY_TARGET_KEY] = this;\r\n    }\r\n\r\n    addMesh(mesh: Mesh): this {\r\n        mesh.userData[RAY_TARGET_KEY] = this;\r\n        this.meshes.push(mesh);\r\n        return this;\r\n    }\r\n\r\n    removeMesh(mesh: Mesh): this {\r\n        if (arrayRemove(this.meshes, mesh)) {\r\n            delete mesh.userData[RAY_TARGET_KEY];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    addMeshes(...meshes: Mesh[]): this {\r\n        for (const mesh of meshes) {\r\n            this.addMesh(mesh);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    removeMeshes(...meshes: Mesh[]): this {\r\n        for (const mesh of meshes) {\r\n            this.removeMesh(mesh);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(v) {\r\n        this._disabled = v;\r\n    }\r\n\r\n    get enabled() {\r\n        return !this.disabled;\r\n    }\r\n\r\n    set enabled(v) {\r\n        this.disabled = !v;\r\n    }\r\n\r\n    get clickable() {\r\n        return this._clickable;\r\n    }\r\n\r\n    set clickable(v) {\r\n        this._clickable = v;\r\n    }\r\n\r\n    get draggable() {\r\n        return this._draggable;\r\n    }\r\n\r\n    set draggable(v) {\r\n        this._draggable = v;\r\n    }\r\n\r\n    get navigable() {\r\n        return this._navigable;\r\n    }\r\n\r\n    set navigable(v) {\r\n        this._navigable = v;\r\n    }\r\n}\r\n\r\nexport function isRayTarget<T = void>(obj: Objects): obj is RayTarget<T> {\r\n    return obj instanceof RayTarget;\r\n}\r\n\r\nexport function getRayTarget<T = void>(obj: Objects): RayTarget<T> {\r\n    let target: RayTarget<T> = null;\r\n    if (obj) {\r\n        if (isRayTarget<T>(obj)) {\r\n            target = obj;\r\n        }\r\n        else {\r\n            obj = objectResolve(obj);\r\n            if (obj) {\r\n                target = obj.userData[RAY_TARGET_KEY] as RayTarget<T>;\r\n            }\r\n        }\r\n\r\n        if (target && !objectIsFullyVisible(target)) {\r\n            target = null;\r\n        }\r\n    }\r\n\r\n    return target;\r\n}", "import { scaleOnHover } from \"../animation/scaleOnHover\";\r\nimport { RayTarget } from \"../eventSystem/RayTarget\";\r\nimport { obj, objGraph } from \"../objects\";\r\nimport { Image2D } from \"../widgets/Image2D\";\r\n\r\nexport class MenuItem extends RayTarget {\r\n    startX = 0;\r\n\r\n    constructor(width: number, height: number,\r\n        name: string,\r\n        public readonly front: Image2D,\r\n        public readonly back: Image2D) {\r\n        super(obj(`MenuItem-${name}`));\r\n\r\n        if (this.back) {\r\n            this.back = back;\r\n            this.back.renderOrder = 0;\r\n            this.back.position.z = -0.05;\r\n            this.addMesh(this.back.mesh);\r\n        }\r\n\r\n        if (this.front) {\r\n            this.front = front;\r\n            this.front.renderOrder = 5;\r\n\r\n            if (!this.back) {\r\n                this.addMesh(this.front.mesh);\r\n            }\r\n        }\r\n\r\n        this.back.scale.x = width;\r\n        this.back.scale.y = height;\r\n\r\n        objGraph(this, this.back, this.front);\r\n    }\r\n\r\n    override get disabled() {\r\n        return super.disabled;\r\n    }\r\n\r\n    override set disabled(v) {\r\n        if (v !== this.disabled) {\r\n            super.disabled = v;\r\n            this.updateHover();\r\n        }\r\n    }\r\n\r\n    override get clickable() {\r\n        return super.clickable;\r\n    }\r\n\r\n    override set clickable(v) {\r\n        if (v !== this.clickable) {\r\n            super.clickable = v;\r\n            this.updateHover();\r\n        }\r\n    }\r\n\r\n    private updateHover() {\r\n        scaleOnHover(this, this.clickable && this.enabled);\r\n    }\r\n\r\n    get width() {\r\n        return this.back.scale.x;\r\n    }\r\n\r\n    get height() {\r\n        return this.back.scale.y;\r\n    }\r\n}", "import type { FontDescription } from \"@juniper-lib/dom/dist/fonts\";\r\nimport { loadFont } from \"@juniper-lib/dom/dist/fonts\";\r\nimport { AssetImage } from \"@juniper-lib/fetcher/dist/Asset\";\r\nimport { unwrapResponse } from \"@juniper-lib/fetcher/dist/unwrapResponse\";\r\nimport { Animator } from \"@juniper-lib/graphics2d/dist/animation/Animator\";\r\nimport { bump } from \"@juniper-lib/graphics2d/dist/animation/tween\";\r\nimport { TextDirection, TextImageOptions } from \"@juniper-lib/graphics2d/dist/TextImage\";\r\nimport { Image_Jpeg, Image_Png } from \"@juniper-lib/mediatypes\";\r\nimport { arrayReplace } from \"@juniper-lib/collections/dist/arrays\";\r\nimport { clamp } from \"@juniper-lib/tslib/dist/math\";\r\nimport { IProgress } from \"@juniper-lib/progress/dist/IProgress\";\r\nimport { progressOfArray } from \"@juniper-lib/progress/dist/progressOfArray\";\r\nimport { progressTasksWeighted } from \"@juniper-lib/progress/dist/progressTasks\";\r\nimport { isFunction, isGoodNumber, isString } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { Object3D, Vector3 } from \"three\";\r\nimport type { BaseEnvironment } from \"../environment/BaseEnvironment\";\r\nimport { objGraph } from \"../objects\";\r\nimport { Image2D } from \"../widgets/Image2D\";\r\nimport { TextMesh } from \"../widgets/TextMesh\";\r\nimport { MenuItem } from \"./MenuItem\";\r\n\r\nconst zero = new Vector3(0, 0, 0);\r\nconst PAGE_SIZE = 5;\r\n\r\nexport type MenuImagesCollection = {\r\n    backButton: string;\r\n    defaultButton: string;\r\n    title: string,\r\n    logo: {\r\n        front?: string;\r\n        back: string;\r\n    };\r\n};\r\n\r\nexport interface MenuItemDescription {\r\n    name: string;\r\n    text?: string;\r\n    filePath?: string;\r\n    front?: (Image2D | TextMesh) & {\r\n        width?: number;\r\n    };\r\n    noLabel?: boolean;\r\n    back?: Image2D;\r\n    width?: number;\r\n    height?: number;\r\n    textPosition?: string;\r\n    textDirection?: TextDirection;\r\n    enabled?: boolean;\r\n    clickable?: boolean;\r\n}\r\n\r\nexport interface MenuDescription {\r\n    images: MenuImagesCollection;\r\n    font: FontDescription;\r\n}\r\n\r\ntype menuItemCallback<T extends MenuItemDescription> = (item: T) => void;\r\n\r\nexport class Menu extends Object3D {\r\n    private readonly logo: MenuItemDescription = null;\r\n    private readonly backButton: MenuItemDescription;\r\n    private readonly nextButton: MenuItemDescription;\r\n    private readonly prevButton: MenuItemDescription;\r\n    private readonly menuTitle: MenuItemDescription;\r\n    private readonly defaultButtonImage: Image2D;\r\n    private readonly animator = new Animator();\r\n    private readonly lastMenuIndex = new Map<number, number>();\r\n    private readonly buttons = new Array<MenuItem>();\r\n\r\n    private menuFont: FontDescription = null;\r\n    private curBlowout: Promise<void> = Promise.resolve();\r\n\r\n    constructor(private readonly env: BaseEnvironment<unknown>) {\r\n        super();\r\n\r\n        this.name = \"Menu\";\r\n\r\n        this.defaultButtonImage = new Image2D(this.env, \"DefaultButton\", \"none\");\r\n\r\n        this.logo = {\r\n            name: \"Logo\",\r\n            noLabel: true,\r\n            back: new Image2D(this.env, \"LogoBack\", \"none\"),\r\n            width: 1,\r\n            clickable: false\r\n        };\r\n\r\n        this.backButton = {\r\n            name: \"Back\",\r\n            back: new Image2D(this.env, \"BackButton\", \"none\")\r\n        };\r\n\r\n        this.nextButton = {\r\n            name: \"Next\",\r\n            back: new Image2D(this.env, \"NextButton\", \"none\"),\r\n            width: 0.25,\r\n            textDirection: \"vertical\",\r\n            textPosition: \"middle\",\r\n            enabled: true\r\n        };\r\n\r\n        this.prevButton = {\r\n            name: \"Previous\",\r\n            back: new Image2D(this.env, \"PrevButton\", \"none\"),\r\n            width: 0.25,\r\n            height: 1,\r\n            textDirection: \"vertical\",\r\n            textPosition: \"top\",\r\n            enabled: true\r\n        };\r\n\r\n        this.menuTitle = {\r\n            name: \"Menu\",\r\n            back: new Image2D(this.env, \"MenuTitle\", \"none\"),\r\n            width: 0.25,\r\n            textDirection: \"vertical\",\r\n            textPosition: \"top\",\r\n            clickable: false\r\n        };\r\n    }\r\n\r\n    async load(description: MenuDescription, prog?: IProgress) {\r\n        this.menuFont = description.font;\r\n\r\n        const imgs = description.images;\r\n        const backButtonAsset = new AssetImage(imgs.backButton, Image_Jpeg, !this.env.DEBUG);\r\n        const defaultButtonAsset = new AssetImage(imgs.defaultButton, Image_Jpeg, !this.env.DEBUG);\r\n        const titleAsset = new AssetImage(imgs.title, Image_Jpeg, !this.env.DEBUG);\r\n        const logoBackAsset = new AssetImage(imgs.logo.back, Image_Png, !this.env.DEBUG);\r\n        let logoFrontAsset: AssetImage = null;\r\n\r\n        if (imgs.logo.front) {\r\n            logoFrontAsset = new AssetImage(imgs.logo.front, Image_Png, !this.env.DEBUG);\r\n            this.logo.front = new Image2D(this.env, \"LogoFront\", \"none\", { transparent: true });\r\n        }\r\n\r\n        await progressTasksWeighted(prog, [\r\n            [1, (prog) => loadFont(this.menuFont, null, prog)],\r\n            [5, (prog) => this.env.fetcher.assets(prog,\r\n                backButtonAsset,\r\n                defaultButtonAsset,\r\n                titleAsset,\r\n                logoBackAsset,\r\n                logoFrontAsset)]\r\n        ]);\r\n\r\n        this.backButton.back.setTextureMap(backButtonAsset.result);\r\n        this.defaultButtonImage.setTextureMap(defaultButtonAsset.result);\r\n        this.menuTitle.back.setTextureMap(titleAsset.result);\r\n        this.nextButton.back.setTextureMap(titleAsset.result);\r\n        this.prevButton.back.setTextureMap(titleAsset.result);\r\n        this.logo.back.setTextureMap(logoBackAsset.result);\r\n\r\n        if (imgs.logo.front) {\r\n            this.logo.front.setTextureMap(logoFrontAsset.result);\r\n            this.logo.front.width = 1;\r\n        }\r\n    }\r\n\r\n    async showMenu<T extends MenuItemDescription>(\r\n        menuID: number,\r\n        title: string,\r\n        items: MenuItemDescription[],\r\n        onClick: menuItemCallback<T>,\r\n        onBack: () => void,\r\n        prog?: IProgress) {\r\n\r\n        let pageSize = PAGE_SIZE;\r\n        do {\r\n            const rem = items.length % pageSize;\r\n            if (rem === 0\r\n                || rem === pageSize - 1\r\n                || pageSize === Math.ceil(PAGE_SIZE / 2)) {\r\n                break;\r\n            }\r\n            else {\r\n                --pageSize;\r\n            }\r\n        } while (true);\r\n\r\n        const index = this.lastMenuIndex.get(menuID) || 0;\r\n\r\n        await this.showMenuInternal(menuID, title, items, pageSize, index, onClick, onBack, prog);\r\n    }\r\n\r\n\r\n    private disableAll(): void {\r\n        setTimeout(() => {\r\n            for (const button of this.buttons) {\r\n                button.disabled = true;\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    private async showMenuInternal<T extends MenuItemDescription>(\r\n        menuID: number,\r\n        title: string,\r\n        items: MenuItemDescription[],\r\n        pageSize: number,\r\n        index: number,\r\n        onClick: menuItemCallback<T>,\r\n        onBack: () => void,\r\n        prog?: IProgress) {\r\n\r\n        this.lastMenuIndex.set(menuID, index);\r\n\r\n        await this.curBlowout;\r\n\r\n        this.clear();\r\n\r\n        this.menuTitle.text = title;\r\n\r\n        const displayItems = [this.logo, this.menuTitle];\r\n\r\n        if (index > 0) {\r\n            displayItems.push(this.prevButton);\r\n        }\r\n\r\n        displayItems.push(...items.slice(index, index + Math.min(pageSize, items.length - index)));\r\n\r\n        if (index < items.length - pageSize) {\r\n            displayItems.push(this.nextButton);\r\n        }\r\n\r\n        const oldOnClick = onClick;\r\n        onClick = (item: T) => {\r\n            this.disableAll();\r\n            oldOnClick(item);\r\n        };\r\n\r\n        if (onBack) {\r\n            displayItems.push(this.backButton);\r\n\r\n            const oldOnBack = onBack;\r\n            onBack = () => {\r\n                this.disableAll();\r\n                oldOnBack();\r\n            };\r\n        }\r\n\r\n        const onPrev = () => {\r\n            this.disableAll();\r\n            this.showMenuInternal(menuID, title, items, pageSize, index - pageSize, onClick, onBack);\r\n        };\r\n\r\n        const onNext = () => {\r\n            this.disableAll();\r\n            this.showMenuInternal(menuID, title, items, pageSize, index + pageSize, onClick, onBack);\r\n        };\r\n\r\n        const buttons = await progressOfArray(prog, displayItems, (item: MenuItemDescription, prog: IProgress) => {\r\n            if (item === this.backButton) {\r\n                return this.createMenuItem(item, onBack, prog);\r\n            }\r\n            else if (item === this.prevButton) {\r\n                return this.createMenuItem(item, onPrev, prog);\r\n            }\r\n            else if (item === this.nextButton) {\r\n                return this.createMenuItem(item, onNext, prog);\r\n            }\r\n            else {\r\n                return this.createMenuItem(item, onClick, prog);\r\n            }\r\n        });\r\n        arrayReplace(this.buttons, ...buttons);\r\n\r\n        const space = 0.05;\r\n        const radius = 3;\r\n        const midPoint = (this.buttons.length - 1) / 2;\r\n        const l = Math.ceil(midPoint);\r\n        const r = Math.floor(midPoint + 1);\r\n        const left = this.buttons.slice(0, l).reverse();\r\n        const mid = this.buttons.slice(l, r);\r\n        const right = this.buttons.slice(r, this.buttons.length);\r\n\r\n        let midWidth = 0;\r\n        let a = 0;\r\n        for (const button of mid) {\r\n            midWidth += button.width + space;\r\n            this.setButtonPosition(button, a, radius);\r\n        }\r\n\r\n        midWidth /= 2;\r\n\r\n        a = -midWidth / radius;\r\n        for (const button of left) {\r\n            a -= 0.5 * (button.width + space) / radius;\r\n            this.setButtonPosition(button, a, radius);\r\n            a -= 0.5 * (button.width + space) / radius;\r\n        }\r\n\r\n        a = midWidth / radius;\r\n        for (const button of right) {\r\n            a += 0.5 * (button.width + space) / radius;\r\n            this.setButtonPosition(button, a, radius);\r\n            a += 0.5 * (button.width + space) / radius;\r\n        }\r\n\r\n        objGraph(this, ...this.buttons);\r\n\r\n        await this.blowOut(false);\r\n\r\n        for (const button of this.buttons) {\r\n            button.back.frustumCulled = true;\r\n        }\r\n    }\r\n\r\n    update(dt: number): void {\r\n        this.animator.update(dt);\r\n    }\r\n\r\n    private setButtonPosition(button: MenuItem, a: number, radius: number) {\r\n        const x = radius * Math.sin(a);\r\n        const z = -radius * Math.cos(a);\r\n        button.object.position.set(x, 0, z);\r\n        button.object.lookAt(zero);\r\n        button.startX = x;\r\n        button.object.position.x = x - 10;\r\n    }\r\n\r\n    private async createMenuItem(item: MenuItemDescription, onClick?: menuItemCallback<MenuItemDescription> | Function, prog?: IProgress): Promise<MenuItem> {\r\n\r\n        if (!item.back) {\r\n            if (item.filePath) {\r\n                item.back = new Image2D(this.env, `${item.name}-Background`, \"none\");\r\n                const img = await this.env.fetcher\r\n                    .get(item.filePath)\r\n                    .progress(prog)\r\n                    .image()\r\n                    .then(unwrapResponse);\r\n                item.back.setTextureMap(img);\r\n            }\r\n            else {\r\n                item.back = this.defaultButtonImage.clone() as Image2D;\r\n            }\r\n            item.back.frustumCulled = false;\r\n        }\r\n\r\n        if (!isGoodNumber(item.width)) {\r\n            item.width = 0.5;\r\n        }\r\n\r\n        if (!isGoodNumber(item.height)) {\r\n            item.height = 1;\r\n        }\r\n\r\n        if (!isString(item.textDirection)) {\r\n            item.textDirection = \"horizontal\";\r\n        }\r\n\r\n        if (!isString(item.textPosition)) {\r\n            item.textPosition = \"bottom\";\r\n        }\r\n\r\n        if (!isString(item.text)) {\r\n            item.text = item.name;\r\n        }\r\n\r\n        const enabled = item.enabled !== false;\r\n\r\n        if (item.text.length > 0) {\r\n            if (!item.front && !item.noLabel) {\r\n                const options: Partial<TextImageOptions> = {\r\n                    textFillColor: enabled ? \"white\" : \"dimgray\",\r\n                    textDirection: item.textDirection,\r\n                    padding: {\r\n                        top: 0.025,\r\n                        right: 0.05,\r\n                        bottom: 0.025,\r\n                        left: 0.05\r\n                    },\r\n                    scale: 400,\r\n                    fontFamily: this.menuFont.fontFamily,\r\n                    fontSize: this.menuFont.fontSize,\r\n                    fontStyle: this.menuFont.fontStyle,\r\n                    fontVariant: this.menuFont.fontVariant,\r\n                    fontWeight: this.menuFont.fontWeight,\r\n                    maxWidth: item.width,\r\n                    maxHeight: item.height\r\n                };\r\n                const img = new TextMesh(this.env, item.text, \"none\", options);\r\n\r\n                img.mesh.renderOrder = 1;\r\n\r\n                img.addEventListener(\"redrawn\", () => {\r\n                    const y = (img.image.height - item.height + 0.025) / 2;\r\n                    if (item.textPosition === \"bottom\") {\r\n                        img.position.y = y;\r\n                    }\r\n                    else {\r\n                        img.position.y = -y;\r\n                    }\r\n                });\r\n\r\n                img.position.z = -0.01;\r\n\r\n                item.front = img;\r\n            }\r\n\r\n            if (item.front) {\r\n                item.front.frustumCulled = false;\r\n\r\n                if (item.front instanceof TextMesh) {\r\n                    item.front.image.value = item.text;\r\n                }\r\n            }\r\n        }\r\n\r\n        const button = new MenuItem(\r\n            item.width,\r\n            item.height,\r\n            item.name,\r\n            item.front,\r\n            item.back);\r\n\r\n        button.clickable = item.clickable !== false;\r\n        button.enabled = enabled;\r\n\r\n        if (button.clickable\r\n            && isFunction(onClick)) {\r\n            button.addEventListener(\"click\", () => {\r\n                this.curBlowout = this.blowOut(true);\r\n                onClick(item);\r\n            });\r\n        }\r\n\r\n        if (prog) {\r\n            prog.end(\"button loaded\");\r\n        }\r\n\r\n        return button;\r\n    }\r\n\r\n    private async blowOut(d: boolean) {\r\n        await Promise.all(this.buttons.map((child, i) =>\r\n            this.blowOutChild(child, i, d)));\r\n        this.animator.clear();\r\n    }\r\n\r\n    private async blowOutChild(child: MenuItem, i: number, d: boolean): Promise<void> {\r\n        const wasDisabled = child.disabled;\r\n        child.disabled = true;\r\n\r\n        await this.animator.start(0.125 * i, 0.5, (t: number) => {\r\n            const st = clamp(d ? t : (1 - t), 0, 1);\r\n            child.object.position.x = child.startX - 10 * bump(st, 0.15);\r\n        });\r\n\r\n        child.disabled = wasDisabled;\r\n    }\r\n}", "import { ElementChild, elementIsDisplayed, elementRemoveFromParent, elementSetDisplay, ErsatzElement } from \"@juniper-lib/dom/dist/tags\";\r\nimport {\r\n    HtmlRender,\r\n    elementClearChildren,\r\n    isElementChild,\r\n    isErsatzElement\r\n} from \"@juniper-lib/dom/dist/tags\";\r\nimport { Object3D } from \"three\";\r\nimport { ErsatzObject, Objects, objRemoveFromParent } from \"../objects\";\r\nimport {\r\n    isErsatzObject,\r\n    isObjects,\r\n    objectClearChildren,\r\n    objectSetEnabled,\r\n    objGraph\r\n} from \"../objects\";\r\n\r\nexport interface IWidget<T extends HTMLElement = HTMLElement> extends ErsatzElement<T>, ErsatzObject {\r\n    name: string;\r\n    visible: boolean;\r\n}\r\n\r\nexport function isWidget(obj: any): obj is IWidget {\r\n    return isErsatzElement(obj)\r\n        && isErsatzObject(obj);\r\n}\r\n\r\nexport type WidgetChild = IWidget\r\n    | ElementChild\r\n    | Objects;\r\n\r\nexport function widgetSetEnabled(obj: IWidget, enabled: boolean) {\r\n    if (obj.element instanceof HTMLButtonElement) {\r\n        obj.element.disabled = !enabled;\r\n    }\r\n\r\n    objectSetEnabled(obj, enabled);\r\n}\r\n\r\nexport function widgetApply(obj: IWidget, ...children: WidgetChild[]): void {\r\n    HtmlRender(obj, ...children.filter(isElementChild));\r\n    objGraph(obj, ...children.filter(isObjects));\r\n}\r\n\r\nexport function widgetRemoveFromParent(obj: IWidget): void {\r\n    elementRemoveFromParent(obj);\r\n    objRemoveFromParent(obj);\r\n}\r\n\r\nexport function widgetClearChildren(obj: IWidget) {\r\n    elementClearChildren(obj.element);\r\n    objectClearChildren(obj.object);\r\n}\r\n\r\n\r\nexport class Widget<T extends HTMLElement = HTMLElement> implements IWidget<T>, EventTarget {\r\n    constructor(readonly element: T,\r\n        readonly object: Object3D,\r\n        private readonly displayType: CssGlobalValue | CssDisplayValue) {\r\n    }\r\n\r\n    get name() {\r\n        return this.object.name;\r\n    }\r\n\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        this.element.addEventListener(type, listener, options);\r\n    }\r\n\r\n    dispatchEvent(event: Event): boolean {\r\n        return this.element.dispatchEvent(event);\r\n    }\r\n\r\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\r\n        this.element.removeEventListener(type, callback, options);\r\n    }\r\n\r\n    click() {\r\n        this.element.click();\r\n    }\r\n\r\n    get visible() {\r\n        return elementIsDisplayed(this);\r\n    }\r\n\r\n    set visible(visible) {\r\n        elementSetDisplay(this, visible, this.displayType);\r\n        this.object.visible = visible;\r\n    }\r\n}\r\n", "import { Src, Title_attr } from \"@juniper-lib/dom/dist/attrs\";\r\nimport { ButtonPrimary, Img } from \"@juniper-lib/dom/dist/tags\";\r\nimport { obj, objGraph, objectSetVisible } from \"../objects\";\r\nimport { ButtonFactory } from \"./ButtonFactory\";\r\nimport { MeshButton } from \"./MeshButton\";\r\nimport { Widget } from \"./widgets\";\r\n\r\nexport class ButtonImageWidget extends Widget<HTMLButtonElement> {\r\n\r\n    private mesh: MeshButton = null;\r\n\r\n    constructor(buttons: ButtonFactory, setName: string, iconName: string) {\r\n        const t = Title_attr(`${setName} ${iconName}`);\r\n        super(\r\n            ButtonPrimary(\r\n                t,\r\n                Img(t, Src(buttons.getImageSrc(setName, iconName)))\r\n            ),\r\n            obj(`${name}-button`),\r\n            \"inline-block\");\r\n        this.load(buttons, setName, iconName);\r\n    }\r\n\r\n    private async load(buttons: ButtonFactory, setName: string, iconName: string) {\r\n        this.mesh = await buttons.getMeshButton(setName, iconName, 0.2);\r\n        this.mesh.disabled = this.disabled;\r\n        objGraph(this, this.mesh);\r\n        this.mesh.object.visible = this.visible;\r\n        this.mesh.addEventListener(\"click\", () => {\r\n            this.element.click();\r\n        });\r\n    }\r\n\r\n    get disabled() {\r\n        return this.element.disabled;\r\n    }\r\n\r\n    set disabled(v) {\r\n        this.element.disabled = v;\r\n        if (this.mesh) {\r\n            this.mesh.disabled = v;\r\n        }\r\n    }\r\n\r\n    override get visible(): boolean {\r\n        return super.visible;\r\n    }\r\n\r\n    override set visible(v: boolean) {\r\n        super.visible = v;\r\n        if (this.mesh) {\r\n            objectSetVisible(this.mesh, v);\r\n        }\r\n    }\r\n}\r\n", "import { PriorityList } from \"@juniper-lib/collections/dist/PriorityList\";\r\nimport { TreeNode, buildTree } from \"@juniper-lib/collections/dist/TreeNode\";\r\nimport { makeLookup } from \"@juniper-lib/collections/dist/makeLookup\";\r\nimport { CanvasImageTypes } from \"@juniper-lib/dom/dist/canvas\";\r\nimport { HtmlRender } from \"@juniper-lib/dom/dist/tags\";\r\nimport { TypedEvent } from \"@juniper-lib/events/dist/TypedEventTarget\";\r\nimport { unwrapResponse } from \"@juniper-lib/fetcher/dist/unwrapResponse\";\r\nimport { IProgress } from \"@juniper-lib/progress/dist/IProgress\";\r\nimport { progressOfArray } from \"@juniper-lib/progress/dist/progressOfArray\";\r\nimport { progressSplitWeighted } from \"@juniper-lib/progress/dist/progressSplit\";\r\nimport { progressTasksWeighted } from \"@juniper-lib/progress/dist/progressTasks\";\r\nimport { cleanup } from \"@juniper-lib/threejs/dist/cleanup\";\r\nimport { Application, ApplicationEvents } from \"@juniper-lib/threejs/dist/environment/Application\";\r\nimport type { Environment } from \"@juniper-lib/threejs/dist/environment/Environment\";\r\nimport { Menu, MenuDescription, MenuItemDescription } from \"@juniper-lib/threejs/dist/menu/Menu\";\r\nimport { objGraph } from \"@juniper-lib/threejs/dist/objects\";\r\nimport { ButtonImageWidget } from \"@juniper-lib/threejs/dist/widgets/ButtonImageWidget\";\r\nimport { Image2D } from \"@juniper-lib/threejs/dist/widgets/Image2D\";\r\nimport { widgetSetEnabled } from \"@juniper-lib/threejs/dist/widgets/widgets\";\r\nimport { isDefined, isNullOrUndefined } from \"@juniper-lib/tslib/dist/typeChecks\";\r\nimport { dispose } from \"@juniper-lib/tslib/dist/using\";\r\nimport { MenuItemData } from \"../yarrow/data\";\r\n\r\ntype Node = TreeNode<MenuItemData>;\r\n\r\nexport class MainMenuSelectionEvent extends TypedEvent<\"select\">{\r\n    constructor(public readonly scenarioID: number) {\r\n        super(\"select\");\r\n    }\r\n}\r\n\r\nexport class MainMenuLobbyEvent extends TypedEvent<\"lobby\">{\r\n    constructor() {\r\n        super(\"lobby\");\r\n    }\r\n}\r\n\r\ninterface MainMenuEvents extends ApplicationEvents {\r\n    select: MainMenuSelectionEvent;\r\n    lobby: MainMenuLobbyEvent;\r\n}\r\n\r\nexport class MainMenu extends Application<MainMenuEvents> {\r\n    private readonly menu: Menu;\r\n    private readonly node2MenuItem = new Map<Node, MenuItemDescription>();\r\n    private readonly menuItem2Node = new Map<MenuItemDescription, Node>();\r\n    private readonly images = new Map<string, CanvasImageTypes>();\r\n    private readonly lobbyButton: ButtonImageWidget = null;\r\n\r\n    private menuDesc: MenuDescription = null;\r\n    private curMenu: Node = null;\r\n    private menuRoot: Node = null;\r\n\r\n    constructor(env: Environment) {\r\n        super(env);\r\n\r\n\r\n        this.lobbyButton = new ButtonImageWidget(this.env.uiButtons, \"ui\", \"lobby\");\r\n        this.menu = new Menu(this.env);\r\n\r\n        this.env.addScopedEventListener(this, \"update\", (evt) =>\r\n            this.menu.update(evt.dt));\r\n\r\n        this.env.addScopedEventListener(this, \"dialogshowing\", (evt) =>\r\n            widgetSetEnabled(this.lobbyButton, !evt.showing));\r\n\r\n        this.lobbyButton.addEventListener(\"click\", () =>\r\n            this.env.withConfirmation(\r\n                \"Confirm return to lobby\",\r\n                \"Are you sure you want to return to the lobby?\",\r\n                () =>\r\n                    this.dispatchEvent(new MainMenuLobbyEvent())));\r\n\r\n        Object.seal(this);\r\n    }\r\n\r\n    override async init(params: Map<string, unknown>): Promise<void> {\r\n        this.menuDesc = params.get(\"config\") as MenuDescription;\r\n\r\n        await super.init(params);\r\n    }\r\n\r\n    async load(prog?: IProgress) {\r\n        await progressTasksWeighted(prog, [\r\n            [5, prog => this.menu.load(this.menuDesc, prog)],\r\n            [1, prog => this.loadMenuData(prog)]\r\n        ]);\r\n\r\n        objGraph(this.env.worldUISpace, this.menu);\r\n        this.env.xrUI.addItem(this.lobbyButton, { x: 1, y: 1, scale: 0.5 });\r\n        HtmlRender(this.env.screenUISpace.topRight, this.lobbyButton);\r\n    }\r\n\r\n    private async loadMenuData(prog?: IProgress): Promise<void> {\r\n        this.destroyMenuItems();\r\n\r\n        const menuItems = await this.env.fetcher\r\n            .get(\"/vr/menu\" + (location.search.includes(\"all\") ? \"/1\" : \"\"))\r\n            .progress(prog)\r\n            .object<MenuItemData[]>()\r\n            .then(unwrapResponse);\r\n\r\n        for (const menuItem of menuItems) {\r\n            if (isDefined(menuItem.audioElementCount)) {\r\n                this.env.audio.preparePool(menuItem.audioElementCount);\r\n            }\r\n        }\r\n\r\n        const organizations = Array.from(new Set(menuItems.map(m => m.organizationName)));\r\n        const orgIds = new Map<string, number>();\r\n        if (organizations.length > 1) {\r\n            const topLevel = menuItems.filter(m => isNullOrUndefined(m.parentID));\r\n            const topLevelLookup = new PriorityList<string, MenuItemData>();\r\n            for (const m of topLevel) {\r\n                topLevelLookup.add(m.organizationName, m);\r\n            }\r\n\r\n            for (let i = 0; i < organizations.length; ++i) {\r\n                const label = organizations[i];\r\n                const id = -(i + 1);\r\n                const data: MenuItemData = {\r\n                    id,\r\n                    label,\r\n                    order: i,\r\n                    organizationName: label\r\n                };\r\n                orgIds.set(label, id);\r\n\r\n                menuItems.push(data);\r\n                for (const m of topLevelLookup.get(label)) {\r\n                    m.parentID = id;\r\n                }\r\n            }\r\n        }\r\n\r\n        const map = makeLookup(menuItems, m => m.id);\r\n\r\n        this.menuRoot = buildTree(\r\n            menuItems,\r\n            v => map.get(v.parentID),\r\n            v => v && v.order || -1\r\n        );\r\n\r\n        for (const node of this.menuRoot.breadthFirst()) {\r\n            const value = node.value;\r\n            if (value !== null) {\r\n                const item: MenuItemDescription = {\r\n                    name: value.label,\r\n                    filePath: value.filePath,\r\n                    enabled: true\r\n                };\r\n                this.node2MenuItem.set(node, item);\r\n                this.menuItem2Node.set(item, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async loadMenuItems(parent: Node, prog?: IProgress) {\r\n        const imageSet = Array.from(new Set(parent.children.map(m => m.value.filePath)))\r\n            .filter(f => isDefined(f) && !this.images.has(f));\r\n\r\n        await progressOfArray(\r\n            prog,\r\n            imageSet,\r\n            async (f, prog) =>\r\n                this.images.set(f, await this.env.fetcher\r\n                    .get(f)\r\n                    .progress(prog)\r\n                    .image()\r\n                    .then(unwrapResponse)));\r\n\r\n        for (const child of parent.children) {\r\n            const item = this.node2MenuItem.get(child);\r\n            if (isNullOrUndefined(item.back)\r\n                && this.images.has(item.filePath)) {\r\n                const imgMesh = new Image2D(this.env, item.filePath + item.name, \"none\");\r\n                imgMesh.setTextureMap(this.images.get(item.filePath));\r\n                imgMesh.mesh.frustumCulled = false;\r\n                item.back = imgMesh;\r\n            }\r\n        }\r\n    }\r\n\r\n    async showing(prog?: IProgress) {\r\n        const selection = this.curMenu || this.menuRoot;\r\n        await progressTasksWeighted(prog, [\r\n            [10, async prog => {\r\n                this.env.skybox.rotation = null;\r\n                const image = await this.env.fetcher\r\n                    .get(\"/vr/LandingPageImage\")\r\n                    .progress(prog)\r\n                    .image()\r\n                    .then(unwrapResponse);\r\n                return this.env.skybox.setImage(\"/vr/LandingPageImage\", image);\r\n            }],\r\n            [1, prog => this.showMenuSelection(selection, prog)]\r\n        ]);\r\n        this.menu.visible = true;\r\n        this.lobbyButton.visible = false;\r\n        this.join(\"lobby\");\r\n    }\r\n\r\n    protected hiding() {\r\n        this.menu.visible = false;\r\n        this.lobbyButton.visible = true;\r\n    }\r\n\r\n    get visible() {\r\n        return this.menu.visible;\r\n    }\r\n\r\n    dispose() {\r\n        this.env.removeScope(this);\r\n        this.env.worldUISpace.remove(this.menu);\r\n        cleanup(this.menu);\r\n        this.menu.removeFromParent();\r\n        this.destroyMenuItems();\r\n    }\r\n\r\n    private destroyMenuItems() {\r\n        for (const img of this.images.values()) {\r\n            dispose(img);\r\n        }\r\n\r\n        this.images.clear();\r\n        this.node2MenuItem.clear();\r\n        this.menuItem2Node.clear();\r\n    }\r\n\r\n    private async showMenuSelection(selection: Node, prog?: IProgress) {\r\n        this.curMenu = selection;\r\n        const [imgProg, showProg] = progressSplitWeighted(prog, [10, 1]);\r\n        await this.loadMenuItems(selection, imgProg);\r\n\r\n        const menuItems = selection\r\n            .children\r\n            .map(child => this.node2MenuItem.get(child));\r\n\r\n        const onBack = selection.isRoot\r\n            ? null\r\n            : () => this.selectMenuItem(selection.parent);\r\n\r\n        let menuID = 0;\r\n        let label = \"Menu\";\r\n\r\n        if (selection.value) {\r\n            menuID = selection.value.id;\r\n            label = selection.value.label;\r\n        }\r\n\r\n        await this.menu.showMenu(\r\n            menuID,\r\n            label,\r\n            menuItems,\r\n            (item) => {\r\n                const node = this.menuItem2Node.get(item);\r\n                this.selectMenuItem(node);\r\n            },\r\n            onBack,\r\n            showProg);\r\n    }\r\n\r\n    private async selectMenuItem(selection: Node, prog?: IProgress) {\r\n        if (selection.isLeaf) {\r\n            this.dispatchEvent(new MainMenuSelectionEvent(selection.value.scenarioID));\r\n        }\r\n        else {\r\n            await this.showMenuSelection(selection, prog);\r\n        }\r\n    }\r\n}\r\n", "import { MainMenu } from \"./MainMenu\";\r\nexport default MainMenu;"],
  "mappings": ";AAAA,SAAS,EAAE,GAAQ,GAAW,GAAW;AACrC,SAAO,OAAO,MAAM,KACb,aAAa;AACxB;AAEM,SAAU,WAAWA,MAAQ;AAC/B,SAAO,EAAEA,MAAK,YAAY,QAAQ;AACtC;AAEM,SAAU,SAASA,MAAQ;AAC7B,SAAO,EAAEA,MAAK,UAAU,MAAM;AAClC;AAEM,SAAU,UAAUA,MAAQ;AAC9B,SAAO,EAAEA,MAAK,WAAW,OAAO;AACpC;AAEM,SAAU,SAASA,MAAQ;AAC7B,SAAO,EAAEA,MAAK,UAAU,MAAM;AAClC;AAMM,SAAU,YAAY,KAAW;AACnC,SAAO,kBAAkB,GAAG,KACrB,CAAC,OAAO,SAAS,GAAG,KACpB,OAAO,MAAM,GAAG;AAC3B;AAMM,SAAU,aAAaA,MAAQ;AACjC,SAAO,SAASA,IAAG,KACZ,CAAC,YAAYA,IAAG;AAC3B;AAEM,SAAU,SAASA,MAAQ;AAC7B,SAAO,UAAUA,IAAG,KACb,EAAEA,MAAK,UAAU,MAAM;AAClC;AAUM,SAAU,QAAQC,MAAQ;AAC5B,SAAOA,gBAAe;AAC1B;AAMM,SAAU,kBAAqBC,MAAyB;AAC1D,SAAOA,SAAQ,QACRA,SAAQ;AACnB;AAEM,SAAU,UAAaA,MAAyB;AAClD,SAAO,CAAC,kBAAkBA,IAAG;AACjC;;;AC9DA,SAAS,cAAiBC,MAAQ;AAC9B,SAAO,SAASA,IAAG,KACZ,eAAeA,QACf,WAAWA,KAAI,SAAS;AACnC;AAYM,SAAU,UAAa,8BAAwE,SAAmC;AACpI,MAAI,YAA8B;AAClC,MAAI,SAAS,yBAAyB,GAAG;AACrC,gBAAY;SAEX;AACD,gBAAY;AACZ,YAAQ,QAAQ,yBAAyB;;AAG7C,QAAM,IAAI,cAAc,cAAc,IAAI;AAE1C,QAAM,WAAW,CAAC,GAAM,MAAQ;AAC5B,QAAI,MAAM,GAAG;AACT,aAAO;;AAGX,eAAW,UAAU,SAAS;AAC1B,YAAM,OAAO,kBAAkB,CAAC,IAAI,OAAO,OAAO,CAAC;AACnD,YAAM,OAAO,kBAAkB,CAAC,IAAI,OAAO,OAAO,CAAC;AACnD,YAAM,WAAW,SAAS,OACpB,IACA,SAAS,IAAI,KAAK,SAAS,IAAI,IAC3B,IAAI,KAAK,cAAc,IAAI,IAC3B,cAAc,IAAI,KAAK,cAAc,IAAI,IACrC,IAAI,KAAK,UAAU,IAAI,IACvB,cAAc,eAAe,OAAO,QAC/B,cAAc,gBAAgB,OAAO,OACtC,IAAI;AAEtB,UAAI,aAAa,GAAG;AAChB,eAAO;;;AAIf,WAAO;EACX;AAEA,SAAO,OAAO,OAAO,UAAU;IAC3B;GACH;AACL;AAIM,SAAU,aAAgB,KAAmB,aAAgB,UAA8B,OAAmB,UAAQ;AACxH,MAAI,OAAO;AACX,MAAI,QAAQ,IAAI,SAAS;AACzB,SAAO,QAAQ,OAAO;AAClB,QAAI,MAAO,OAAO,SAAU;AAC5B,QAAI,WAAW,SAAS,IAAI,GAAG,GAAG,WAAW;AAC7C,QAAI,aAAa,GAAG;AAChB,UAAI,SAAS,UAAU;AACnB,cAAM,gBAAgB,SAAS,WAAW,IAAI;AAC9C,YAAI,gBAAgB,GAAG;AACnB,iBAAO;;AAEX,eAAO,KAAK,OACL,MAAM,IAAI,WACT,WAAW,SAAS,IAAI,GAAG,GAAG,WAAW,OAAO,GAAG;AACvD,iBAAO;;AAEX,YAAI,gBAAgB,GAAG;AACnB,iBAAO;;;AAIf,aAAO;eAEF,WAAW,GAAG;AACnB,aAAO,MAAM;WAEZ;AACD,cAAQ,MAAM;;;AAItB,SAAO,CAAC,OAAO;AACnB;AAOM,SAAU,aAAgB,KAAU,KAAQ,eAA4C,OAAmB,UAAQ;AACrH,QAAM,kBAAkB,SAAS;AACjC,MAAI,SAAS,OAAO;AAChB,WAAO;;AAGX,MAAI,MAAc;AAClB,MAAI,SAAS,aAAa,GAAG;AACzB,UAAM;SAEL;AACD,UAAM,aAAa,KAAK,KAAK,eAAe,IAAI;;AAGpD,MAAI,MAAM,GAAG;AACT,UAAM,CAAC,MAAM;aAER,CAAC,iBAAiB;AACvB,WAAO;;AAGX,gBAAc,KAAK,KAAK,GAAG;AAC3B,SAAO;AACX;AAiBM,SAAU,WAAc,KAAQ;AAClC,SAAO,IAAI,OAAO,CAAC;AACvB;AASM,SAAU,aAAgB,MAAwB,MAAsB;AAC1E,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAClC,QAAI,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG;AACrB,aAAO;;;AAIf,SAAO;AACX;AAqBM,SAAU,cAAiB,KAAU,MAAS,KAAW;AAC3D,MAAI,OAAO,KAAK,GAAG,IAAI;AAC3B;AAuBM,SAAU,YAAe,KAAU,OAAQ;AAC7C,QAAM,MAAM,IAAI,QAAQ,KAAK;AAC7B,MAAI,MAAM,IAAI;AACV,kBAAc,KAAK,GAAG;AACtB,WAAO;;AAGX,SAAO;AACX;AAmBM,SAAU,cAAiB,KAAU,KAAW;AAClD,SAAO,IAAI,OAAO,KAAK,CAAC,EAAE,CAAC;AAC/B;AAWM,SAAU,aAAgB,QAAa,OAAU;AACnD,MAAI,OAAO,GAAG,IAAI,QAAQ,GAAG,KAAK;AACtC;AAWA,SAAS,WAAc,SAAkB,KAAmB,OAA8B;AACtF,QAAMC,SAAQ,UAAU,IAAI,IAAI,SAAS;AACzC,QAAMC,OAAM,UAAU,IAAI,SAAS;AACnC,QAAM,MAAM,UAAU,IAAI;AAC1B,aAAW,QAAQ,OAAO;AACtB,aAAS,IAAID,QAAO,KAAKC,MAAK,KAAK,KAAK;AACpC,YAAM,OAAO,IAAI,CAAC;AAClB,UAAI,KAAK,IAAI,GAAG;AACZ,eAAO;;;;AAKnB,SAAO;AACX;AASM,SAAU,UAAa,QAAsB,OAA8B;AAC7E,SAAO,WAAW,MAAM,KAAK,KAAK;AACtC;;;AC/RM,IAAO,eAAP,MAAmB;EAIrB,YAAY,MAAuB;AAHlB,SAAA,QAAQ,oBAAI,IAAG;AACf,SAAA,eAAe,IAAI,MAAK;AAGrC,QAAI,UAAU,IAAI,GAAG;AACjB,iBAAW,CAAC,KAAK,KAAK,KAAK,MAAM;AAC7B,aAAK,IAAI,KAAK,KAAK;;;EAG/B;EAEA,IAAI,QAAc,QAAgB;AAC9B,eAAW,SAAS,QAAQ;AACxB,UAAI,kBAAkB,GAAG,GAAG;AACxB,aAAK,aAAa,KAAK,KAAK;aAE3B;AACD,YAAI,OAAO,KAAK,MAAM,IAAI,GAAG;AAC7B,YAAI,kBAAkB,IAAI,GAAG;AACzB,eAAK,MAAM,IAAI,KAAK,OAAO,CAAA,CAAE;;AAGjC,aAAK,KAAK,KAAK;;;AAIvB,WAAO;EACX;EAEA,UAAO;AACH,WAAO,KAAK,MAAM,QAAO;EAC7B;EAEA,CAAC,OAAO,QAAQ,IAAC;AACb,WAAO,KAAK,QAAO;EACvB;EAEA,OAAI;AACA,WAAO,KAAK,MAAM,KAAI;EAC1B;EAEA,CAAC,SAAM;AACH,eAAW,QAAQ,KAAK,cAAc;AAClC,YAAM;;AAEV,eAAW,QAAQ,KAAK,MAAM,OAAM,GAAI;AACpC,iBAAW,QAAQ,MAAM;AACrB,cAAM;;;EAGlB;EAEA,IAAI,KAAS;AACT,QAAI,UAAU,GAAG,GAAG;AAChB,aAAO,KAAK,MAAM,IAAI,GAAG;WAExB;AACD,aAAO,KAAK,aAAa,SAAS;;EAE1C;EAEA,IAAI,KAAS;AACT,QAAI,kBAAkB,GAAG,GAAG;AACxB,aAAO,KAAK;;AAGhB,WAAO,KAAK,MAAM,IAAI,GAAG,KAAK,CAAA;EAClC;EAEA,MAAM,KAAS;AACX,QAAI,kBAAkB,GAAG,GAAG;AACxB,aAAO,KAAK,aAAa;;AAG7B,UAAM,OAAO,KAAK,IAAI,GAAG;AACzB,QAAI,UAAU,IAAI,GAAG;AACjB,aAAO,KAAK;;AAGhB,WAAO;EACX;EAEA,IAAI,OAAI;AACJ,QAAI,OAAO,KAAK,aAAa;AAC7B,eAAW,QAAQ,KAAK,MAAM,OAAM,GAAI;AACpC,cAAQ,KAAK;;AAEjB,WAAO;EACX;EAEA,OAAO,KAAS;AACZ,QAAI,kBAAkB,GAAG,GAAG;AACxB,aAAO,WAAW,KAAK,YAAY,EAAE,SAAS;WAE7C;AACD,aAAO,KAAK,MAAM,OAAO,GAAG;;EAEpC;EAEA,OAAO,KAAW,OAAa;AAC3B,QAAI,kBAAkB,GAAG,GAAG;AACxB,kBAAY,KAAK,cAAc,KAAK;WAEnC;AACD,YAAM,OAAO,KAAK,MAAM,IAAI,GAAG;AAC/B,UAAI,UAAU,IAAI,GAAG;AACjB,oBAAY,MAAM,KAAK;AACvB,YAAI,KAAK,WAAW,GAAG;AACnB,eAAK,MAAM,OAAO,GAAG;;;;EAIrC;EAEA,QAAK;AACD,SAAK,MAAM,MAAK;AAChB,eAAW,KAAK,YAAY;EAChC;;;;ACtHJ,SAAS,iBAAyB,KAAa;AAC3C,SAAO,IAAI,CAAC;AAChB;AACA,SAAS,mBAA2B,KAAa;AAC7C,SAAO,IAAI,MAAK;AACpB;AAEA,SAAS,eAAuB,KAAa;AACzC,SAAO,IAAI,IAAI,SAAS,CAAC;AAC7B;AAEA,SAAS,iBAAyB,KAAa;AAC3C,SAAO,IAAI,IAAG;AAClB;AAEM,IAAgB,gBAAhB,MAA6B;EAK/B,YAA4B,OAAa;AAAb,SAAA,QAAA;AAHT,SAAA,WAAW,IAAI,MAAK;AACpB,SAAA,WAAW,IAAI,MAAK;EAGvC;EAEA,cAAuC,OAAa,aAAoC;AACpF,QAAI,UAAU,WAAW,GAAG;AACxB,YAAM,WAAW,UAAgB,CAAC,MAAM,YAAY,EAAE,KAAK,CAAC;AAC5D,mBAAa,KAAK,UAAU,OAAO,QAAQ;AAC3C,mBAAa,MAAM,UAAU,MAAM,QAAQ;WAE1C;AACD,WAAK,UAAU,KAAK;;EAE5B;EAEA,UAAU,OAAW;AACjB,SAAK,UAAU,OAAO,KAAK,SAAS,MAAM;EAC9C;EAEA,UAAU,OAAa,OAAa;AAChC,kBAAc,KAAK,UAAU,OAAO,KAAK;AACzC,UAAM,SAAS,KAAK,IAAI;EAC5B;EAEA,eAAe,OAAW;AACtB,gBAAY,KAAK,UAAU,KAAK;AAChC,gBAAY,MAAM,UAAU,IAAI;EACpC;EAEA,cAAc,MAAU;AACpB,WAAO,KAAK,SAAS,QAAQ,IAAI,KAAK,KAC/B,KAAK,SAAS,QAAQ,IAAI,KAAK;EAC1C;EAEA,UAAO;AACH,UAAM,UAAU,oBAAI,IAAG;AACvB,UAAM,QAAgB,CAAC,IAAI;AAC3B,WAAO,MAAM,SAAS,GAAG;AACrB,YAAM,OAAO,MAAM,MAAK;AACxB,UAAI,UAAU,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,GAAG;AACvC,gBAAQ,IAAI,IAAI;AAChB,cAAM,KAAK,GAAG,KAAK,QAAQ;;;AAInC,WAAO,MAAM,KAAK,OAAO;EAC7B;EAEA,CAAC,SAAS,cAAqB;AAC3B,UAAM,UAAU,oBAAI,IAAG;AACvB,UAAM,QAAQ,CAAC,IAAI;AACnB,UAAM,OAAO,eACP,mBACA;AACN,UAAM,SAAS,eACT,qBACA;AAEN,WAAO,MAAM,SAAS,GAAG;AACrB,YAAM,OAAO,KAAK,KAAK;AACvB,UAAI,CAAC,QAAQ,IAAI,IAAI,GAAG;AACpB,gBAAQ,IAAI,IAAI;AAEhB,YAAI,cAAc;AACd,iBAAO,KAAK;AACZ,gBAAM;;AAGV,YAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,gBAAM,KAAK,GAAG,KAAK,QAAQ;;iBAG1B,CAAC,cAAc;AACpB,eAAO,KAAK;AACZ,cAAM;;;EAGlB;EAEA,eAAY;AACR,WAAO,KAAK,SAAS,IAAI;EAC7B;EAEA,aAAU;AACN,WAAO,KAAK,SAAS,KAAK;EAC9B;EAEA,OAAO,WAAiC,eAAe,MAAI;AACvD,eAAW,QAAQ,KAAK,SAAS,YAAY,GAAG;AAC5C,UAAI,UAAU,IAAI,GAAG;AACjB,eAAO;;;AAIf,WAAO;EACX;EAEA,CAAC,UAAU,WAAiC,eAAe,MAAI;AAC3D,eAAW,QAAQ,KAAK,SAAS,YAAY,GAAG;AAC5C,UAAI,UAAU,IAAI,GAAG;AACjB,cAAM;;;EAGlB;EAEA,KAAK,GAAW,eAAe,MAAI;AAC/B,WAAO,KAAK,OAAO,CAAC,MAAM,EAAE,UAAU,GAAG,YAAY;EACzD;EAEA,QAAQ,GAAW,eAAe,MAAI;AAClC,WAAO,KAAK,UAAU,CAAC,MAAM,EAAE,UAAU,GAAG,YAAY;EAC5D;EAEA,SAAS,MAAY,eAAe,MAAI;AACpC,eAAW,SAAS,KAAK,SAAS,YAAY,GAAG;AAC7C,UAAI,UAAU,MAAM;AAChB,eAAO;;;AAIf,WAAO;EACX;EAEA,cAAc,GAAW,eAAe,MAAI;AACxC,eAAW,SAAS,KAAK,SAAS,YAAY,GAAG;AAC7C,UAAI,MAAM,UAAU,GAAG;AACnB,eAAO;;;AAIf,WAAO;EACX;EAEA,IAAc,gBAAa;AACvB,WAAO,KAAK,SAAS,WAAW;EACpC;EAEA,IAAc,eAAY;AACtB,WAAO,KAAK,SAAS,WAAW;EACpC;EAEA,IAAI,iBAAc;AACd,WAAO,KAAK,iBACL,KAAK;EAChB;EAEA,IAAI,cAAW;AACX,WAAO,CAAC,KAAK,gBACN,CAAC,KAAK;EACjB;EAEA,IAAI,aAAU;AACV,WAAO,KAAK,iBACL,KAAK;EAChB;EAEA,IAAI,aAAU;AACV,WAAO,CAAC,KAAK,iBACN,CAAC,KAAK;EACjB;;;;ACrLE,SAAU,SAAY,MAAO;AAC/B,SAAO;AACX;;;ACFM,SAAU,OAAgB,OAAqB,QAAwB,WAAyB;AAClG,SAAO,IAAI,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,GAAG,UAAU,IAAI,CAAC,CAAC,CAAC;AACvE;;;ACCM,SAAU,WAAiB,OAAqB,QAAsB;AACxE,SAAO,OAAO,OAAO,QAAQ,QAAQ;AACzC;;;ACAM,SAAU,UACZ,OACA,WACA,WAA4B;AAC5B,QAAM,WAAW,CAAC,MAAS,UAAU,CAAC,KAC/B,UAAU,SAAS,KACnB,UAAU,CAAC;AAElB,QAAM,WAAW,IAAI,SAAS,IAAI;AAClC,QAAM,QAAQ,oBAAI,IAAG;AAErB,aAAW,QAAQ,OAAO;AACtB,UAAM,OAAO,IAAI,SAAS,IAAI;AAC9B,UAAM,IAAI,MAAM,IAAI;;AAGxB,aAAW,QAAQ,MAAM,OAAM,GAAI;AAC/B,UAAM,SAAS,UAAU,KAAK,KAAK;AACnC,UAAM,gBAAgB,UAAU,QAAQ,MAAM,IAAI,MAAM;AACxD,UAAM,aAAa,gBACb,MAAM,IAAI,MAAM,IAChB;AAEN,eAAW,cAAc,MAAM,QAAQ;;AAG3C,SAAO;AACX;AAcM,IAAO,WAAP,cAAgC,cAAqB;EAEvD,IAAI,QAAK;AACL,QAAI,UAAU;AACd,QAAI,OAAO,KAAK;AAEhB,WAAO,UAAU,IAAI,GAAG;AACpB,QAAE;AACF,aAAO,KAAK;;AAGhB,WAAO;EACX;EAEA,mBAAgB;AACZ,WAAO,KAAK,QAAQ;AAChB,WAAK,OAAO,eAAe,IAAI;;EAEvC;EAES,UAAU,OAAW;AAC1B,UAAM,iBAAgB;AACtB,UAAM,UAAU,KAAK;EACzB;EAES,UAAU,OAAa,OAAa;AACzC,UAAM,iBAAgB;AACtB,UAAM,UAAU,OAAO,KAAK;EAChC;EAES,cAAuC,OAAa,SAAgC;AACzF,UAAM,iBAAgB;AACtB,UAAM,cAAc,OAAO,OAAO;EACtC;EAEA,IAAI,SAAM;AACN,QAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,aAAO;;AAGX,WAAO,KAAK,SAAS,CAAC;EAC1B;EAEA,IAAI,WAAQ;AACR,WAAO,KAAK;EAChB;EAEA,IAAI,SAAM;AACN,WAAO,KAAK;EAChB;EAEA,IAAI,UAAO;AACP,WAAO,CAAC,KAAK;EACjB;EAEA,IAAI,SAAM;AACN,WAAO,KAAK;EAChB;EAEA,IAAI,cAAW;AACX,WAAO,CAAC,KAAK;EACjB;;;;AC5FE,IAAO,oBAAP,MAAwB;EAA9B,cAAA;AACqB,SAAA,YAAY,oBAAI,IAAG;AACnB,SAAA,kBAAkB,oBAAI,IAAG;AACzB,SAAA,WAAW,oBAAI,IAAG;AAClB,SAAA,SAAS,oBAAI,QAAO;EAyGzC;EAvGI,WAAW,SAAoB;AAC3B,SAAK,SAAS,IAAI,OAAO;EAC7B;EAEA,cAAc,SAAoB;AAC9B,SAAK,SAAS,OAAO,OAAO;EAChC;EAEA,uBAAuB,OAAe,MAAc,UAA8C,SAA2C;AACzI,QAAI,CAAC,KAAK,OAAO,IAAI,KAAK,GAAG;AACzB,WAAK,OAAO,IAAI,OAAO,CAAA,CAAE;;AAE7B,SAAK,OAAO,IAAI,KAAK,EAAE,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5C,SAAK,iBAAiB,MAAM,UAAiB,OAAO;EACxD;EAEA,YAAY,OAAa;AACrB,UAAM,YAAY,KAAK,OAAO,IAAI,KAAK;AACvC,QAAI,WAAW;AACX,WAAK,OAAO,OAAO,KAAK;AACxB,iBAAW,CAAC,MAAM,QAAQ,KAAK,WAAW;AACtC,aAAK,oBAAoB,MAAM,QAAQ;;;EAGnD;EAEA,iBAAiB,MAAc,UAA8C,SAA2C;AACpH,QAAI,YAAY,KAAK,UAAU,IAAI,IAAI;AACvC,QAAI,CAAC,WAAW;AACZ,kBAAY,IAAI,MAAK;AACrB,WAAK,UAAU,IAAI,MAAM,SAAS;;AAGtC,QAAI,CAAC,UAAU,KAAK,CAAC,MAAM,MAAM,QAAQ,GAAG;AACxC,gBAAU,KAAK,QAAQ;AAEvB,UAAI,SAAS;AACT,aAAK,gBAAgB,IAAI,UAAU,OAAO;;;EAGtD;EAEA,oBAAoB,MAAc,UAA4C;AAC1E,UAAM,YAAY,KAAK,UAAU,IAAI,IAAI;AACzC,QAAI,WAAW;AACX,WAAK,eAAe,WAAW,QAAQ;;EAE/C;EAEA,oBAAoB,MAAa;AAC7B,eAAW,CAAC,SAAS,QAAQ,KAAK,KAAK,WAAW;AAC9C,UAAI,kBAAkB,IAAI,KAAK,SAAS,SAAS;AAC7C,mBAAW,WAAW,UAAU;AAC5B,eAAK,oBAAoB,MAAM,OAAO;;AAE1C,mBAAW,QAAQ;AACnB,aAAK,UAAU,OAAO,OAAO;;;EAGzC;EAEQ,eAAe,WAAiD,UAA4C;AAChH,UAAM,MAAM,UAAU,UAAU,CAAC,MAAM,MAAM,QAAQ;AACrD,QAAI,OAAO,GAAG;AACV,oBAAc,WAAW,GAAG;AAC5B,UAAI,KAAK,gBAAgB,IAAI,QAAQ,GAAG;AACpC,aAAK,gBAAgB,OAAO,QAAQ;;;EAGhD;EAEA,cAAc,KAAU;AACpB,UAAM,YAAY,KAAK,UAAU,IAAI,IAAI,IAAI;AAC7C,QAAI,WAAW;AACX,iBAAW,YAAY,WAAW;AAC9B,cAAM,UAAU,KAAK,gBAAgB,IAAI,QAAQ;AACjD,YAAI,UAAU,OAAO,KACd,CAAC,UAAU,OAAO,KAClB,QAAQ,MAAM;AACjB,eAAK,eAAe,WAAW,QAAQ;;AAG3C,YAAI,WAAW,QAAQ,GAAG;AACtB,mBAAS,KAAK,MAAM,GAAG;eAEtB;AACD,mBAAS,YAAY,GAAG;;;;AAKpC,QAAI,IAAI,kBAAkB;AACtB,aAAO;;AAGX,eAAW,WAAW,KAAK,UAAU;AACjC,UAAI,CAAC,QAAQ,cAAc,GAAG,GAAG;AAC7B,eAAO;;;AAIf,WAAO;EACX;;;;ACvGE,IAAO,OAAP,MAAW;;;;;;;EA8Bb,YAA6B,YAAY,MAAI;AAAhB,SAAA,YAAA;AA7BZ,SAAA,UAAU,IAAI,MAAK;AACnB,SAAA,YAAY,IAAI,MAAK;AAE9B,SAAA,UAAoB;AACpB,SAAA,SAAc;AACd,SAAA,kBAAsC;AACtC,SAAA,eAAgC;AA4BpC,SAAK,UAAU,CAAC,UAAS;AACrB,UAAI,KAAK,SAAS;AACd,aAAK,UAAU;AACf,aAAK,eAAe;AAEpB,mBAAW,WAAW,KAAK,SAAS;AAChC,kBAAQ,KAAK;;AAGjB,aAAK,MAAK;AACV,aAAK,kBAAkB;;IAE/B;AAEA,SAAK,SAAS,CAAC,WAAU;AACrB,UAAI,KAAK,SAAS;AACd,aAAK,SAAS;AACd,aAAK,eAAe;AAEpB,mBAAW,WAAW,KAAK,WAAW;AAClC,kBAAQ,MAAM;;AAGlB,aAAK,MAAK;AACV,aAAK,kBAAkB;;IAE/B;AAEA,QAAI,KAAK,WAAW;AAChB,WAAK,MAAK;;EAElB;EAEQ,QAAK;AACT,eAAW,KAAK,OAAO;AACvB,eAAW,KAAK,SAAS;EAC7B;;;;;EAMA,QAAK;AACD,SAAK,kBAAkB;EAC3B;;;;;EAMA,SAAS,OAAe;AACpB,WAAO,MAAM,KAAK,QAAQ,KAAK;EACnC;EAEA,UACI,QACA,YACA,OAAe;AACf,UAAM,WAAW,KAAK,SAAS,KAAK;AACpC,WAAO,iBAAiB,YAAmB,QAAQ;AACnD,SAAK,QAAQ,MACT,OAAO,oBAAoB,YAAmB,QAAQ,CAAC;EAC/D;;;;;;;EAQA,IAAI,SAAM;AACN,QAAI,UAAU,KAAK,KAAK,GAAG;AACvB,YAAM,KAAK;;AAGf,WAAO,KAAK;EAChB;;;;EAKA,IAAI,QAAK;AACL,WAAO,KAAK;EAChB;;;;EAKA,IAAI,iBAAc;AACd,WAAO,KAAK;EAChB;;;;EAKA,IAAI,UAAO;AACP,WAAO,KAAK,mBAAmB;EACnC;;;;EAKA,IAAI,UAAO;AACP,WAAO,KAAK,mBAAmB;EACnC;;;;EAKA,IAAI,UAAO;AACP,WAAO,KAAK,mBAAmB;EACnC;;;;EAKA,IAAI,WAAQ;AACR,WAAO,KAAK,mBAAmB;EACnC;EAEA,IAAI,cAAW;AACX,WAAO,KAAK;EAChB;;;;EAKA,IAAI,WAAQ;AACR,WAAO,KAAK,gBAAgB;EAChC;;;;;EAMA,IAAI,UAAO;AACP,WAAO,KAAK,gBAAgB;EAChC;EAEA,KAAK,OAAO,WAAW,IAAC;AACpB,WAAO,KAAK,SAAQ;EACxB;;;;;EAMQ,UAAO;AACX,WAAO,IAAI,QAAkB,CAAC,SAAS,WAAU;AAC7C,UAAI,CAAC,KAAK,UAAU;AAChB,aAAK,QAAQ,KAAK,OAAO;AACzB,aAAK,UAAU,KAAK,MAAM;iBAErB,KAAK,SAAS;AACnB,eAAO,KAAK,KAAK;aAEhB;AACD,gBAAQ,KAAK,MAAM;;IAE3B,CAAC;EACL;;;;;;;EAQA,KAA4C,aAAqE,YAA8D;AAC3K,WAAO,KAAK,QAAO,EAAG,KAAK,aAAa,UAAU;EACtD;;;;;;EAOA,MAAuB,YAA4D;AAC/E,WAAO,KAAK,QAAO,EAAG,MAAM,UAAU;EAC1C;;;;;;;EAQA,QAAQ,WAAsB;AAC1B,WAAO,KAAK,QAAO,EAAG,QAAQ,SAAS;EAC3C;;;;;EAMA,QAAK;AACD,SAAK,OAAO,KAAK,SAAS;EAC9B;EAEA,UAAO;AACH,SAAK,OAAO,IAAI;EACpB;EAEQ,OAAOC,QAAc;AACzB,QAAI,KAAK,SAAS;AACd,WAAK,OAAO,+BAA+B;;AAG/C,SAAK,MAAK;AACV,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,kBAAkB;AACvB,SAAK,eAAe;AAEpB,QAAIA,QAAO;AACP,WAAK,MAAK;;EAElB;;;;AC9QG,IAAM,cAAc;AAC3B,IAAM,iBAAiB;AAWjB,IAAO,YAAP,MAAO,WAAS;EAelB,YACqB,OACA,cACjB,YAAkC;AAFjB,SAAA,QAAA;AACA,SAAA,eAAA;AAPJ,SAAA,oBAA4B;AAErC,SAAA,aAAqB;AAQzB,UAAM,aAAa,oBAAI,IAAG;AAC1B,SAAK,cAAc;AAEnB,UAAM,eAAe,KAAK,aAAa,MAAM,cAAc;AAC3D,SAAK,QAAQ,aAAa,CAAC;AAC3B,SAAK,WAAW,aAAa,CAAC;AAC9B,SAAK,UAAU,aAAa,CAAC;AAC7B,UAAM,WAAW,aAAa,CAAC;AAE/B,SAAK,SAAS,KAAK,aAAa,KAAK,QAAQ;AAE7C,QAAI,UAAU,KAAK,KAAK,GAAG;AACvB,WAAK,SAAS,KAAK,cAAc,KAAK,QAAQ;;AAGlD,SAAK,SAAS,KAAK,cAAc,KAAK;AAEtC,QAAI,UAAU,KAAK,OAAO,GAAG;AACzB,WAAK,SAAS,KAAK,cAAc,MAAM,KAAK;;AAGhD,QAAI,UAAU,QAAQ,GAAG;AACrB,YAAM,QAAQ,SAAS,MAAM,GAAG,EAC3B,IAAI,CAAC,MAAM,EAAE,KAAI,CAAE,EACnB,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,EAC1B,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC;AAC5B,iBAAW,CAAC,KAAK,GAAG,MAAM,KAAK,OAAO;AAClC,cAAM,QAAQ,OAAO,KAAK,GAAG;AAC7B,mBAAW,IAAI,KAAK,KAAK;AACzB,cAAM,OAAO,KAAK,GAAG,IAAI,KAAK;AAC9B,aAAK,cAAc;AACnB,YAAI,QAAQ,KAAK;AACb,eAAK,UAAU;;;;AAK3B,SAAK,cAAc,cAAc,CAAA;AACjC,SAAK,oBAAoB,KAAK,YAAY,CAAC,KAAK;EACpD;EAEA,OAAO,MAAM,OAAa;AACtB,QAAI,CAAC,OAAO;AACR,aAAO;;AAGX,UAAM,QAAQ,MAAM,MAAM,WAAW;AACrC,QAAI,CAAC,OAAO;AACR,aAAO;;AAGX,UAAM,OAAO,MAAM,CAAC;AACpB,UAAM,UAAU,MAAM,CAAC;AACvB,WAAO,IAAI,WAAU,MAAM,OAAO;EACtC;EAEA,UAAU,SAAe;AACrB,SAAK,aAAa;AAClB,WAAO;EACX;EAEQ,QAAK;AACT,QAAI,UAAU,KAAK,UAAU,GAAG;AAC5B,cAAQ,KAAK,GAAG,KAAK,MAAM,kBAAkB,KAAK,UAAU,EAAE;;EAEtE;EAEA,QAAQ,OAAyB;AAC7B,QAAI,kBAAkB,KAAK,GAAG;AAC1B,aAAO;;AAGX,QAAI,KAAK,aAAa,OAAO,KAAK,gBAAgB,KAAK;AACnD,aAAO;;AAGX,QAAI,WAAmB;AACvB,QAAI,cAAsB;AAC1B,QAAI,SAAS,KAAK,GAAG;AACjB,YAAM,QAAQ,MAAM,MAAM,WAAW;AACrC,UAAI,CAAC,OAAO;AACR,eAAO;;AAGX,iBAAW,MAAM,CAAC;AAClB,oBAAc,MAAM,CAAC;WAEpB;AACD,iBAAW,MAAM;AACjB,oBAAc,MAAM;;AAGxB,WAAO,KAAK,aAAa,aACjB,KAAK,iBAAiB,OAAO,KAAK,iBAAiB;EAC/D;EAEA,cAAc,KAAa,OAAa;AACpC,UAAM,aAAa,GAAG,KAAK,YAAY,KAAK,GAAG,IAAI,KAAK;AACxD,WAAO,IAAI,WAAU,KAAK,UAAU,YAAY,KAAK,UAAU;EACnE;EAEA,IAAI,WAAQ;AACR,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,OAAI;AACJ,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,SAAM;AACN,WAAO,KAAK;EAChB;EAEA,IAAI,cAAW;AACX,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,QAAK;AACL,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,mBAAgB;AACZ,WAAO,KAAK;EAChB;EAEA,IAAI,YAAS;AACT,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,aAAU;AACV,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,aAAU;AACV,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,wBAAqB;AACjB,WAAO,KAAK;EAChB;EAEA,IAAI,mBAAgB;AAChB,SAAK,MAAK;AACV,WAAO,KAAK;EAChB;EAEA,WAAQ;AACJ,QAAI,KAAK,WAAW,IAAI,GAAG,MAAM,KAAK;AAClC,aAAO,KAAK;WAEX;AACD,aAAO,KAAK;;EAEpB;EAEA,yBAAsB;AAClB,WAAO;MACH,CAAC,KAAK,KAAK,GAAG,KAAK,WAAW,IAAI,OAAK,MAAM,CAAC;;EAEtD;EAEA,aAAa,UAAgB;AACzB,QAAI,CAAC,UAAU;AACX,YAAM,IAAI,MAAM,0BAA0B;;AAG9C,QAAI,KAAK,kBAAkB;AACvB,iBAAW,WAAU,gBAAgB,QAAQ;AAC7C,iBAAW,GAAG,QAAQ,IAAI,KAAK,gBAAgB;;AAGnD,WAAO;EACX;EAEA,OAAO,gBAAgB,UAAgB;AACnC,UAAM,MAAM,SAAS,YAAY,GAAG;AACpC,QAAI,MAAM,IAAI;AACV,iBAAW,SAAS,UAAU,GAAG,GAAG;;AAExC,WAAO;EACX;;AAGE,SAAU,OAAO,OAAe,UAAkB,YAAoB;AACxE,SAAO,IAAI,UAAU,OAAO,OAAO,UAAU;AACjD;AAEM,SAAU,WAAW,OAAa;AACpC,SAAO,OAAO,KAAK,MAAM,KAAK;AAClC;;;ACpOA,IAAM,QAAsB,2BAAW,OAAO;AAyBvC,IAAM,aAA2B,sBAAM,QAAQ,QAAQ,OAAO,KAAK;AAenE,IAAM,YAA0B,sBAAM,OAAO,KAAK;;;ACrCzD,IAAM,WAAW,oBAAI,IAAG;AAKlB,IAAO,WAAP,MAAe;;;;;;;;EAWjB,YACoB,KACA,OACC,mBACd,MAAc;AAHD,SAAA,MAAA;AACA,SAAA,QAAA;AACC,SAAA,iBAAA;AAEjB,SAAK,OAAO,KAAK,IAAI,CAACC,OAAMA,GAAE,kBAAiB,CAAE;AACjD,WAAO,OAAO,IAAI;EACtB;;;;;EAMA,eAAe,MAAiB;AAC5B,QAAI,KAAK,KAAK,SAAS,KAChB,KAAK,KAAK,QAAQ,KAAK,OAAO,MAAM,IAAI;AAC3C,UAAI,MAAM,SAAS,IAAI,KAAK,OAAO;AACnC,UAAI,CAAC,KAAK;AACN,iBAAS,IAAI,KAAK,SAAS,MAAM,oBAAI,IAAG,CAAE;;AAG9C,UAAI,CAAC,IAAI,IAAI,KAAK,GAAG,GAAG;AACpB,YAAI,IAAI,KAAK,GAAG;AAChB,gBAAQ,KAAK,WAAW,KAAK,OAAO,+BAA+B,KAAK,GAAG,EAAE;;;AAIrF,QAAI,KAAK,gBAAgB;AACrB,WAAK,aAAa,KAAK,KAAK,KAAK,MAAM,SAAQ,CAAE;eAE5C,KAAK,OAAO,MAAM;AACtB,WAAiB,KAAK,GAAG,IAAI,KAAK;eAE9B,KAAK,UAAU,OAAO;AAC3B,WAAK,gBAAgB,KAAK,GAAG;eAExB,KAAK,UAAU,MAAM;AAC1B,WAAK,aAAa,KAAK,KAAK,EAAE;eAEzB,WAAW,KAAK,KAAK,GAAG;AAC7B,WAAK,MAAM,IAAI;WAEd;AACD,WAAK,aAAa,KAAK,KAAK,KAAK,MAAM,SAAQ,CAAE;;EAEzD;;AAGJ,SAAS,KAAqD,KAAQ,OAAU,mBAA4B,MAAc;AACtH,SAAO,IAAI,SAAS,KAAK,OAAO,gBAAgB,GAAG,IAAI;AAC3D;AAEM,SAAU,OAAOC,MAAY;AAC/B,SAAOA,gBAAe;AAC1B;AAiUM,SAAU,aAAa,QAAgB;AACzC,WAAS,OAAO,OAAO,QAAQ;AAC/B,SAAO,KAAK,cAAc,CAAC,YAAyB,QAAQ,UAAU,IAAI,GAAG,MAAM,GAAG,KAAK;AAC/F;AAqLM,SAAU,OAAO,OAAsB;AAAI,SAAO,KAAK,UAAU,OAAO,OAAO,UAAU,SAAS,UAAU,OAAO,SAAS,UAAU,OAAO;AAAG;AAiXtJ,SAAS,UAAU,OAAmB;AAClC,MAAI,iBAAiB,KAAK;AACtB,YAAQ,MAAM;;AAGlB,SAAO;AACX;AAKM,SAAU,IAAI,OAAmB;AACnC,SAAO,KAAK,OAAO,UAAU,KAAK,GAAG,OAAO,SAAS,SAAS,UAAU,OAAO,SAAS,UAAU,UAAU,SAAS,OAAO;AAChI;AA6CM,SAAU,WAAW,OAAa;AAAI,SAAO,KAAK,SAAS,OAAO,KAAK;AAAG;AAe1E,SAAU,KAAK,OAAyB;AAC1C,MAAI,CAAC,SAAS,KAAK,GAAG;AAClB,YAAQ,MAAM;;AAElB,SAAO,KAAK,QAAQ,OAAO,OAAO,UAAU,SAAS,WAAW,SAAS,QAAQ,UAAU,UAAU,UAAU,SAAS,MAAM;AAClI;AA8BM,SAAU,MAAM,OAAsB;AAAI,SAAO,KAAK,SAAS,OAAO,OAAO,UAAU,SAAS,UAAU,OAAO,SAAS,UAAU,OAAO;AAAG;;;AC98B9I,SAAU,GAAG,OAAa;AAC5B,SAAO,GAAG,KAAK;AACnB;;;ACzEM,SAAU,gBAA6CC,MAAQ;AACjE,MAAI,CAAC,SAASA,IAAG,GAAG;AAChB,WAAO;;AAGX,QAAM,OAAOA;AACb,SAAO,KAAK,mBAAmB;AACnC;AAIM,SAAU,eAAgD,MAA0B;AACtF,MAAI,gBAAgB,IAAI,GAAG;AACvB,WAAO,KAAK;aAEP,SAAS,IAAI,GAAG;AACrB,WAAO,WAAW,IAAI;;AAG1B,SAAO;AACX;AAMM,SAAU,oBAAiDA,MAAQ;AACrE,SAAO,SAASA,IAAG,KACZ,oBAAoBA,QACpB,WAAYA,KAAY,cAAc;AACjD;AAgCM,SAAU,kBAAuD,MAAmB,SAAkB,qBAAuD,IAAE;AACjK,SAAO,eAAe,IAAI;AAC1B,MAAI,SAAS;AACT,SAAK,MAAM,eAAe,SAAS;AACnC,UAAM,QAAQ,iBAAiB,IAAI;AACnC,QAAI,MAAM,YAAY,QAAQ;AAC1B,WAAK,MAAM,UAAU,sBAAsB;;SAG9C;AACD,SAAK,MAAM,UAAU;;AAE7B;AAEM,SAAU,mBAAwD,MAAiB;AACrF,SAAO,eAAe,IAAI;AAC1B,SAAO,KAAK,MAAM,YAAY;AAClC;AAiDM,SAAU,WAA4C,YAAwB,UAAwB;AACxG,QAAM,OAAO,mBAAmB,UAC1B,UACA,mBAAmB,aACf,UACA,SAAS,OAAO,IACZ,SAAS,cAAc,OAAO,IAC9B,QAAQ;AAEtB,QAAM,SAAS,gBAAgB,sBACzB,KAAK,UACL;AAEN,aAAW,SAAS,UAAU;AAC1B,QAAI,UAAU,KAAK,GAAG;AAClB,UAAI,iBAAiB,MAAM;AACvB,eAAO,YAAY,KAAK;iBAEnB,gBAAgB,KAAK,GAAG;AAC7B,eAAO,YAAY,eAAe,KAAK,CAAC;iBAEnC,oBAAoB,KAAK,GAAG;AACjC,YAAI,EAAE,gBAAgB,aAAa;AAC/B,gBAAM,eAAe,IAAI;;aAG5B;AACD,eAAO,YAAY,SAAS,eAAe,MAAM,eAAc,CAAE,CAAC;;;;AAK9E,SAAO;AACX;AAsBM,SAAU,WAA4C,UAAgB;AACxE,SAAO,SAAS,cAAiB,QAAQ;AAC7C;AA4CM,SAAU,QAAmIC,UAAY,MAAoB;AAC/K,MAAI,OAA8B;AAElC,QAAM,UAAU,KAAK,OAAO,MAAM,EAAE,OAAO,OAAK,EAAE,QAAQ,QAAQ,EAAE,QAAQ,OAAO;AACnF,aAAW,UAAU,SAAS;AAC1B,QAAI,OAAO,QAAQ,SAAS;AACxB,aAAO,OAAO;AACd,kBAAY,MAAM,MAAM;eAEnB,OAAO,QAAQ,MAAM;AAC1B,aAAO,SAAS,eAAe,OAAO,KAAY;AAClD,UAAI,MAAM;AACN,oBAAY,MAAM,MAAM;;;;AAKpC,MAAI,QAAQ,KAAK,YAAYA,MAAK,YAAW,GAAI;AAC7C,YAAQ,KAAK,eAAeA,MAAK,YAAW,CAAE,0BAA0B,KAAK,OAAO,IAAI;;AAG5F,MAAI,CAAC,MAAM;AACP,WAAO,SAAS,cAAcA,KAAI;;AAGtC,aAAW,MAAM,GAAG,IAAI;AAExB,SAAO;AACX;AAMM,SAAU,cAAcC,MAAQ;AAClC,SAAO,SAASA,IAAG,KACZ,cAAcA,QACd,UAAUA,KAAI,QAAQ;AACjC;AAyIM,SAAU,aAAa,MAAoB;AAAuB,SAAO,QAAQ,UAAU,GAAG,IAAI;AAAG;AACrG,SAAU,UAAU,MAAoB;AAAuB,SAAO,UAAU,GAAG,MAAM,KAAK,QAAQ,CAAC;AAAG;AAE1G,SAAU,iBAAiB,MAAoB;AAAuB,SAAO,OAAO,GAAG,MAAM,UAAU,OAAO,aAAa,CAAC;AAAG;AAc/H,SAAU,UAAU,MAAoB;AAAuB,SAAO,QAAQ,UAAU,GAAG,IAAI;AAAG;AAqClG,SAAU,OAAO,MAAoB;AAAsB,SAAO,QAAQ,OAAO,GAAG,IAAI;AAAG;;;ACpd3F,IAAO,aAAP,cAAqD,MAAK;EAC5D,IAAa,OAAI;AACb,WAAO,MAAM;EACjB;EAEA,YAAY,MAAkB,eAAyB;AACnD,UAAM,MAAM,aAAa;EAC7B;;AA8BE,IAAO,mBAAP,cAAiG,kBAAiB;EAC3G,WAAW,SAAqC;AACrD,UAAM,WAAW,OAAO;EAC5B;EAES,cAAc,SAAqC;AACxD,UAAM,cAAc,OAAO;EAC/B;EAES,uBAA2D,OAAe,MAAkB,UAA0E,SAA2C;AACtN,UAAM,uBAAuB,OAAO,MAAgB,UAAgD,OAAO;EAC/G;EAES,iBAAqD,MAAkB,UAA0E,SAA2C;AACjM,UAAM,iBAAiB,MAAgB,UAAgD,OAAO;EAClG;EAES,oBAAwD,MAAkB,UAAwE;AACvJ,UAAM,oBAAoB,MAAgB,QAA8C;EAC5F;EAES,oBAAwD,MAAiB;AAC9E,WAAO,MAAM,oBAAoB,IAAc;EACnD;;;;AC5DE,SAAU,cAAiB,UAAsB;AACnD,MAAI,SAAS,UAAU,KAAK;AACxB,UAAM,IAAI,MAAM,sCAAsC,SAAS,WAAW;;AAE9E,SAAO;AACX;;;ACJM,SAAU,eAAkB,UAAsB;AACpD,QAAM,EAAE,QAAO,IAAK,cAAc,QAAQ;AAC1C,SAAO;AACX;;;ACFM,IAAO,eAAP,cACM,iBAAmB;EAD/B,cAAA;;AAGqB,SAAA,WAAW,IAAI,MAAK;AAC7B,SAAA,QAAgB;AAChB,SAAA,QAAgB;AAChB,SAAA,MAAc;AACd,SAAA,MAAc;EA4C1B;EA1CI,IAAc,IAAC;AACX,WAAO,KAAK,QAAQ,IACd,KAAK,QAAQ,KAAK,QAClB;EACV;EAEA,OAAO,OAAe,OAAe,KAAc,KAAY;AAC3D,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,MAAM;AACX,eAAW,UAAU,KAAK,UAAU;AAChC,aAAO,OAAO,OAAO,OAAO,KAAK,GAAG;;EAE5C;EAEA,OAAO,MAAe;AAClB,SAAK,SAAS,KAAK,IAAI;AACvB,SAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK,KAAK,GAAG;EAC1D;EAEA,QAAK;AACD,SAAK,OAAO,GAAG,CAAC;AAChB,SAAK,OAAM;EACf;EAEA,MAAM,KAAY;AACd,SAAK,OAAO,GAAG,GAAG,OAAO,UAAU;EACvC;EAEA,IAAI,KAAY;AACZ,SAAK,OAAO,GAAG,GAAG,OAAO,MAAM;AAC/B,SAAK,OAAM;EACf;EAEQ,SAAM;AACV,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,MAAM;AACX,eAAW,KAAK,QAAQ;EAC5B;;;;ACnDE,IAAO,wBAAP,cAAqC,aAAY;EACnD,YAA6B,GAA4B,MAAgC;AACrF,UAAK;AADoB,SAAA,IAAA;AAA4B,SAAA,OAAA;EAEzD;EAES,OAAO,OAAe,OAAe,KAAc,KAAY;AACpE,UAAM,OAAO,OAAO,OAAO,KAAK,GAAG;AACnC,SAAK,KAAK,OAAO,KAAK,GAAG,OAAO,OAAO,GAAG;EAC9C;;;;ACRE,IAAO,6BAAP,MAAiC;EAQnC,YAA6B,MAAe;AAAf,SAAA,OAAA;AAPrB,SAAA,cAAc;AAGb,SAAA,uBAAuB,IAAI,MAAK;AACxB,SAAA,qBAAqB,IAAI,MAAK;AAC9B,SAAA,oBAAoB,IAAI,MAAK;AAG1C,SAAK,QAAQ,YAAY,IAAG;AAE5B,aAAS,IAAI,GAAG,IAAI,KAAK,mBAAmB,QAAQ,EAAE,GAAG;AACrD,WAAK,kBAAkB,CAAC,IAAI;AAC5B,WAAK,qBAAqB,CAAC,IAAI,IAAI,sBAAsB,GAAG,IAAI;;EAExE;EAEU,eAAe,QAAe;AACpC,aAAS,UAAU;AACnB,SAAK,eAAe;AACpB,SAAK,mBAAmB,KAAK,MAAM;AACnC,SAAK,kBAAkB,KAAK,CAAC;AAC7B,UAAM,QAAQ,IAAI,sBAAsB,KAAK,qBAAqB,QAAQ,IAAI;AAC9E,SAAK,qBAAqB,KAAK,KAAK;AACpC,WAAO;EACX;EAGA,OAAO,GAAW,UAAkB,UAAkB,KAAY;AAC9D,QAAI,KAAK,MAAM;AACX,WAAK,kBAAkB,CAAC,IAAI,WAAW;AACvC,UAAI,QAAQ;AACZ,eAAS,IAAI,GAAG,IAAI,KAAK,mBAAmB,QAAQ,EAAE,GAAG;AACrD,iBAAS,KAAK,kBAAkB,CAAC,IAAI,KAAK,mBAAmB,CAAC;;AAGlE,YAAMC,OAAM,YAAY,IAAG;AAC3B,YAAM,QAAQA,OAAM,KAAK;AACzB,YAAM,MAAM,KAAK,QAAQA,OAAM,QAAQ,KAAK,cAAc;AAC1D,WAAK,KAAK,OAAO,OAAO,KAAK,aAAa,KAAK,GAAG;;EAE1D;;;;ACzCE,SAAU,sBAAsB,MAAiB,oBAA4B;AAC/E,QAAM,UAAU,IAAI,+BAA+B,oBAAoB,IAAI;AAC3E,SAAO,QAAQ;AACnB;AAYA,IAAM,iCAAN,cAA6C,2BAA0B;EAEnE,YAAY,oBAA8B,MAAe;AACrD,UAAM,IAAI;AAEV,eAAW,UAAU,oBAAoB;AACrC,WAAK,eAAe,MAAM;;EAElC;;;;ACvBE,SAAU,gBAAsB,MAAiB,OAAY,UAA6D;AAC5H,QAAM,UAAU,MAAM,IAAI,MAAM,CAAC;AACjC,QAAM,QAAQ,sBAAsB,MAAM,OAAO;AACjD,SAAO,QAAQ,IAAI,MAAM,IAAI,OAAO,MAAM,MAAK;AAC3C,UAAMC,QAAO,MAAM,CAAC;AACpB,IAAAA,MAAK,MAAK;AACV,UAAM,QAAQ,MAAM,SAAS,MAAMA,OAAM,CAAC;AAC1C,IAAAA,MAAK,IAAG;AACR,WAAO;EACX,CAAC,CAAC;AACN;;;ACNA,eAAsB,sBAAsB,MAAiB,UAAmB;AAC5E,QAAM,UAAU,IAAI,MAAc,SAAS,MAAM;AACjD,QAAM,YAAY,IAAI,MAA2B,SAAS,MAAM;AAChE,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACtC,UAAM,UAAU,SAAS,CAAC;AAC1B,YAAQ,CAAC,IAAI,QAAQ,CAAC;AACtB,cAAU,CAAC,IAAI,QAAQ,CAAC;;AAG5B,QAAM,QAAQ,sBAAsB,MAAM,OAAO;AACjD,QAAM,QAAQ,IAAI,MAAoB,SAAS,MAAM;AACrD,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACtC,UAAM,CAAC,IAAI,UAAU,CAAC,EAAE,MAAM,CAAC,CAAC;;AAGpC,SAAO,MAAM,QAAQ,IAAI,KAAK;AAClC;;;ACLA,SAAS,kBAAqBC,SAAa,WAAmB;AAC1D,MAAI,CAAC,SAASA,IAAG,GAAG;AAChB,WAAO;;AAGX,EAAAA,OAAMA;AAEN,aAAW,YAAY,WAAW;AAC9B,QAAI,EAAE,YAAYA,OAAM;AACpB,aAAO;;AAGX,UAAM,OAAOA,KAAI,QAAQ;AACzB,QAAI,CAAC,WAAW,IAAI,GAAG;AACnB,aAAO;;;AAIf,SAAO;AACX;AAEM,SAAU,aAAaA,MAAQ;AACjC,SAAO,kBAAkBA,MAAK,SAAS;AAC3C;AAEM,SAAU,cAAcA,MAAQ;AAClC,SAAO,kBAAkBA,MAAK,SAAS;AAC3C;AAEM,SAAU,WAAWA,MAAQ;AAC/B,SAAO,kBAAkBA,MAAK,OAAO;AACzC;AAMM,SAAU,QAAQ,KAAQ;AAC5B,MAAI,aAAa,GAAG,GAAG;AACnB,QAAI,QAAO;;AAGf,MAAI,WAAW,GAAG,GAAG;AACjB,QAAI,MAAK;;AAGb,MAAI,cAAc,GAAG,GAAG;AACpB,QAAI,QAAO;;AAEnB;;;ACrDO,IAAM,gBAA4C,uBAAuB;AACzE,IAAM,eAA2C,sBAAsB;AACvE,IAAM,0BAAwC;AAC9C,IAAM,qBAAmC,CAAC,2BAA2B,qBAAqB;AAC1F,IAAM,iBAA+B,CAAC,2BAA2B,uBAAuB;AAEzF,SAAU,aAAaC,MAAQ;AACjC,SAAqB,iBAAiBA,gBAAe;AACzD;AAMM,SAAU,kBAAkBC,MAAQ;AACtC,SAAO,sBAAsBA,gBAAe;AAChD;AAEM,SAAU,cAAc,KAAQ;AAClC,SAAO,kBAAkB,eAAe;AAC5C;AAEM,SAAU,YAAY,KAAQ;AAChC,SAAO,eAAe;AAC1B;AAKM,SAAU,SAASA,MAAQ;AAC7B,SAAO,aAAaA,IAAG,KAChB,kBAAkBA,IAAG;AAChC;AAQM,SAAU,wBAAwB,MAAmB,KAAgB;AACvE,QAAM,IAAI,KAAK,WAAW,IAAI;AAC9B,MAAI,kBAAkB,CAAC,GAAG;AACtB,UAAM,IAAI,MAAM,wCAAwC;;AAE5D,IAAE,UAAU,KAAK,GAAG,CAAC;AACzB;AAEM,SAAU,sBAAsB,MAAmB,KAAc;AACnE,QAAM,IAAI,KAAK,WAAW,IAAI;AAC9B,MAAI,kBAAkB,CAAC,GAAG;AACtB,UAAM,IAAI,MAAM,wCAAwC;;AAE5D,IAAE,aAAa,KAAK,GAAG,CAAC;AAC5B;AAEA,SAAS,kBAAe;AACpB,MAAI;AACA,UAAM,OAAO,IAAI,gBAAgB,GAAG,CAAC;AACrC,UAAM,IAAI,KAAK,WAAW,IAAI;AAC9B,WAAO,KAAK;WAET,KAAK;AACR,WAAO;;AAEf;AAEO,IAAM,uCAAqD,sBAAsB,gBAAe;AAEhG,IAAM,sBAAoC,wCAAwC,yBACpE,iBAAiB,gBAC/B;AAEA,IAAM,iBAA6C,gBACpD,eACA;AAEN,SAAS,kBAAe;AACpB,MAAI;AACA,UAAM,OAAO,IAAI,gBAAgB,GAAG,CAAC;AACrC,UAAM,IAAI,KAAK,WAAW,QAAQ;AAClC,WAAO,KAAK;WAET,KAAK;AACR,WAAO;;AAEf;AAEO,IAAM,uCAAqD,sBAAsB,gBAAe;AAEjG,SAAU,sBAAsB,OAAe,QAAc;AAC/D,SAAO,IAAI,gBAAgB,OAAO,MAAM;AAC5C;AAEM,SAAU,aAAa,GAAW,GAAS;AAC7C,MAAI,OAAW;AACX,UAAM,IAAI,MAAM,yCAAyC;;AAG7D,SAAO,OAAO,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC;AACrC;AAEM,SAAU,qCAAqC,KAAgB;AACjE,QAAM,OAAO,sBAAsB,IAAI,OAAO,IAAI,MAAM;AACxD,0BAAwB,MAAM,GAAG;AACjC,SAAO;AACX;AAEM,SAAU,4BAA4B,KAAgB;AACxD,MAAI,OAAW;AACX,UAAM,IAAI,MAAM,yCAAyC;;AAG7D,QAAM,OAAO,aAAa,IAAI,OAAO,IAAI,MAAM;AAC/C,0BAAwB,MAAM,GAAG;AACjC,SAAO;AACX;AAEO,IAAM,qCAAmD,wCAAwC,wCACnF,iBAAiB,+BAC/B;AAED,SAAU,mCAAmC,KAAc;AAC7D,QAAM,OAAO,sBAAsB,IAAI,OAAO,IAAI,MAAM;AACxD,wBAAsB,MAAM,GAAG;AAC/B,SAAO;AACX;AAEM,SAAU,0BAA0B,KAAc;AACpD,MAAI,OAAW;AACX,UAAM,IAAI,MAAM,yCAAyC;;AAG7D,QAAM,OAAO,aAAa,IAAI,OAAO,IAAI,MAAM;AAC/C,wBAAsB,MAAM,GAAG;AAC/B,SAAO;AACX;AAEO,IAAM,mCAAiD,wCAAwC,sCACjF,iBAAiB,6BAC/B;AA0DD,SAAU,cAAc,MAAmB,GAAW,GAAW,aAAa,GAAC;AACjF,MAAI,KAAK,MAAM,IAAI,UAAU;AAC7B,MAAI,KAAK,MAAM,IAAI,UAAU;AAC7B,MAAI,KAAK,SAAS,KACX,KAAK,UAAU,GAAG;AACrB,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,WAAO;;AAEX,SAAO;AACX;AAEM,SAAU,qBAAqB,KAAoB;AACrD,SAAO,UAAW,IAAkB,YAAY;AACpD;AAEM,SAAU,uBAAuB,KAAgB,GAAW,GAAW,aAAa,GAAC;AACvF,QAAM,2BAA2B,IAAI,uBACjC,kBAAkB,IAAI,cACtB,eAAe,IAAI,WACnB,UAAU,IAAI,MACd,UAAU,cACN,IAAI,QACJ,GACA,GACA,UAAU;AAElB,MAAI,SAAS;AACT,QAAI,wBAAwB;AAC5B,QAAI,eAAe;AACnB,QAAI,YAAY;AAChB,QAAI,OAAO;;AAGf,SAAO;AACX;AAeM,SAAU,eAAe,KAAsB,GAAW,GAAW,aAAa,GAAC;AACrF,MAAI,qBAAqB,GAAG,GAAG;AAC3B,WAAO,uBAAuB,KAAK,GAAG,GAAG,UAAU;SAElD;AACD,WAAO,cACH,IAAI,QACJ,GACA,GACA,UAAU;;AAEtB;AA0DM,SAAUC,SAAQ,KAAQ;AAC5B,MAAI,SAAS,GAAG,GAAG;AACf,QAAI,QAAQ,IAAI,SAAS;SAExB;AACD,YAAW,GAAG;;AAEtB;;;AC5UO,IAAM,KAAkB,KAAK;AAC7B,IAAM,SAAsB,MAAM;AAClC,IAAM,MAAoB,IAAI;AAK9B,IAAM,WAAW;AACjB,IAAM,WAAW,CAAC;AAkGnB,SAAU,MAAM,GAAW,KAAa,KAAW;AACrD,SAAO,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC;AACzC;;;ACtCM,SAAU,KAAKC,IAAW,GAAS;AACrC,QAAM,IAAIA,KAAI;AACd,SAAS,OAAO,IAAI,KAAK,IAAI,CAAC,KAAO,IAAI,KAAK,IAAI,IAAI,CAAC;AAC3D;;;AC7EM,SAAU,UAAaC,OAAcC,SAAgB;AACvD,QAAM,MAAM;AACZ,MAAI,QAAQ,IAAID,KAAI;AACpB,MAAI,kBAAkB,KAAK,GAAG;AAC1B,QAAI,kBAAkBC,OAAM,GAAG;AAC3B,YAAM,IAAI,MAAM,YAAYD,KAAI,QAAQ;;AAE5C,YAAQC,QAAM;AACd,QAAID,KAAI,IAAI;;AAEhB,SAAO;AACX;;;ACbA,IAAM,EAAE,uBAAuB,aAAa,cAAc,4BAA4B,kBAAkB,aAAa,aAAa,mBAAmB,cAAc,mBAAmB,eAAe,iBAAiB,gBAAgB,sBAAsB,gBAAgB,UAAU,aAAa,aAAa,OAAO,eAAe,cAAc,eAAe,aAAa,YAAY,UAAU,mBAAmB,gBAAgB,MAAM,sBAAsB,MAAM,MAAM,YAAY,mBAAmB,aAAa,WAAW,iBAAiB,gBAAgB,sBAAsB,UAAU,OAAO,QAAQ,cAAc,eAAe,uBAAuB,iBAAiB,kBAAkB,mBAAmB,sBAAsB,gBAAgB,qBAAqB,OAAO,OAAO,oBAAoB,iBAAiB,wBAAwB,mBAAmB,yBAAyB,oBAAoB,cAAc,YAAY,uBAAuB,uBAAuB,aAAa,mBAAmB,yBAAyB,kBAAkB,mBAAmB,kBAAkB,cAAc,eAAe,mBAAmB,cAAc,OAAO,WAAW,gBAAgB,mBAAmB,wBAAwB,kBAAkB,aAAa,eAAe,kBAAkB,aAAa,mBAAmB,WAAW,oBAAoB,wBAAwB,uBAAuB,aAAa,oBAAoB,cAAc,kBAAkB,wBAAwB,qBAAqB,qBAAqB,4BAA4B,sBAAsB,YAAY,gBAAgB,gBAAgB,kBAAkB,kBAAkB,kBAAkB,eAAe,cAAc,YAAY,kBAAkB,kCAAkC,kCAAkC,OAAO,iBAAiB,uBAAuB,iBAAiB,YAAY,wBAAwB,wBAAwB,wBAAwB,WAAW,KAAK,SAAS,oBAAoB,WAAW,SAAS,mBAAmB,OAAO,OAAO,cAAc,mBAAmB,yBAAyB,oBAAoB,YAAY,OAAO,eAAe,iBAAiB,uBAAuB,sBAAsB,2BAA2B,qBAAqB,mBAAmB,aAAa,YAAY,oBAAoB,wBAAwB,0BAA0B,yBAAyB,4BAA4B,eAAe,sBAAsB,sBAAsB,qBAAqB,SAAS,mBAAmB,4BAA4B,aAAa,qBAAqB,mBAAmB,mBAAmB,iBAAiB,eAAe,eAAe,KAAK,qBAAqB,eAAe,QAAQ,WAAW,gBAAgB,sBAAsB,iBAAiB,OAAO,YAAY,MAAM,OAAO,mBAAmB,WAAW,YAAY,oBAAoB,UAAU,cAAc,gBAAgB,cAAc,mBAAmB,0BAA0B,2BAA2B,0BAA0B,2BAA2B,sBAAsB,mBAAmB,QAAQ,aAAa,gBAAgB,UAAU,cAAc,YAAY,sBAAsB,iBAAiB,OAAO,UAAU,gBAAgB,WAAW,SAAS,SAAS,aAAa,MAAM,mBAAmB,mBAAmB,sBAAsB,qBAAqB,oBAAoB,oBAAoB,mBAAmB,sBAAsB,sBAAsB,kBAAkB,aAAa,wBAAwB,cAAc,kBAAkB,mBAAmB,eAAe,2BAA2B,4BAA4B,2BAA2B,4BAA4B,YAAY,kBAAkB,YAAY,cAAc,eAAe,0BAA0B,gBAAgB,eAAe,qBAAqB,qBAAqB,UAAU,cAAc,sBAAsB,0BAA0B,oBAAoB,WAAW,wBAAwB,wBAAwB,wBAAwB,wBAAwB,oBAAoB,cAAc,kBAAkB,gBAAgB,MAAM,mBAAmB,OAAO,qBAAqB,eAAe,aAAa,YAAY,kBAAkB,QAAQ,gBAAgB,iBAAiB,0BAA0B,oBAAoB,iBAAiB,iBAAiB,eAAe,sBAAsB,uBAAuB,YAAY,yBAAyB,6BAA6B,wBAAwB,kBAAkB,UAAU,kBAAkB,YAAY,mBAAmB,wBAAwB,uBAAuB,uBAAuB,uBAAuB,wBAAwB,wBAAwB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,kBAAkB,sBAAsB,0BAA0B,0BAA0B,uBAAuB,uBAAuB,uBAAuB,iBAAiB,iBAAiB,yBAAyB,yBAAyB,sBAAsB,UAAU,iBAAiB,mBAAmB,KAAK,WAAW,eAAe,WAAW,kBAAkB,qBAAqB,gBAAgB,kBAAkB,yBAAyB,oBAAoB,cAAc,+BAA+B,yBAAyB,gBAAgB,OAAO,aAAa,WAAW,gBAAgB,gBAAgB,OAAO,qBAAqB,eAAe,WAAW,YAAY,WAAW,UAAU,gBAAgB,aAAa,QAAQ,QAAQ,sBAAsB,gBAAgB,WAAW,qBAAqB,aAAa,WAAW,iBAAiB,QAAQ,gBAAgB,gBAAgB,wBAAwB,gBAAgB,iBAAiB,iBAAiB,iBAAiB,cAAc,iBAAiB,iBAAiB,iBAAiB,qBAAqB,kBAAkB,qBAAqB,OAAO,uBAAuB,2BAA2B,qBAAqB,SAAS,eAAe,qBAAqB,eAAe,yBAAyB,mBAAmB,UAAU,qBAAqB,uBAAuB,mBAAmB,oBAAoB,cAAc,mBAAmB,WAAW,uBAAuB,uBAAuB,sBAAsB,6BAA6B,SAAS,eAAe,aAAa,eAAe,kBAAkB,oBAAoB,iBAAiB,uBAAuB,uBAAuB,mBAAmB,cAAc,SAAS,SAAS,SAAS,qBAAqB,cAAc,gBAAgB,qBAAqB,wBAAwB,uBAAuB,4BAA4B,mBAAmB,eAAe,YAAY,mBAAmB,kBAAkB,qBAAqB,YAAY,iBAAiB,eAAe,cAAc,aAAa,IAAI;;;ACGz2N,SAAU,OAAOE,MAAQ;AAC3B,SAAO,UAAUA,IAAG,KACbA,KAAI;AACf;AAEM,SAAU,WAAWA,MAAQ;AAC/B,SAAO,UAAUA,IAAG,KACbA,KAAI;AACf;AAEA,SAAS,gBAAoCC,OAAcD,MAAQ;AAC/D,SAAO,WAAWA,IAAG,KACdA,KAAI,SAASC;AACxB;AAEM,SAAU,oBAAoBD,MAAQ;AACxC,SAAO,gBAAgB,qBAAqBA,IAAG;AACnD;AA6BM,SAAU,WAAWE,MAAQ;AAC/B,SAAO,UAAUA,IAAG,KACZA,KAAiB;AAC7B;;;AC3CM,SAAU,eAAeC,MAAQ;AACnC,SAAO,UAAUA,IAAG,KACb,WAAWA,KAAI,MAAM;AAChC;AASM,SAAU,cAAcC,MAAY;AACtC,MAAI,eAAeA,IAAG,GAAG;AACrB,WAAOA,KAAI;;AAGf,SAAOA;AACX;AAEM,SAAU,iBAAiBA,MAAc,SAAgB;AAC3D,EAAAA,OAAM,cAAcA,IAAG;AACvB,EAAAA,KAAI,UAAU;AACd,SAAO;AACX;AAOM,SAAU,qBAAqBC,MAAY;AAC7C,MAAI,CAACA,MAAK;AACN,WAAO;;AAGX,EAAAA,OAAM,cAAcA,IAAG;AACvB,SAAOA,MAAK;AACR,QAAI,CAACA,KAAI,SAAS;AACd,aAAO;;AAEX,IAAAA,OAAMA,KAAI;;AAGd,SAAO;AACX;AAMM,SAAU,SAA4BC,SAAW,UAAmB;AACtE,QAAM,QAAQ,SACT,OAAO,SAAS,EAChB,IAAI,aAAa;AACtB,MAAI,MAAM,SAAS,GAAG;AAClB,kBAAcA,IAAG,EACZ,IAAI,GAAG,KAAK;;AAGrB,SAAOA;AACX;AASM,SAAU,IAAIC,UAAiB,MAAe;AAChD,QAAMC,OAAM,IAAI,SAAQ;AACxB,EAAAA,KAAI,OAAOD;AACX,WAASC,MAAK,GAAG,IAAI;AACrB,SAAOA;AACX;AAOM,SAAU,iBAAiBC,MAAc,SAAgB;AAC3D,EAAAA,OAAM,cAAcA,IAAG;AACvB,MAAI,cAAcA,IAAG,GAAG;AACpB,IAAAA,KAAI,WAAW,CAAC;;AAExB;AAYM,SAAU,KAGdC,OAAc,MAAkB,KAAe;AAC7C,QAAMC,QAAO,IAAI,KAAK,MAAM,GAAG;AAC/B,EAAAA,MAAK,OAAOD;AACZ,SAAOC;AACX;;;ACxGA,IAAM,cAAc,UAAU,uBAAuB,MAAM,oBAAI,IAAG,CAAuB;AACzF,IAAM,QAAQ;AACd,IAAM,MAAM;AAGZ,IAAM,aAAN,MAAgB;EASZ,YAA6B,QAAiB;AAAjB,SAAA,SAAA;AACzB,SAAK,MAAM,cAAc,KAAK,MAAM;AACpC,SAAK,OAAO,KAAK,IAAI,MAAM,MAAK;AAChC,SAAK,IAAI;AACT,SAAK,MAAM;AACX,SAAK,UAAU;AACf,SAAK,cAAc,KAAK;AAExB,SAAK,OAAO,uBAAuB,MAAM,SAAS,CAAC,QAAO;AACtD,UAAI,IAAI,QAAQ,SAAS,QAAQ;AAC7B,aAAK,IAAI,CAAC;;IAElB,CAAC;AAED,SAAK,OAAO,uBAAuB,MAAM,QAAQ,CAAC,QAAO;AACrD,UAAI,IAAI,QAAQ,SAAS,QAAQ;AAC7B,aAAK,IAAI,EAAE;;IAEnB,CAAC;AAED,SAAK,IAAI,SAAS,WAAQ;AACtB,UAAI,OAAO,KAAK,GAAG;AACf,aAAK,OAAO,QAAQ,KAAK;;IAEjC,CAAC;EACL;EAEA,IAAY,WAAQ;AAChB,WAAO,KAAK,OAAO;EACvB;EAEQ,IAAI,GAAS;AACjB,QAAI,CAAC,KAAK,aAAa,MAAM,MAAM,KAAK,IAAI,IAAI;AAC5C,WAAK,MAAM;AACX,WAAK,UAAU;;EAEvB;EAEA,cAAc,IAAU;AACpB,QAAI,KAAK,aAAa,KAAK,aAAa;AACpC,WAAK,cAAc,KAAK;AACxB,UAAI,KAAK,UAAU;AACf,aAAK,IAAI,EAAE;;;AAInB,QAAI,KAAK,SAAS;AACd,WAAK,KAAK,KAAK,MAAM;AAErB,UAAI,KAAK,MAAM,KAAK,KAAK,KAAK,KACvB,KAAK,MAAM,KAAK,KAAK,IAAI,GAAG;AAC/B,aAAK,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,CAAC;AACxC,aAAK,UAAU;;AAGnB,YAAM,IAAI,KAAK,KAAK,GAAG,GAAG;AAC1B,WAAK,IAAI,MAAM,KAAK,KAAK,IAAI,EACxB,eAAe,KAAK,MAAM,SAAS,KAAK;;EAErD;EAEA,UAAO;AACH,SAAK,OAAO,YAAY,IAAI;EAChC;;AAUE,SAAU,gBAAgBC,MAAa;AACzC,QAAM,QAAQ,YAAY,IAAIA,IAAG;AACjC,MAAI,OAAO;AACP,gBAAY,OAAOA,IAAG;AACtB,YAAQ,KAAK;;AAErB;AAEM,SAAU,aAAa,QAAwB,SAAgB;AACjE,QAAM,MAAM,YAAY,IAAI,MAAM;AAClC,MAAI,WAAW,KAAK;AAChB,QAAI,SAAS;AACT,kBAAY,IAAI,QAAQ,IAAI,WAAW,MAAM,CAAC;WAE7C;AACD,YAAM,SAAS,YAAY,IAAI,MAAM;AACrC,cAAQ,MAAM;AACd,kBAAY,OAAO,MAAM;;;AAGrC;;;AClHM,SAAU,QAAQC,MAAQ;AAC5B,QAAM,WAAW,IAAI,MAAK;AAC1B,QAAM,cAAc,oBAAI,IAAG;AAE3B,WAAS,KAAKA,IAAG;AACjB,SAAO,SAAS,SAAS,GAAG;AACxB,UAAM,OAAO,SAAS,MAAK;AAC3B,QAAI,QAAQ,CAAC,YAAY,IAAI,IAAI,GAAG;AAChC,kBAAY,IAAI,IAAI;AAEpB,UAAI,KAAK,QAAQ;AACb,iBAAS,KACL,KAAK,UACL,KAAK,QAAQ;;AAGrB,UAAI,KAAK,YAAY;AACjB,iBAAS,KAAK,GAAG,OAAO,OAAO,IAAI,CAAC;;AAGxC,UAAI,KAAK,YAAY;AACjB,iBAAS,KAAK,GAAG,KAAK,QAAQ;AAC9B,aAAK,MAAK;AACV,wBAAgB,IAAI;;AAGxB,UAAI,QAAQ,IAAI,GAAG;AACf,iBAAS,KAAK,GAAG,IAAI;;AAGzB,MAAAC,SAAQ,IAAI;;;AAIpB,cAAY,MAAK;AACrB;;;AChCA,IAAM,mBAAN,cAAiD,WAAa;EAC1D,YAAY,MAAyB,KAAgB;AACjD,UAAM,IAAI;AADuB,SAAA,MAAA;EAErC;;AAGE,IAAO,2BAAP,cAAwC,iBAA4B;EACtE,YAAY,KAAkC,UAAgB;AAC1D,UAAM,YAAY,GAAG;AADqB,SAAA,WAAA;EAE9C;;AAGE,IAAO,uBAAP,cAAoC,iBAAwB;EAC9D,YAAY,KAAgB;AACxB,UAAM,QAAQ,GAAG;EACrB;;AAGE,IAAO,wBAAP,cAAqC,iBAAyB;EAChE,YAAY,KAAgB;AACxB,UAAM,SAAS,GAAG;EACtB;;AAGE,IAAO,yBAAP,cAAsC,iBAA0B;EAClE,YAAY,KAAgB;AACxB,UAAM,UAAU,GAAG;EACvB;;AAWE,IAAgB,cAAhB,cACM,iBAAyB;EAKjC,YAA4B,KAAgB;AACxC,UAAK;AADmB,SAAA,MAAA;AAFpB,SAAA,aAA0B;EAIlC;EAEA,OAAI;AACA,SAAK,cAAc,IAAI,qBAAqB,IAAI,CAAC;EACrD;EAEA,KAAK,UAAgB;AACjB,SAAK,cAAc,IAAI,yBAAyB,MAAM,QAAQ,CAAC;AAC/D,SAAK,IAAI,OAAO,MAAK;EACzB;EAEA,MAAM,KAAK,MAAgB;AACvB,UAAM,KAAK,QAAQ,IAAI;AACvB,SAAK,cAAc,IAAI,sBAAsB,IAAI,CAAC;EACtD;EAEA,OAAI;AACA,SAAK,OAAM;AACX,SAAK,cAAc,IAAI,uBAAuB,IAAI,CAAC;EACvD;EAEA,KAAK,QAA4B;AAC7B,SAAK,aAAa,OAAO,IAAI,YAAY;AACzC,WAAO,QAAQ,QAAO;EAC1B;EAEA,IAAI,KAAa,OAAc;AAC3B,QAAI,UAAU,KAAK,UAAU,GAAG;AAC5B,WAAK,WAAW,IAAI,KAAK,KAAK;;EAEtC;EAEA,MAAM,MAAc,WAAmB,WAAc;AACjD,QAAI,UAAU,KAAK,UAAU,GAAG;AAC5B,WAAK,WAAW,MAAM,MAAM,WAAW,SAAS;;EAExD;EAEA,QAAQ,MAAc,WAAiB;AACnC,WAAO,KAAK,MAAM,KAAK,MAAM,MAAM,SAAS;EAChD;;;;ACxFJ,IAAM,oBAAoB;AAC1B,IAAM,cAAc,UAAoB,wBAAwB,MAAM,CAAA,CAAE;AAWlE,SAAU,SAAS,OAAsB;AAC3C,QAAM,YAAY,CAAA;AAClB,MAAI,MAAM,aAAa,MAAM,cAAc,UAAU;AACjD,cAAU,KAAK,MAAM,SAAS;;AAGlC,MAAI,MAAM,eAAe,MAAM,gBAAgB,UAAU;AACrD,cAAU,KAAK,MAAM,WAAW;;AAGpC,MAAI,MAAM,cAAc,MAAM,eAAe,UAAU;AACnD,cAAU,KAAK,MAAM,UAAU;;AAGnC,YAAU,KAAK,GAAG,MAAM,QAAQ,CAAC;AACjC,YAAU,KAAK,MAAM,UAAU;AAE/B,SAAO,UAAU,KAAK,GAAG;AAC7B;AAEA,eAAsB,SAAS,MAAgC,aAA4B,MAAM,MAAgB;AAC7G,MAAI,CAAC,SAAS,IAAI,GAAG;AACjB,WAAO,SAAS,IAAI;;AAGxB,MAAI,YAAY,QAAQ,IAAI,MAAM,IAAI;AAClC,iBAAa,cAAc;AAC3B,QAAI,MAAM;AACN,WAAK,MAAM,IAAI;;AAEnB,UAAM,QAAQ,MAAM,SAAS,MAAM,KAAK,MAAM,UAAU;AACxD,QAAI,MAAM;AACN,WAAK,IAAI,IAAI;;AAEjB,QAAI,MAAM,WAAW,GAAG;AACpB,cAAQ,KAAK,wBAAwB,IAAI,mHAAmH;WAE3J;AACD,kBAAY,KAAK,IAAI;;;AAGjC;;;AC1CM,IAAgB,YAAhB,MAAyB;EAS3B,IAAI,SAAM;AACN,QAAI,UAAU,KAAK,KAAK,GAAG;AACvB,YAAM,KAAK;;AAGf,WAAO,KAAK;EAChB;EAEA,IAAI,QAAK;AACL,WAAO,KAAK;EAChB;EAEA,IAAI,UAAO;AACP,WAAO,KAAK;EAChB;EAEA,IAAI,WAAQ;AACR,WAAO,KAAK;EAChB;EAKA,YAA4B,MAA8B,MAAwB;AAAtD,SAAA,OAAA;AAA8B,SAAA,OAAA;AA5BlD,SAAA,UAAmB;AACnB,SAAA,SAAiB;AACjB,SAAA,WAAW;AACX,SAAA,YAAY;AAsBZ,SAAA,UAAoC;AACpC,SAAA,SAAmC;AAGvC,SAAK,UAAU,IAAI,QAAQ,CAAC,SAAS,WAAU;AAC3C,WAAK,UAAU,CAAC,UAAkB;AAC9B,aAAK,UAAU;AACf,aAAK,YAAY;AACjB,gBAAQ,KAAK;MACjB;AAEA,WAAK,SAAS,CAAC,WAAkB;AAC7B,aAAK,SAAS;AACd,aAAK,YAAY;AACjB,eAAO,MAAM;MACjB;IACJ,CAAC;EACL;EAEA,MAAM,QAAQ,SAAiB;AAC3B,QAAI;AACA,YAAM,EAAE,cAAa,IAAK,MAAM,QAC3B,KAAK,KAAK,IAAI,EACd,OAAO,KAAK,IAAI,EAChB,KAAI;AACT,aAAO,CAAC,MAAM,iBAAiB,CAAC;aAE7B,KAAK;AACR,cAAQ,KAAK,GAAG;AAChB,aAAO,CAAC,MAAM,CAAC;;EAEvB;EAEA,MAAM,MAAM,SAAmB,MAAgB;AAC3C,QAAI;AACA,YAAM,SAAS,MAAM,KAAK,UAAU,SAAS,IAAI;AACjD,WAAK,QAAQ,MAAM;aAEhB,KAAK;AACR,WAAK,OAAO,GAAG;;EAEvB;EAIA,KAAK,OAAO,WAAW,IAAC;AACpB,WAAO,KAAK,QAAQ,SAAQ;EAChC;EAEA,KAA2C,aAAoE,YAA8D;AACzK,WAAO,KAAK,QAAQ,KAAK,aAAa,UAAU;EACpD;EAEA,MAAuB,YAA4D;AAC/E,WAAO,KAAK,QAAQ,MAAM,UAAU;EACxC;EAEA,QAAQ,WAAsB;AAC1B,WAAO,KAAK,QAAQ,QAAQ,SAAS;EACzC;;AA4BE,IAAgB,mBAAhB,cAAoE,UAA0B;EAQhG,YAAY,MAAc,gBAA+C,UAAkB;AACvF,QAAI;AACJ,QAAI,UAAU,cAAc,GAAG;AAC3B,iBAAW;WAEV;AACD,aAAO;;AAEX,UAAM,MAAM,IAAI;AAEhB,SAAK,WAAW,CAAC,CAAC;EACtB;EAEU,UAAU,SAAmB,MAAgB;AACnD,WAAO,KAAK,WAAW,SAAS,IAAI,EAC/B,KAAK,cAAc;EAC5B;EAEQ,WAAW,SAAmB,MAAgB;AAClD,UAAM,UAAU,QACX,IAAI,KAAK,IAAI,EACb,SAAS,KAAK,QAAQ,EACtB,SAAS,IAAI;AAClB,WAAO,KAAK,YAAY,OAAO;EACnC;;AAmCE,IAAO,aAAP,cAA4C,iBAA0C;EAC9E,YAAY,SAA6B;AAC/C,WAAO,QAAQ,MAAM,KAAK,IAAI;EAClC;;;;ACvMJ,SAAS,OAAO,MAAmB;AAC/B,SAAO,CAAC,KAAK,WAAW,KAAK;AACjC;AAEA,IAAM,gBAAN,cAA4B,KAAI;EAK5B,cAAA;AACI,UAAM,KAAK;AALP,SAAA,OAAO;AACP,SAAA,WAAW;AACX,SAAA,SAA8B;EAItC;EAEA,MAAM,OAAe,UAAkB,QAA2B;AAC9D,SAAK,QAAO;AACZ,SAAK,OAAO,CAAC;AACb,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,OAAO,CAAC;EACjB;EAEA,OAAO,IAAU;AACb,QAAI,CAAC,OAAO,IAAI,GAAG;AACf,WAAK,QAAQ,KAAK,KAAK;AACvB,UAAI,KAAK,QAAQ,GAAG;AAChB,aAAK,OAAO,CAAC;AACb,aAAK,QAAO;iBAEP,KAAK,QAAQ,GAAG;AACrB,aAAK,OAAO,KAAK,IAAI;;;EAGjC;;AAGE,IAAO,WAAP,MAAe;EAArB,cAAA;AACY,SAAA,aAAa,IAAI,MAAK;EAuBlC;EArBI,OAAO,IAAU;AACb,SAAK,OAAQ;AACb,eAAW,aAAa,KAAK,YAAY;AACrC,gBAAU,OAAO,EAAE;;EAE3B;EAEA,QAAK;AACD,eAAW,aAAa,KAAK,YAAY;AACrC,gBAAU,QAAO;;EAEzB;EAEA,MAAM,OAAe,UAAkB,QAA2B;AAC9D,QAAI,OAAO,UAAU,KAAK,YAAY,MAAM;AAC5C,QAAI,CAAC,MAAM;AACP,WAAK,WAAW,KAAK,OAAO,IAAI,cAAa,CAAE;;AAEnD,SAAK,MAAM,OAAO,UAAU,MAAM;AAClC,WAAO;EACX;;;;AC7DE,SAAU,SAAS,KAAmB;AACxC,MAAI,eAAe,kBAAkB;AACjC,WAAO,IAAI;aAEN,eAAe,YAAY;AAChC,WAAO,IAAI;SAEV;AACD,WAAO,IAAI;;AAEnB;AAEM,SAAU,UAAU,KAAmB;AACzC,MAAI,eAAe,kBAAkB;AACjC,WAAO,IAAI;aAEN,eAAe,YAAY;AAChC,WAAO,IAAI;SAEV;AACD,WAAO,IAAI;;AAEnB;;;ACtBA,IAAM,6BAA4C;AAClD,IAAM,6BAA4C;AAClD,IAAM,uBAAsC;AAC5C,IAAM,wBAAuC;AAC7C,IAAM,kBAAiC;AACvC,IAAM,iBAAgC;AACtC,IAAM,gBAA+B;AACrC,IAAM,eAA8B;AACpC,IAAM,uBAAsC;AAC5C,IAAM,mBAAkC;AACxC,IAAM,oBAAmC;AAEzC,IAAM,6BAA4C,6BAA6B;AAC/E,IAAM,uBAAsC,6BAA6B;AACzE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,wBAAuC,6BAA6B;AAC1E,IAAM,sBAAqC,uBAAuB;AAClE,IAAM,0BAAyC,sBAAsB;AACrE,IAAM,4BAA2C,wBAAwB;AACzE,IAAM,uBAAsC,0BAA0B;AAEtE,IAAM,uBAAsC,6BAA6B;AACzE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,wBAAuC,6BAA6B;AAC1E,IAAM,sBAAqC,uBAAuB;AAClE,IAAM,0BAAyC,sBAAsB;AACrE,IAAM,4BAA2C,wBAAwB;AACzE,IAAM,uBAAsC,0BAA0B;AAEtE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,uBAAsC,uBAAuB;AACnE,IAAM,sBAAqC,uBAAuB;AAClE,IAAM,0BAAyC,sBAAsB;AACrE,IAAM,4BAA2C,wBAAwB;AACzE,IAAM,uBAAsC,0BAA0B;AAEtE,IAAM,kBAAiC,kBAAkB;AACzD,IAAM,kBAAiC,kBAAkB;AACzD,IAAM,mBAAkC,wBAAwB;AAChE,IAAM,iBAAgC,kBAAkB;AACxD,IAAM,qBAAoC,iBAAiB;AAC3D,IAAM,uBAAsC,mBAAmB;AAC/D,IAAM,kBAAiC,qBAAqB;AAE5D,IAAM,iBAAgC,iBAAiB;AACvD,IAAM,kBAAiC,wBAAwB;AAC/D,IAAM,gBAA+B,iBAAiB;AACtD,IAAM,oBAAmC,gBAAgB;AACzD,IAAM,sBAAqC,kBAAkB;AAC7D,IAAM,iBAAgC,oBAAoB;AAE1D,IAAM,iBAAgC,mBAAmB;AACzD,IAAM,mBAAkC,eAAe;AACvD,IAAM,qBAAoC,iBAAiB;AAC3D,IAAM,gBAA+B,mBAAmB;AAExD,IAAM,kBAAiC,mBAAmB;AAC1D,IAAM,gBAA+B,eAAe;AACpD,IAAM,oBAAmC,gBAAgB;AACzD,IAAM,sBAAqC,kBAAkB;AAC7D,IAAM,iBAAgC,oBAAoB;AAE1D,IAAM,iBAAgC,eAAe;AACrD,IAAM,qBAAoC,iBAAiB;AAC3D,IAAM,kBAAiC,qBAAqB;AAE5D,IAAM,qBAAoC,uBAAuB;AACjE,IAAM,gBAA+B,mBAAmB;AAExD,IAAM,yBAAwC,uBAAsB;AAEpE,IAAM,sBAAqC,oBAAoB;AA2MzD,SAAU,cAAc,QAAc;AACxC,SAAO,SAAS;AACpB;AAyEM,SAAU,cAAc,QAAc;AACxC,SAAO,SAAS;AACpB;;;ACjWO,IAAM,QAAsB,oBAAI,cAAc,GAAG,GAAG,GAAG,CAAC;AAC/D,MAAM,OAAO;;;ACFb,IAAM,IAAI,IAAI,QAAO;AACrB,IAAM,KAAK,IAAI,QAAO;AACtB,IAAM,KAAK,IAAI,QAAO;AACtB,IAAM,IAAI,IAAI,WAAU;AAElB,SAAU,4BAA4B,KAAeC,MAAe,OAAc;AACpF,IAAE,KAAK,IAAI,WAAW,EACjB,OAAM,EACN,SAASA,KAAI,WAAW,EACxB,UAAU,IAAI,GAAG,KAAK;AAC3B,KAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC1B,SAAO,IAAI,iBAAiB,IAAI,CAAC;AACrC;;;ACEA,YAAY,OAAO;EAEf,YAAY,EAAE,OAAO,EAAC;EACzB,WAAW,EAAE,OAAO,EAAC;EACrB,YAAY,EAAE,OAAO,IAAI,QAAQ,GAAG,CAAC,EAAC;EACnC,YAAY,EAAE,OAAO,EAAC;EACtB,WAAW,EAAE,OAAO,EAAC;EACrB,UAAU,EAAE,OAAO,EAAC;EACpB,SAAS,EAAE,OAAO,EAAC;;;AAIvB,UAAU,MAAM,IAAI;EAEnB,UAAU,cAAc,MAAM;IACvB,YAAY;IACZ,YAAY;IACZ,YAAY;GACf;EAED;;IACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAsOP;;IACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKX,IAAM,eAAN,cAA2B,eAAc;EAErC,YAAY,YAAU;AAElB,UAAM;MAEF,MAAM;MAEN,UAAU,cAAc,MAAM,UAAU,MAAM,EAAE,QAAQ;MAExD,cAAc,UAAU,MAAM,EAAE;MAChC,gBAAgB,UAAU,MAAM,EAAE;MAElC,UAAU;;KAEb;AAED,WAAO,iBAAiB,MAAM;MAE1B,OAAO;QAEH,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,QAAQ;QAEjC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,QAAQ,QAAQ;QAElC;;MAIJ,YAAY;QAER,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,iBAAiB,KAAK;QAEjC;QAEA,KAAK,SAAU,OAAK;AAEhB,cAAI,UAAU,MAAM;AAEhB,iBAAK,QAAQ,cAAc;iBAExB;AAEH,mBAAO,KAAK,QAAQ;;QAI5B;;MAIJ,WAAW;QAEP,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,UAAU;QAEnC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,UAAU,QAAQ;QAEpC;;MAIJ,QAAQ;QAEJ,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,QAAQ,cAAc,KAAK,OAAO;QAE7C;QAEA,IAAI,OAAK;AAEL,cAAI,QAAQ,KAAK,MAAM,QAAQ,cAAc,KAAK,OAAO,GAAG;AAExD,iBAAK,cAAc;;AAIvB,cAAI,UAAU,MAAM;AAEhB,iBAAK,QAAQ,WAAW;iBAErB;AAEH,mBAAO,KAAK,QAAQ;;QAI5B;;MAIJ,WAAW;QAEP,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,UAAU;QAEnC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,UAAU,QAAQ;QAEpC;;MAIJ,UAAU;QAEN,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,SAAS;QAElC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,SAAS,QAAQ;QAEnC;;MAIJ,YAAY;QAER,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,WAAW;QAEpC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,WAAW,QAAQ;QAErC;;MAIJ,SAAS;QAEL,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,QAAQ;QAEjC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,QAAQ,QAAQ;QAElC;;MAIJ,SAAS;QAEL,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,QAAQ;QAEjC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,QAAQ,QAAQ;QAElC;;MAIJ,YAAY;QAER,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,KAAK,SAAS,WAAW;QAEpC;QAEA,KAAK,SAAU,OAAK;AAEhB,eAAK,SAAS,WAAW,MAAM,KAAK,KAAK;QAE7C;;MAIJ,iBAAiB;QAEb,YAAY;QAEZ,KAAK,WAAA;AAED,iBAAO,QAAQ,2BAA2B,KAAK,OAAO;QAE1D;QAEA,KAAK,SAAU,OAAK;AAEhB,cAAI,QAAQ,KAAK,MAAM,QAAQ,2BAA2B,KAAK,OAAO,GAAG;AAErE,iBAAK,cAAc;;AAIvB,cAAI,UAAU,MAAM;AAEhB,iBAAK,QAAQ,wBAAwB;AACrC,iBAAK,WAAW,cAAc;iBAE3B;AAEH,mBAAO,KAAK,QAAQ;AACpB,iBAAK,WAAW,cAAc;;QAItC;;KAIP;AAED,SAAK,UAAU,UAAU;EAE7B;;AAIJ,aAAa,UAAU,iBAAiB;;;AC9qBxC,IAAM,YAAY,UAAU,2BAA2B,MAAM,oBAAI,IAAG,CAAoB;AAExF,SAAS,IAAIC,MAAUC,OAAY;AAC/B,MAAIA,SAAQD,MAAK;AACb,WAAOA,KAAIC,KAAI;;AAEvB;AAKA,SAAS,aAA8E,MAAc,UAA+C,SAAiB;AAEjK,QAAM,MAAM,GAAG,IAAI,IAAI,OAClB,KAAK,OAAO,EACZ,IAAI,CAAC,MAAM,GAAG,CAAC,IAAK,QAAgB,CAAC,CAAC,EAAE,EACxC,KAAK,GAAG,CAAC;AAEd,MAAI,CAAC,UAAU,IAAI,GAAG,GAAG;AACrB,QAAI,SAAS,MAAM;AACnB,cAAU,IAAI,KAAK,IAAI,SAAS,OAAO,CAAC;;AAG5C,SAAO,UAAU,IAAI,GAAG;AAC5B;AAEA,SAAS,MAAS,SAAU;AACxB,SAAO,OAAO,OAAO,SAAS;IAC1B,aAAa;GAChB;AACL;AAMM,SAAU,iBAAiB,SAAoC;AACjE,SAAO,aAAa,oBAAoB,mBAAmB,MAAM,OAAO,CAAC;AAC7E;;;AC7BA,IAAM,IAAI,IAAI,QAAO;AAErB,IAAI,cAAc;AAQZ,IAAO,UAAP,cACM,SAAQ;EAsBhB,YAAY,KAAsBC,OAAqB,gBAAgC,oBAAqE,MAAI;AAC5J,UAAK;AAD8C,SAAA,iBAAA;AAnBtC,SAAA,kBAAkB,IAAI,QAAO;AAEtC,SAAA,cAAc;AACd,SAAA,eAAe;AACf,SAAA,cAAc;AACd,SAAA,gBAAgB;AAEhB,SAAA,QAAqB;AACrB,SAAA,WAA2B;AAC3B,SAAA,YAA4B;AAC5B,SAAA,YAAoB;AACpB,SAAA,aAAqB;AAEnB,SAAA,MAAuB;AAEjC,SAAA,OAAgD;AAChD,SAAA,mBAAqC;AACrC,SAAA,WAAkC;AAK9B,QAAI,KAAK;AACL,WAAK,cAAc,KAAKA,KAAI;AAE5B,YAAM,WAAW,oBAAoB,iBAAiB,IAChD,oBACA,iBAAiB,OAAO,OACtB,CAAA,GACA,mBACA,EAAE,MAAM,KAAK,KAAI,CAAE,CAAC;AAE5B,eAAS,MACL,KAAK,OAAO,KAAKA,QAAO,SAAS,OAAO,QAAQ,CAAC;;EAE7D;EAES,KAAK,QAAc,YAAY,MAAI;AACxC,UAAM,KAAK,QAAQ,SAAS;AAC5B,SAAK,iBAAiB,OAAO;AAC7B,SAAK,aAAa,OAAO,YAAY,OAAO,WAAW;AACvD,SAAK,cAAc,OAAO,KAAK,OAAO,OAAQ,EAAE,WAAY;AAC5D,SAAK,OAAO,UAAU,KAAK,UAAU,MAAM;AAC3C,QAAI,kBAAkB,KAAK,IAAI,GAAG;AAC9B,WAAK,OAAO,OAAO,KAAK,MAAK;AAC7B,eAAS,MAAM,KAAK,IAAI;;AAG5B,SAAK,cAAc,OAAO,QAAQ;AAElC,WAAO;EACX;EAEA,UAAO;AACH,SAAK,IAAI,YAAY,IAAI;AACzB,SAAK,aAAY;AACjB,YAAQ,KAAK,IAAI;EACrB;EAEQ,eAAY;AAChB,SAAK,iBAAgB;AACrB,YAAQ,KAAK,KAAK,SAAS,GAAG;AAC9B,SAAK,WAAW;EACpB;EAEQ,aAAa,OAAe,QAAc;AAC9C,QAAI,UAAU,KAAK,cACZ,WAAW,KAAK,aAAa;AAChC,YAAM,EAAE,aAAa,aAAY,IAAK;AACtC,WAAK,cAAc;AACnB,WAAK,eAAe;AACpB,UAAI,KAAK,aAAa,QAAQ;AAC1B,YAAI,KAAK,aAAa,eAAe;AACjC,eAAK,cAAc;eAElB;AACD,eAAK,eAAe;;;;EAIpC;EAEA,IAAI,aAAU;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,cAAW;AACX,WAAO,KAAK;EAChB;EAEA,IAAI,mBAAgB;AAChB,WAAO,KAAK,aAAa,KAAK;EAClC;EAEA,IAAI,cAAW;AACX,WAAO,KAAK,MAAM;EACtB;EAEA,IAAI,YAAY,GAAC;AACb,SAAK,MAAM,IAAI,GAAG,KAAK,MAAM,IAAI,IAAI,KAAK,kBAAkB,CAAC;EACjE;EAEA,IAAI,eAAY;AACZ,WAAO,KAAK,MAAM;EACtB;EAEA,IAAI,aAAa,GAAC;AACd,SAAK,MAAM,IAAI,KAAK,mBAAmB,GAAG,GAAG,CAAC;EAClD;EAEA,IAAI,eAAY;AACZ,UAAM,SAAS,cAAc,KAAK,WAAW;AAC7C,UAAM,MAAM,KAAK,aAAa;AAC9B,WAAO;EACX;EAEA,IAAI,aAAa,KAAG;AAChB,UAAM,SAAS,KAAK,aAAa;AACjC,UAAM,SAAS,cAAc,MAAM;AACnC,SAAK,cAAc;EACvB;EAEQ,cAAc,KAAsBA,OAAY;AACpD,SAAK,MAAM;AACX,SAAK,OAAOA;AACZ,SAAK,IAAI,uBAAuB,MAAM,UAAU,CAAC,QAC7C,KAAK,gBAAgB,IAAI,KAAK,CAAC;EACvC;EAEA,IAAY,aAAU;AAClB,QAAI,CAAC,qBAAqB,IAAI,KACvB,kBAAkB,KAAK,KAAK,SAAS,GAAG,KACxC,kBAAkB,KAAK,QAAQ,GAAG;AACrC,aAAO;;AAGX,QAAI,EAAE,KAAK,oBAAoB,mBAAmB;AAC9C,aAAO;;AAGX,WAAO,CAAC,KAAK,SAAS,UAAU,KAAK,SAAS,cAAc;EAChE;EAEA,mBAAgB;AACZ,QAAI,UAAU,KAAK,KAAK,GAAG;AACvB,WAAK,gBAAgB;AACrB,WAAK,IAAI,iBAAiB,KAAK,KAAK;AACpC,WAAK,KAAK,UAAU;AAEpB,YAAM,QAAQ,KAAK;AACnB,WAAK,QAAQ;AAEb,iBAAW,MAAMC,SAAQ,KAAK,GAAG,GAAG;;EAG5C;EAEA,cAAc,KAAmB;AAC7B,QAAI,KAAK,UAAU;AACf,WAAK,aAAY;;AAGrB,QAAI,KAAK;AACL,UAAI,cAAc,GAAG,GAAG;AACpB,cAAM,mCAAmC,GAAG;iBAEvC,YAAY,GAAG,GAAG;AACvB,cAAM,iCAAiC,GAAG;;AAG9C,UAAI,kBAAkB,GAAG,GAAG;AACxB,cAAM;;AAGV,WAAK,WAAW;AAEhB,WAAK,aAAa,SAAS,GAAG,GAAG,UAAU,GAAG,CAAC;AAC/C,UAAI,eAAe,kBAAkB;AACjC,aAAK,KAAK,SAAS,MAAM,IAAI,aAAa,GAAG;aAE5C;AACD,aAAK,KAAK,SAAS,MAAM,IAAI,QAAQ,GAAG;AACxC,aAAK,KAAK,SAAS,IAAI,cAAc;;;AAI7C,SAAK,KAAK,SAAS,cAAc;EACrC;EAEA,IAAY,UAAO;AACf,WAAO,KAAK,oBAAoB;EACpC;EAEA,gBAAa;AACT,QAAI,UAAU,KAAK,QAAQ,GAAG;AAC1B,YAAM,WAAW,SAAS,KAAK,QAAQ;AACvC,YAAM,YAAY,UAAU,KAAK,QAAQ;AAAE;AAC3C,UAAI,KAAK,eAAe,YACjB,KAAK,gBAAgB,WAAW;AAEnC,cAAM,MAAM,KAAK;AAEjB,aAAK,aAAY;AAEjB,aAAK,cAAc,GAAG;aAErB;AACD,aAAK,KAAK,SAAS,IAAI,cACjB,KAAK,cACL;;;EAGlB;EAEQ,gBAAgB,OAAe;AACnC,QAAI,KAAK,KAAK,SAAS,OAAO,KAAK,UAAU;AACzC,YAAM,oBAAoB,KAAK,mBAAmB,UAC3C,KAAK,IAAI,0BACT,KAAK,IAAI,mBACT,UAAU,KAAK,MACd,KAAK,WAAW,UAAU,KAAK,IAAI,cAAc,KAC9C,CAAC,KAAK,WAAW,UAAU,KAAK,IAAI,SAAS;AACxD,YAAM,WAAW,qBAAqB,KAAK;AAE3C,YAAM,kBAAkB,aAAa,KAAK;AAC1C,YAAM,eAAe,KAAK,aAAa,KAAK,aACrC,KAAK,KAAK,SAAS,eACnB,KAAK,KAAK,SAAS,IAAI,eACvB,KAAK;AACZ,YAAM,cAAc,KAAK,eAAe,KAAK,aACtC,KAAK,gBAAgB,KAAK;AAEjC,WAAK,gBAAgB;AACrB,WAAK,YAAY,KAAK;AACtB,WAAK,YAAY,KAAK;AACtB,WAAK,aAAa,KAAK;AAEvB,UAAI,mBAAmB,aAAa;AAChC,aAAK,CAAC,YAAY,gBAAgB,KAAK,OAAO;AAC1C,eAAK,iBAAgB;;AAGzB,YAAI,UAAU;AACV,gBAAM,QAAQ,KAAK,IAAI;AAEvB,gBAAM,YAAY,4BAA4B,KAAK,IAAI,OAAO,KAAK,MAAM,CAAC;AAC1E,eAAK,gBAAgB,KAAK,KAAK,WAAW;AAC1C,gBAAM,QAAQ,EAAE,IAAI;AACpB,gBAAM,SAAS,EAAE,IAAI;AACrB,gBAAM,SAAS,KAAK,qBAAqB,SACnC,SACA,KAAK,qBAAqB,gBAAgB,KAAK,qBAAqB,eAChE,sBACA;AAEV,cAAI,KAAK,SAAS;AACd,kBAAM,eAAe,KAAK,qBAAqB,gBACxC,KAAK,qBAAqB;AAEjC,iBAAK,QAAQ,KAAK,IAAI,eAAe,gBAAgB,KAAK,UAA8B;cACpF;cACA;cACA;cACA;cACA;cACA;aACH;iBAEA;AACD,iBAAK,QAAQ,KAAK,IAAI,UAAU,gBAAgB;cAC5C;cACA;cACA,aAAa;cACb,UAAU,KAAK,mBAAmB;cAClC,gBAAgB,SAAS,KAAK,QAAQ;cACtC,iBAAiB,UAAU,KAAK,QAAQ;cACxC;cACA;cACA;aACH;;AAGL,eAAK,IAAI,cAAc,KAAK,OAAO,GAAG;AACtC,eAAK,KAAK,UAAU;;;AAI5B,UAAI,KAAK,OAAO;AACZ,YAAI,gBAAgB,KAAK,MAAM,aAAa;AACxC,gBAAM,KAAK,KAAK,IAAI;AACpB,gBAAM,SAAS,KAAK,IAAI,UAAU,YAAY,KAAK,OAAO,KAAK;AAE/D,aAAG,YAAY,GAAG,qBAAqB,IAAI;AAC3C,aAAG,YAAY,GAAG,YAAY,OAAO,YAAY;AACjD,aAAG,cACC,GAAG,YACH,GACA,GAAG,GACH,GAAG,MACH,GAAG,eACH,KAAK,QAAQ;AACjB,aAAG,eAAe,GAAG,UAAU;AAE/B,aAAG,YAAY,GAAG,YAAY,IAAI;AAClC,eAAK,cAAc;;AAGvB,YAAI,aAAa,KAAK,YAAY,UAAU,KAAK,gBAAgB,QAAQ,KAAK,GAAG;AAC7E,eAAK,MAAM,YAAY,4BAA4B,KAAK,IAAI,OAAO,KAAK,MAAM,CAAC;AAC/E,eAAK,gBAAgB,KAAK,KAAK,WAAW;AAC1C,eAAK,MAAM,QAAQ,EAAE,IAAI;AACzB,eAAK,MAAM,SAAS,EAAE,IAAI;;aAG7B;AACD,aAAK,cAAc;;;EAG/B;;;;AC/UE,IAAgB,cAAhB,cACM,iBAAmC;EAU3C,YAAY,OAAe,QAAgB,SAAqC;AAC5E,UAAK;AARD,SAAA,SAAS;AAET,SAAA,WAAW;AACX,SAAA,aAAsB;AAEpB,SAAA,aAAa,IAAI,WAAW,SAAS;AAK3C,QAAI,UAAU,OAAO,GAAG;AAEpB,UAAI,UAAU,QAAQ,KAAK,GAAG;AAC1B,aAAK,SAAS,QAAQ;;;AAK9B,SAAK,UAAU,eAAe,OAAO,MAAM;AAC3C,SAAK,KAAK,KAAK,OAAO,WAAW,IAAI;EACzC;EAEU,SAAS,OAAe,GAAW,GAAW,OAAe,QAAgBC,SAAc;AACjG,SAAK,EAAE,YAAY;AACnB,SAAK,EAAE,SAAS,IAAIA,SAAQ,IAAIA,SAAQ,QAAQ,IAAIA,SAAQ,SAAS,IAAIA,OAAM;EACnF;EAEU,SAAS,MAAc,GAAW,GAAW,OAAsB;AACzE,SAAK,EAAE,YAAY;AACnB,SAAK,EAAE,WAAW,MAAM,GAAG,CAAC;AAC5B,SAAK,EAAE,SAAS,MAAM,GAAG,CAAC;EAC9B;EAEU,SAAM;AACZ,SAAK,KAAK,WAAW,KAAK,eAAe,KAAK,SAAQ,GAAI;AACtD,WAAK,aAAa,KAAK;AACvB,WAAK,cAAc,KAAK,UAAU;;EAE1C;EAEU,UAAO;AACb,SAAK,EAAE,UAAU,GAAG,GAAG,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM;EAChE;EAGA,QAAK;AACD,SAAK,QAAO;AACZ,SAAK,cAAc,KAAK,UAAU;EACtC;EAEA,IAAI,SAAM;AACN,WAAO,KAAK;EAChB;EAEA,IAAc,IAAC;AACX,WAAO,KAAK;EAChB;EAEA,IAAI,aAAU;AACV,WAAO,KAAK,OAAO;EACvB;EAEA,IAAI,cAAW;AACX,WAAO,KAAK,OAAO;EACvB;EAEA,IAAI,cAAW;AACX,WAAO,KAAK,aAAa,KAAK;EAClC;EAEA,IAAI,QAAK;AACL,WAAO,KAAK,aAAa,KAAK;EAClC;EAEA,IAAI,SAAM;AACN,WAAO,KAAK,cAAc,KAAK;EACnC;EAEA,IAAI,QAAK;AACL,WAAO,KAAK;EAChB;EAEA,IAAI,MAAM,GAAC;AACP,QAAI,KAAK,UAAU,GAAG;AAClB,WAAK,SAAS;AACd,WAAK,OAAM;;EAEnB;EAEA,IAAI,UAAO;AACP,WAAO,KAAK;EAChB;EAEA,IAAI,QAAQ,GAAC;AACT,QAAI,KAAK,YAAY,GAAG;AACpB,WAAK,aAAa,KAAK;AACvB,WAAK,WAAW;AAChB,WAAK,OAAM;;EAEnB;;;;ACjFE,IAAO,YAAP,cAAyB,YAAW;EAgCtC,YAAY,SAAkC;AAC1C,UAAM,IAAI,IAAI,OAAO;AAhCjB,SAAA,YAAoB;AACpB,SAAA,aAAqB;AACrB,SAAA,eAAuB;AACvB,SAAA,KAAa;AAEb,SAAA,YAAoB;AACpB,SAAA,YAAoB;AACpB,SAAA,aAAqB;AACrB,SAAA,aAAqB;AACrB,SAAA,oBAAoB;AACpB,SAAA,oBAAoB;AAEpB,SAAA,eAAuB;AACvB,SAAA,iBAAyB;AACzB,SAAA,gBAAwB;AAExB,SAAA,mBAA2B;AAC3B,SAAA,kBAA0B;AAC1B,SAAA,iBAAiB;AACjB,SAAA,iBAAiB;AAEjB,SAAA,aAAa;AACb,SAAA,eAAe;AACf,SAAA,cAAc;AACd,SAAA,cAAc;AACd,SAAA,YAAY;AAIZ,SAAA,SAAiB;AAgUjB,SAAA,YAAoB;AA3TxB,QAAI,UAAU,OAAO,GAAG;AACpB,UAAI,UAAU,QAAQ,QAAQ,GAAG;AAC7B,aAAK,YAAY,QAAQ;;AAG7B,UAAI,UAAU,QAAQ,QAAQ,GAAG;AAC7B,aAAK,YAAY,QAAQ;;AAG7B,UAAI,UAAU,QAAQ,SAAS,GAAG;AAC9B,aAAK,aAAa,QAAQ;;AAG9B,UAAI,UAAU,QAAQ,SAAS,GAAG;AAC9B,aAAK,aAAa,QAAQ;;AAG9B,UAAI,UAAU,QAAQ,gBAAgB,GAAG;AACrC,aAAK,oBAAoB,QAAQ;;AAGrC,UAAI,UAAU,QAAQ,eAAe,GAAG;AACpC,aAAK,mBAAmB,QAAQ;;AAGpC,UAAI,UAAU,QAAQ,cAAc,GAAG;AACnC,aAAK,kBAAkB,QAAQ;;AAGnC,UAAI,UAAU,QAAQ,WAAW,GAAG;AAChC,aAAK,eAAe,QAAQ;;AAGhC,UAAI,UAAU,QAAQ,aAAa,GAAG;AAClC,aAAK,iBAAiB,QAAQ;;AAGlC,UAAI,UAAU,QAAQ,YAAY,GAAG;AACjC,aAAK,gBAAgB,QAAQ;;AAGjC,UAAI,UAAU,QAAQ,KAAK,GAAG;AAC1B,aAAK,SAAS,QAAQ;;AAG1B,UAAI,UAAU,QAAQ,aAAa,GAAG;AAClC,aAAK,iBAAiB,QAAQ;;AAGlC,UAAI,UAAU,QAAQ,aAAa,GAAG;AAClC,aAAK,iBAAiB,QAAQ;;AAGlC,UAAI,UAAU,QAAQ,SAAS,GAAG;AAC9B,aAAK,aAAa,QAAQ;;AAG9B,UAAI,UAAU,QAAQ,WAAW,GAAG;AAChC,aAAK,eAAe,QAAQ;;AAGhC,UAAI,UAAU,QAAQ,UAAU,GAAG;AAC/B,aAAK,cAAc,QAAQ;;AAG/B,UAAI,UAAU,QAAQ,UAAU,GAAG;AAC/B,aAAK,cAAc,QAAQ;;AAG/B,UAAI,UAAU,QAAQ,QAAQ,GAAG;AAC7B,aAAK,YAAY,QAAQ;;AAG7B,UAAI,UAAU,QAAQ,OAAO,GAAG;AAC5B,YAAI,SAAS,QAAQ,OAAO,GAAG;AAC3B,eAAK,WAAW;YACZ,MAAM,QAAQ;YACd,OAAO,QAAQ;YACf,KAAK,QAAQ;YACb,QAAQ,QAAQ;;eAGnB;AACD,eAAK,WAAW,QAAQ;;;;AAKpC,QAAI,kBAAkB,KAAK,QAAQ,GAAG;AAClC,WAAK,WAAW;QACZ,KAAK;QACL,OAAO;QACP,QAAQ;QACR,MAAM;;;AAId,SAAK,OAAM;EACf;EAEA,IAAI,WAAQ;AACR,WAAO,KAAK;EAChB;EAEA,IAAI,SAAS,GAAC;AACV,QAAI,KAAK,aAAa,GAAG;AACrB,WAAK,YAAY;AACjB,WAAK,OAAM;;EAEnB;EAEA,IAAI,WAAQ;AACR,WAAO,KAAK;EAChB;EAEA,IAAI,SAAS,GAAC;AACV,QAAI,KAAK,aAAa,GAAG;AACrB,WAAK,YAAY;AACjB,WAAK,OAAM;;EAEnB;EAEA,IAAI,YAAS;AACT,WAAO,KAAK;EAChB;EAEA,IAAI,UAAU,GAAC;AACX,QAAI,KAAK,cAAc,GAAG;AACtB,WAAK,aAAa;AAClB,WAAK,OAAM;;EAEnB;EAEA,IAAI,YAAS;AACT,WAAO,KAAK;EAChB;EAEA,IAAI,UAAU,GAAC;AACX,QAAI,KAAK,cAAc,GAAG;AACtB,WAAK,aAAa;AAClB,WAAK,OAAM;;EAEnB;EAGA,IAAI,UAAO;AACP,WAAO,KAAK;EAChB;EAEA,IAAI,QAAQ,GAAC;AACT,QAAI,aAAa,OAAO;AACpB,YAAM,IAAI,MAAM,iBAAiB;;AAErC,QAAI,KAAK,QAAQ,QAAQ,EAAE,OACpB,KAAK,QAAQ,SAAS,EAAE,SACxB,KAAK,QAAQ,UAAU,EAAE,UACzB,KAAK,QAAQ,QAAQ,EAAE,MAAM;AAChC,WAAK,WAAW;AAChB,WAAK,OAAM;;EAEnB;EAEA,IAAI,gBAAa;AACb,WAAO,KAAK;EAChB;EAEA,IAAI,cAAc,GAAC;AACf,QAAI,KAAK,kBAAkB,GAAG;AAC1B,WAAK,iBAAiB;AACtB,WAAK,OAAM;;EAEnB;EAEA,IAAI,YAAS;AACT,WAAO,KAAK;EAChB;EAEA,IAAI,UAAU,GAAC;AACX,QAAI,KAAK,cAAc,GAAG;AACtB,WAAK,aAAa;AAClB,WAAK,OAAM;;EAEnB;EAEA,IAAI,cAAW;AACX,WAAO,KAAK;EAChB;EAEA,IAAI,YAAY,GAAC;AACb,QAAI,KAAK,gBAAgB,GAAG;AACxB,WAAK,eAAe;AACpB,WAAK,OAAM;;EAEnB;EAEA,IAAI,aAAU;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,WAAW,GAAC;AACZ,QAAI,KAAK,eAAe,GAAG;AACvB,WAAK,cAAc;AACnB,WAAK,OAAM;;EAEnB;EAEA,IAAI,WAAQ;AACR,WAAO,KAAK;EAChB;EAEA,IAAI,SAAS,GAAC;AACV,QAAI,KAAK,aAAa,GAAG;AACrB,WAAK,YAAY;AACjB,WAAK,OAAM;;EAEnB;EAEA,IAAI,aAAU;AACV,WAAO,KAAK;EAChB;EAEA,IAAI,WAAW,GAAC;AACZ,QAAI,KAAK,eAAe,GAAG;AACvB,WAAK,cAAc;AACnB,WAAK,OAAM;;EAEnB;EAEA,IAAI,gBAAa;AACb,WAAO,KAAK;EAChB;EAEA,IAAI,cAAc,GAAC;AACf,QAAI,KAAK,kBAAkB,GAAG;AAC1B,WAAK,iBAAiB;AACtB,WAAK,OAAM;;EAEnB;EAEA,IAAI,kBAAe;AACf,WAAO,KAAK;EAChB;EAEA,IAAI,gBAAgB,GAAC;AACjB,QAAI,KAAK,oBAAoB,GAAG;AAC5B,WAAK,mBAAmB;AACxB,WAAK,OAAM;;EAEnB;EAEA,IAAI,iBAAc;AACd,WAAO,KAAK;EAChB;EAEA,IAAI,eAAe,GAAC;AAChB,QAAI,KAAK,mBAAmB,GAAG;AAC3B,WAAK,kBAAkB;AACvB,WAAK,OAAM;;EAEnB;EAEA,IAAI,cAAW;AACX,WAAO,KAAK;EAChB;EAEA,IAAI,YAAY,GAAC;AACb,QAAI,KAAK,gBAAgB,GAAG;AACxB,WAAK,eAAe;AACpB,WAAK,OAAM;;EAEnB;EAEA,IAAI,gBAAa;AACb,WAAO,KAAK;EAChB;EAEA,IAAI,cAAc,GAAC;AACf,QAAI,KAAK,kBAAkB,GAAG;AAC1B,WAAK,iBAAiB;AACtB,WAAK,OAAM;;EAEnB;EAEA,IAAI,eAAY;AACZ,WAAO,KAAK;EAChB;EAEA,IAAI,aAAa,GAAC;AACd,QAAI,KAAK,iBAAiB,GAAG;AACzB,WAAK,gBAAgB;AACrB,WAAK,OAAM;;EAEnB;EAEA,IAAI,QAAK;AACL,WAAO,KAAK;EAChB;EAEA,IAAI,MAAM,GAAC;AACP,QAAI,KAAK,UAAU,GAAG;AAClB,WAAK,SAAS;AACd,WAAK,OAAM;;EAEnB;EAEQ,MAAM,OAAa;AACvB,WAAO,MACF,QAAQ,SAAS,IAAI,EACrB,MAAM,IAAI;EACnB;EAEU,WAAQ;AACd,SAAK,oBAAoB;EAC7B;EAIU,WAAQ;AACd,SAAK,QAAO;AAEZ,QAAI,KAAK,WACF,KAAK,cACL,KAAK,aACJ,KAAK,iBAAkB,KAAK,mBAAmB,KAAK,mBACrD,KAAK,SACL,KAAK,UAAU,KAAK,WAAW;AAElC,YAAM,QAAQ,KAAK,MAAM,KAAK,KAAK;AACnC,YAAM,aAAa,KAAK,iBAAiB,KAAK,cAAc,QAAQ,UAAU,MAAM;AAEpF,UAAI,KAAK,cAAc,QAChB,KAAK,eAAe,QACpB,KAAK,OAAO,QACZ,KAAK,iBAAiB,QACtB,CAAC,KAAK,mBAAmB;AAE5B,aAAK,oBAAoB,KAAK;AAE9B,cAAM,aAAa,KAAK,YAAY,QAC7B,KAAK,YAAY,QACjB,KAAK,aAAa,QAClB,KAAK,aAAa;AAEzB,cAAM,oBAAoB,KAAK,YAAY,KAAK,KAAK,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,KAAK;AAC/F,cAAM,oBAAoB,KAAK,YAAY,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,KAAK;AAClG,cAAM,qBAAqB,KAAK,aAAa,KAAK,KAAK,QAAQ,MAAM,KAAK,QAAQ,UAAU,KAAK;AACjG,cAAM,qBAAqB,KAAK,aAAa,QAAQ,KAAK,QAAQ,MAAM,KAAK,QAAQ,UAAU,KAAK;AAEpG,cAAM,iBAAiB,aAAa,mBAAmB;AACvD,cAAM,iBAAiB,aAAa,mBAAmB;AACvD,cAAM,kBAAkB,aAAa,kBAAkB;AACvD,cAAM,kBAAkB,aAAa,kBAAkB;AAEvD,cAAM,QAAQ,CAAA;AAGd,aAAK,YAAY;AACjB,aAAK,aAAa;AAElB,aAAK,KAAK;AAEV,YAAI,SAAS,OACT,WAAW,OACX,eAAe,KACf,cAAc;AAElB,aAAK,eAAe,MAAM,KAAK,WAAW,KAAK,OAAO,aAAa,YAAY;AAE/E,YAAI,UAAU,MACV,eAAe,OAAO;AAC1B,WAAG;AACC,gBAAM,eAAe,KAAK;AAC1B,eAAK,YAAY,KAAK;AACtB,gBAAM,OAAO,SAAS,IAAI;AAC1B,eAAK,YAAY;AAEjB,eAAK,EAAE,YAAY;AACnB,eAAK,EAAE,eAAe;AACtB,eAAK,EAAE,OAAO;AAEd,eAAK,YAAY;AACjB,eAAK,aAAa;AAClB,qBAAW,QAAQ,OAAO;AACtB,kBAAM,UAAU,KAAK,EAAE,YAAY,IAAI;AACvC,iBAAK,YAAY,KAAK,IAAI,KAAK,WAAW,QAAQ,KAAK;AACvD,iBAAK,cAAc,KAAK;AACxB,gBAAI,SAAS,QAAQ,qBAAqB,KACnC,SAAS,QAAQ,sBAAsB,KACvC,SAAS,QAAQ,uBAAuB,KACxC,SAAS,QAAQ,wBAAwB,GAAG;AAC/C,kBAAI,CAAC,YAAY;AACb,qBAAK,YAAY,QAAQ,wBAAwB,QAAQ;AACzD,qBAAK,aAAa,QAAQ,0BAA0B,QAAQ;AAC5D,qBAAK,MAAM,QAAQ,wBAAwB,KAAK,YAAY,KAAK;;;;AAK7E,cAAI,YAAY;AACZ,kBAAM,YAAY,KAAK,YAAY;AACnC,kBAAM,YAAY,KAAK,YAAY;AACnC,kBAAM,aAAa,KAAK,aAAa;AACrC,kBAAM,aAAa,KAAK,aAAa;AAErC,kBAAM,aAAa,KAAK,IAAI,SAAS;AACrC,kBAAM,aAAa,KAAK,IAAI,SAAS;AACrC,kBAAM,cAAc,KAAK,IAAI,UAAU;AACvC,kBAAM,cAAc,KAAK,IAAI,UAAU;AAEvC,qBAAS,YAAY,KAAK,aAAa;AACvC,uBAAW,YAAY,MAAM,aAAa;AAE1C,kBAAM,SAAS,KAAK,IAAI,YAAY,KAAK,IAAI,YAAY,KAAK,IAAI,aAAa,WAAW,CAAC,CAAC;AAC5F,gBAAI,SAAS,cAAc;AACvB,6BAAe;AACf,wBAAU,KAAK,EAAE;;AAGrB,iBAAK,UAAU,aACR,MAAM,QAAQ,KAAK,EAAE,IAAI,IAAI,MAC7B,SAAS;AACZ,mBAAK,EAAE,OAAO;AACd,uBAAS;AACT,yBAAW;;AAGf,gBAAI,QAAQ;AACR,6BAAe,KAAK;AACpB,mBAAK,gBAAgB,cAAc,KAAK,gBAAgB;uBAEnD,UAAU;AACf,4BAAc,KAAK;AACnB,mBAAK,gBAAgB,KAAK,eAAe,gBAAgB;;;AAIjE,gBAAM,KAAK,KAAK,EAAE,IAAI;iBACjB,UAAU;AAEnB,YAAI,YAAY;AACZ,cAAI,KAAK,YAAY,gBAAgB;AACjC,iBAAK,YAAY;qBAEZ,KAAK,YAAY,gBAAgB;AACtC,iBAAK,YAAY;;AAGrB,cAAI,KAAK,aAAa,iBAAiB;AACnC,iBAAK,aAAa;qBAEb,KAAK,aAAa,iBAAiB;AACxC,iBAAK,aAAa;;;AAI1B,cAAM,OAAO,KAAK,YAAY,KAAK,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAC9E,cAAM,OAAO,KAAK,aAAa,KAAK,SAAS,KAAK,QAAQ,MAAM,KAAK,QAAQ;AAC7E,YAAI;AACA,yBAAe,KAAK,GAAG,MAAM,IAAI;iBAE9B,KAAK;AACR,kBAAQ,MAAM,GAAG;AACjB,gBAAM;;;AAId,UAAI,KAAK,aAAa;AAClB,aAAK,EAAE,YAAY,KAAK;AACxB,aAAK,EAAE,SAAS,GAAG,GAAG,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM;aAE1D;AACD,aAAK,EAAE,UAAU,GAAG,GAAG,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM;;AAGhE,UAAI,KAAK,mBAAmB,KAAK,gBAAgB;AAC7C,aAAK,EAAE,YAAY,KAAK,iBAAiB,KAAK;AAC9C,aAAK,EAAE,cAAc,KAAK;;AAG9B,UAAI,KAAK,eAAe;AACpB,aAAK,EAAE,YAAY,KAAK;;AAG5B,YAAM,KAAK,OAAO,MAAM,SAAS;AAEjC,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACnC,cAAM,OAAO,MAAM,CAAC;AACpB,cAAM,MAAM,IAAI,MAAM,KAAK;AAC3B,cAAM,IAAI,KAAK,KAAK,KAAK,YAAY,IAAI,KAAK,QAAQ,KAAK,QAAQ;AACnE,cAAM,IAAI,KAAK,KAAK,aAAa,IAAI,KAAK,QAAQ,KAAK,QAAQ;AAE/D,YAAI,KAAK,mBAAmB,KAAK,gBAAgB;AAC7C,eAAK,EAAE,WAAW,MAAM,GAAG,CAAC;;AAGhC,YAAI,KAAK,eAAe;AACpB,eAAK,EAAE,SAAS,MAAM,GAAG,CAAC;;;AAIlC,UAAI,KAAK,iBAAiB,KAAK,cAAc;AACzC,aAAK,EAAE,cAAc,KAAK;AAC1B,aAAK,EAAE,YAAY,KAAK,eAAe,KAAK;AAC5C,cAAM,IAAI,KAAK,eAAe;AAC9B,aAAK,EAAE,WAAW,GAAG,GAAG,KAAK,OAAO,QAAQ,KAAK,cAAc,KAAK,OAAO,SAAS,KAAK,YAAY;;AAGzG,UAAI,YAAY;AACZ,cAAM,OAAO,oBAAoB,KAAK,OAAO,QAAQ,KAAK,OAAO,KAAK;AACtE,cAAM,IAAI,KAAK,WAAW,IAAI;AAC9B,YAAI,GAAG;AACH,YAAE,UAAU,KAAK,QAAQ,GAAG,KAAK,SAAS,CAAC;AAC3C,cAAI,KAAK,kBAAkB,cACpB,KAAK,kBAAkB,iBAAiB;AAC3C,cAAE,OAAO,MAAM;qBAEV,KAAK,kBAAkB,kBAAkB;AAC9C,cAAE,OAAO,CAAC,MAAM;;AAEpB,YAAE,UAAU,CAAC,KAAK,OAAO,QAAQ,GAAG,CAAC,KAAK,OAAO,SAAS,CAAC;AAC3D,YAAE,UAAU,KAAK,QAAQ,GAAG,CAAC;AAC7B,yBAAe,KAAK,GAAG,KAAK,OAAO,KAAK,MAAM;eAE7C;AACD,kBAAQ,KAAK,+BAA+B;;AAEhD,aAAK,EAAE,UAAU,MAAM,GAAG,CAAC;;AAG/B,WAAK,YAAY,KAAK;AACtB,aAAO;WAEN;AACD,YAAM,UAAU,KAAK,UAAU,KAAK;AACpC,WAAK,YAAY,KAAK;AACtB,aAAO;;EAGf;;;;ACvlBJ,IAAM,aAAa,EAAE,MAAM,UAAS;AAE9B,IAAO,kBAAP,cACM,QAAO;EAKf,IAAI,SAAM;AACN,WAAO;EACX;EAEA,IAAI,UAAO;AACP,QAAI,aAAa,KAAK,MAAM,MAAM,GAAG;AACjC,aAAO,KAAK,MAAM;WAEjB;AACD,aAAO;;EAEf;EAEA,IAAI,SAAM;AACN,WAAO,KAAK,OAAO;EACvB;EAEA,YAAY,KAAsBC,OAAc,gBAAgCC,QAAU,iBAA6C;AACnI,UAAM,KAAKD,OAAM,gBAAgB,eAAe;AApB5C,SAAA,SAAY;AAqBhB,SAAK,QAAQC;EACjB;EAEU,YAAS;AACf,SAAK,cAAa;AAClB,SAAK,cAAc,UAAU;EACjC;EAEA,IAAI,QAAK;AACL,WAAO,KAAK;EAChB;EAEA,IAAI,MAAM,GAAI;AACV,QAAI,KAAK,OAAO;AACZ,WAAK,MAAM,YAAY,IAAI;;AAG/B,SAAK,SAAS;AAEd,QAAI,KAAK,OAAO;AACZ,WAAK,MAAM,uBAAuB,MAAM,WAAW,MAAM,KAAK,UAAS,CAAE;AACzE,WAAK,cAAc,KAAK,MAAM,MAAM;AACpC,WAAK,UAAS;;EAEtB;EAEA,IAAa,aAAU;AACnB,WAAO,KAAK,MAAM;EACtB;EAEA,IAAa,cAAW;AACpB,WAAO,KAAK,MAAM;EACtB;EAES,KAAK,QAAc,YAAY,MAAI;AACxC,UAAM,KAAK,QAAQ,SAAS;AAC5B,SAAK,QAAQ,OAAO;AACpB,WAAO;EACX;EAEA,IAAI,YAAS;AACT,WAAO,mBAAmB,IAAI;EAClC;EAEA,IAAI,UAAU,GAAC;AACX,sBAAkB,MAAM,GAAG,cAAc;AACzC,qBAAiB,MAAM,CAAC;AACxB,qBAAiB,KAAK,MAAM,CAAC;AAC7B,SAAK,MAAM,UAAU;EACzB;;;;AC9EE,IAAO,WAAP,cAAwB,gBAA0B;EACpD,YAAY,KAAsBC,OAAc,gBAAgC,aAAoD,iBAA6C;AAC7K,QAAIC;AACJ,QAAI,uBAAuB,WAAW;AAClC,MAAAA,SAAQ;WAEP;AACD,MAAAA,SAAQ,IAAI,UAAU,WAAW;;AAGrC,UAAM,KAAKD,OAAM,gBAAgBC,QAAO,eAAe;EAC3D;EAEmB,YAAS;AACxB,SAAK,eAAe,KAAK;AACzB,UAAM,UAAS;EACnB;;;;ACjBJ,IAAM,iBAAiB;AAEjB,IAAO,YAAP,cACM,iBAA2C;EAUnD,YAA4B,QAAgB;AACxC,UAAK;AADmB,SAAA,SAAA;AAPnB,SAAA,SAAS,IAAI,MAAK;AAEnB,SAAA,YAAY;AACZ,SAAA,aAAa;AACb,SAAA,aAAa;AACb,SAAA,aAAa;AAIjB,SAAK,OAAO,SAAS,cAAc,IAAI;EAC3C;EAEA,QAAQC,OAAU;AACd,IAAAA,MAAK,SAAS,cAAc,IAAI;AAChC,SAAK,OAAO,KAAKA,KAAI;AACrB,WAAO;EACX;EAEA,WAAWA,OAAU;AACjB,QAAI,YAAY,KAAK,QAAQA,KAAI,GAAG;AAChC,aAAOA,MAAK,SAAS,cAAc;;AAGvC,WAAO;EACX;EAEA,aAAa,QAAc;AACvB,eAAWA,SAAQ,QAAQ;AACvB,WAAK,QAAQA,KAAI;;AAGrB,WAAO;EACX;EAEA,gBAAgB,QAAc;AAC1B,eAAWA,SAAQ,QAAQ;AACvB,WAAK,WAAWA,KAAI;;AAGxB,WAAO;EACX;EAEA,IAAI,WAAQ;AACR,WAAO,KAAK;EAChB;EAEA,IAAI,SAAS,GAAC;AACV,SAAK,YAAY;EACrB;EAEA,IAAI,UAAO;AACP,WAAO,CAAC,KAAK;EACjB;EAEA,IAAI,QAAQ,GAAC;AACT,SAAK,WAAW,CAAC;EACrB;EAEA,IAAI,YAAS;AACT,WAAO,KAAK;EAChB;EAEA,IAAI,UAAU,GAAC;AACX,SAAK,aAAa;EACtB;EAEA,IAAI,YAAS;AACT,WAAO,KAAK;EAChB;EAEA,IAAI,UAAU,GAAC;AACX,SAAK,aAAa;EACtB;EAEA,IAAI,YAAS;AACT,WAAO,KAAK;EAChB;EAEA,IAAI,UAAU,GAAC;AACX,SAAK,aAAa;EACtB;;;;ACvFE,IAAO,WAAP,cAAwB,UAAS;EAGnC,YAAY,OAAe,QACvBC,OACgB,OACA,MAAa;AAC7B,UAAM,IAAI,YAAYA,KAAI,EAAE,CAAC;AAFb,SAAA,QAAA;AACA,SAAA,OAAA;AALpB,SAAA,SAAS;AAQL,QAAI,KAAK,MAAM;AACX,WAAK,OAAO;AACZ,WAAK,KAAK,cAAc;AACxB,WAAK,KAAK,SAAS,IAAI;AACvB,WAAK,QAAQ,KAAK,KAAK,IAAI;;AAG/B,QAAI,KAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,MAAM,cAAc;AAEzB,UAAI,CAAC,KAAK,MAAM;AACZ,aAAK,QAAQ,KAAK,MAAM,IAAI;;;AAIpC,SAAK,KAAK,MAAM,IAAI;AACpB,SAAK,KAAK,MAAM,IAAI;AAEpB,aAAS,MAAM,KAAK,MAAM,KAAK,KAAK;EACxC;EAEA,IAAa,WAAQ;AACjB,WAAO,MAAM;EACjB;EAEA,IAAa,SAAS,GAAC;AACnB,QAAI,MAAM,KAAK,UAAU;AACrB,YAAM,WAAW;AACjB,WAAK,YAAW;;EAExB;EAEA,IAAa,YAAS;AAClB,WAAO,MAAM;EACjB;EAEA,IAAa,UAAU,GAAC;AACpB,QAAI,MAAM,KAAK,WAAW;AACtB,YAAM,YAAY;AAClB,WAAK,YAAW;;EAExB;EAEQ,cAAW;AACf,iBAAa,MAAM,KAAK,aAAa,KAAK,OAAO;EACrD;EAEA,IAAI,QAAK;AACL,WAAO,KAAK,KAAK,MAAM;EAC3B;EAEA,IAAI,SAAM;AACN,WAAO,KAAK,KAAK,MAAM;EAC3B;;;;AC/CJ,IAAM,OAAO,IAAI,QAAQ,GAAG,GAAG,CAAC;AAChC,IAAM,YAAY;AAoCZ,IAAO,OAAP,cAAoB,SAAQ;EAc9B,YAA6B,KAA6B;AACtD,UAAK;AADoB,SAAA,MAAA;AAbZ,SAAA,OAA4B;AAM5B,SAAA,WAAW,IAAI,SAAQ;AACvB,SAAA,gBAAgB,oBAAI,IAAG;AACvB,SAAA,UAAU,IAAI,MAAK;AAE5B,SAAA,WAA4B;AAC5B,SAAA,aAA4B,QAAQ,QAAO;AAK/C,SAAK,OAAO;AAEZ,SAAK,qBAAqB,IAAI,QAAQ,KAAK,KAAK,iBAAiB,MAAM;AAEvE,SAAK,OAAO;MACR,MAAM;MACN,SAAS;MACT,MAAM,IAAI,QAAQ,KAAK,KAAK,YAAY,MAAM;MAC9C,OAAO;MACP,WAAW;;AAGf,SAAK,aAAa;MACd,MAAM;MACN,MAAM,IAAI,QAAQ,KAAK,KAAK,cAAc,MAAM;;AAGpD,SAAK,aAAa;MACd,MAAM;MACN,MAAM,IAAI,QAAQ,KAAK,KAAK,cAAc,MAAM;MAChD,OAAO;MACP,eAAe;MACf,cAAc;MACd,SAAS;;AAGb,SAAK,aAAa;MACd,MAAM;MACN,MAAM,IAAI,QAAQ,KAAK,KAAK,cAAc,MAAM;MAChD,OAAO;MACP,QAAQ;MACR,eAAe;MACf,cAAc;MACd,SAAS;;AAGb,SAAK,YAAY;MACb,MAAM;MACN,MAAM,IAAI,QAAQ,KAAK,KAAK,aAAa,MAAM;MAC/C,OAAO;MACP,eAAe;MACf,cAAc;MACd,WAAW;;EAEnB;EAEA,MAAM,KAAK,aAA8B,MAAgB;AACrD,SAAK,WAAW,YAAY;AAE5B,UAAM,OAAO,YAAY;AACzB,UAAM,kBAAkB,IAAI,WAAW,KAAK,YAAY,YAAY,CAAC,KAAK,IAAI,KAAK;AACnF,UAAM,qBAAqB,IAAI,WAAW,KAAK,eAAe,YAAY,CAAC,KAAK,IAAI,KAAK;AACzF,UAAM,aAAa,IAAI,WAAW,KAAK,OAAO,YAAY,CAAC,KAAK,IAAI,KAAK;AACzE,UAAM,gBAAgB,IAAI,WAAW,KAAK,KAAK,MAAM,WAAW,CAAC,KAAK,IAAI,KAAK;AAC/E,QAAI,iBAA6B;AAEjC,QAAI,KAAK,KAAK,OAAO;AACjB,uBAAiB,IAAI,WAAW,KAAK,KAAK,OAAO,WAAW,CAAC,KAAK,IAAI,KAAK;AAC3E,WAAK,KAAK,QAAQ,IAAI,QAAQ,KAAK,KAAK,aAAa,QAAQ,EAAE,aAAa,KAAI,CAAE;;AAGtF,UAAM,sBAAsB,MAAM;MAC9B,CAAC,GAAG,CAACC,UAAS,SAAS,KAAK,UAAU,MAAMA,KAAI,CAAC;MACjD,CAAC,GAAG,CAACA,UAAS,KAAK,IAAI,QAAQ,OAAOA,OAClC,iBACA,oBACA,YACA,eACA,cAAc,CAAC;KACtB;AAED,SAAK,WAAW,KAAK,cAAc,gBAAgB,MAAM;AACzD,SAAK,mBAAmB,cAAc,mBAAmB,MAAM;AAC/D,SAAK,UAAU,KAAK,cAAc,WAAW,MAAM;AACnD,SAAK,WAAW,KAAK,cAAc,WAAW,MAAM;AACpD,SAAK,WAAW,KAAK,cAAc,WAAW,MAAM;AACpD,SAAK,KAAK,KAAK,cAAc,cAAc,MAAM;AAEjD,QAAI,KAAK,KAAK,OAAO;AACjB,WAAK,KAAK,MAAM,cAAc,eAAe,MAAM;AACnD,WAAK,KAAK,MAAM,QAAQ;;EAEhC;EAEA,MAAM,SACF,QACA,OACA,OACA,SACA,QACA,MAAgB;AAEhB,QAAI,WAAW;AACf,OAAG;AACC,YAAM,MAAM,MAAM,SAAS;AAC3B,UAAI,QAAQ,KACL,QAAQ,WAAW,KACnB,aAAa,KAAK,KAAK,YAAY,CAAC,GAAG;AAC1C;aAEC;AACD,UAAE;;aAED;AAET,UAAM,QAAQ,KAAK,cAAc,IAAI,MAAM,KAAK;AAEhD,UAAM,KAAK,iBAAiB,QAAQ,OAAO,OAAO,UAAU,OAAO,SAAS,QAAQ,IAAI;EAC5F;EAGQ,aAAU;AACd,eAAW,MAAK;AACZ,iBAAW,UAAU,KAAK,SAAS;AAC/B,eAAO,WAAW;;IAE1B,GAAG,EAAE;EACT;EAEQ,MAAM,iBACV,QACA,OACA,OACA,UACA,OACA,SACA,QACA,MAAgB;AAEhB,SAAK,cAAc,IAAI,QAAQ,KAAK;AAEpC,UAAM,KAAK;AAEX,SAAK,MAAK;AAEV,SAAK,UAAU,OAAO;AAEtB,UAAM,eAAe,CAAC,KAAK,MAAM,KAAK,SAAS;AAE/C,QAAI,QAAQ,GAAG;AACX,mBAAa,KAAK,KAAK,UAAU;;AAGrC,iBAAa,KAAK,GAAG,MAAM,MAAM,OAAO,QAAQ,KAAK,IAAI,UAAU,MAAM,SAAS,KAAK,CAAC,CAAC;AAEzF,QAAI,QAAQ,MAAM,SAAS,UAAU;AACjC,mBAAa,KAAK,KAAK,UAAU;;AAGrC,UAAM,aAAa;AACnB,cAAU,CAAC,SAAW;AAClB,WAAK,WAAU;AACf,iBAAW,IAAI;IACnB;AAEA,QAAI,QAAQ;AACR,mBAAa,KAAK,KAAK,UAAU;AAEjC,YAAM,YAAY;AAClB,eAAS,MAAK;AACV,aAAK,WAAU;AACf,kBAAS;MACb;;AAGJ,UAAM,SAAS,MAAK;AAChB,WAAK,WAAU;AACf,WAAK,iBAAiB,QAAQ,OAAO,OAAO,UAAU,QAAQ,UAAU,SAAS,MAAM;IAC3F;AAEA,UAAM,SAAS,MAAK;AAChB,WAAK,WAAU;AACf,WAAK,iBAAiB,QAAQ,OAAO,OAAO,UAAU,QAAQ,UAAU,SAAS,MAAM;IAC3F;AAEA,UAAM,UAAU,MAAM,gBAAgB,MAAM,cAAc,CAAC,MAA2BA,UAAmB;AACrG,UAAI,SAAS,KAAK,YAAY;AAC1B,eAAO,KAAK,eAAe,MAAM,QAAQA,KAAI;iBAExC,SAAS,KAAK,YAAY;AAC/B,eAAO,KAAK,eAAe,MAAM,QAAQA,KAAI;iBAExC,SAAS,KAAK,YAAY;AAC/B,eAAO,KAAK,eAAe,MAAM,QAAQA,KAAI;aAE5C;AACD,eAAO,KAAK,eAAe,MAAM,SAASA,KAAI;;IAEtD,CAAC;AACD,iBAAa,KAAK,SAAS,GAAG,OAAO;AAErC,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,YAAY,KAAK,QAAQ,SAAS,KAAK;AAC7C,UAAM,IAAI,KAAK,KAAK,QAAQ;AAC5B,UAAM,IAAI,KAAK,MAAM,WAAW,CAAC;AACjC,UAAM,OAAO,KAAK,QAAQ,MAAM,GAAG,CAAC,EAAE,QAAO;AAC7C,UAAM,MAAM,KAAK,QAAQ,MAAM,GAAG,CAAC;AACnC,UAAM,QAAQ,KAAK,QAAQ,MAAM,GAAG,KAAK,QAAQ,MAAM;AAEvD,QAAI,WAAW;AACf,QAAI,IAAI;AACR,eAAW,UAAU,KAAK;AACtB,kBAAY,OAAO,QAAQ;AAC3B,WAAK,kBAAkB,QAAQ,GAAG,MAAM;;AAG5C,gBAAY;AAEZ,QAAI,CAAC,WAAW;AAChB,eAAW,UAAU,MAAM;AACvB,WAAK,OAAO,OAAO,QAAQ,SAAS;AACpC,WAAK,kBAAkB,QAAQ,GAAG,MAAM;AACxC,WAAK,OAAO,OAAO,QAAQ,SAAS;;AAGxC,QAAI,WAAW;AACf,eAAW,UAAU,OAAO;AACxB,WAAK,OAAO,OAAO,QAAQ,SAAS;AACpC,WAAK,kBAAkB,QAAQ,GAAG,MAAM;AACxC,WAAK,OAAO,OAAO,QAAQ,SAAS;;AAGxC,aAAS,MAAM,GAAG,KAAK,OAAO;AAE9B,UAAM,KAAK,QAAQ,KAAK;AAExB,eAAW,UAAU,KAAK,SAAS;AAC/B,aAAO,KAAK,gBAAgB;;EAEpC;EAEA,OAAO,IAAU;AACb,SAAK,SAAS,OAAO,EAAE;EAC3B;EAEQ,kBAAkB,QAAkB,GAAW,QAAc;AACjE,UAAM,IAAI,SAAS,KAAK,IAAI,CAAC;AAC7B,UAAM,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;AAC9B,WAAO,OAAO,SAAS,IAAI,GAAG,GAAG,CAAC;AAClC,WAAO,OAAO,OAAO,IAAI;AACzB,WAAO,SAAS;AAChB,WAAO,OAAO,SAAS,IAAI,IAAI;EACnC;EAEQ,MAAM,eAAe,MAA2B,SAA4D,MAAgB;AAEhI,QAAI,CAAC,KAAK,MAAM;AACZ,UAAI,KAAK,UAAU;AACf,aAAK,OAAO,IAAI,QAAQ,KAAK,KAAK,GAAG,KAAK,IAAI,eAAe,MAAM;AACnE,cAAM,MAAM,MAAM,KAAK,IAAI,QACtB,IAAI,KAAK,QAAQ,EACjB,SAAS,IAAI,EACb,MAAK,EACL,KAAK,cAAc;AACxB,aAAK,KAAK,cAAc,GAAG;aAE1B;AACD,aAAK,OAAO,KAAK,mBAAmB,MAAK;;AAE7C,WAAK,KAAK,gBAAgB;;AAG9B,QAAI,CAAC,aAAa,KAAK,KAAK,GAAG;AAC3B,WAAK,QAAQ;;AAGjB,QAAI,CAAC,aAAa,KAAK,MAAM,GAAG;AAC5B,WAAK,SAAS;;AAGlB,QAAI,CAAC,SAAS,KAAK,aAAa,GAAG;AAC/B,WAAK,gBAAgB;;AAGzB,QAAI,CAAC,SAAS,KAAK,YAAY,GAAG;AAC9B,WAAK,eAAe;;AAGxB,QAAI,CAAC,SAAS,KAAK,IAAI,GAAG;AACtB,WAAK,OAAO,KAAK;;AAGrB,UAAM,UAAU,KAAK,YAAY;AAEjC,QAAI,KAAK,KAAK,SAAS,GAAG;AACtB,UAAI,CAAC,KAAK,SAAS,CAAC,KAAK,SAAS;AAC9B,cAAM,UAAqC;UACvC,eAAe,UAAU,UAAU;UACnC,eAAe,KAAK;UACpB,SAAS;YACL,KAAK;YACL,OAAO;YACP,QAAQ;YACR,MAAM;;UAEV,OAAO;UACP,YAAY,KAAK,SAAS;UAC1B,UAAU,KAAK,SAAS;UACxB,WAAW,KAAK,SAAS;UACzB,aAAa,KAAK,SAAS;UAC3B,YAAY,KAAK,SAAS;UAC1B,UAAU,KAAK;UACf,WAAW,KAAK;;AAEpB,cAAM,MAAM,IAAI,SAAS,KAAK,KAAK,KAAK,MAAM,QAAQ,OAAO;AAE7D,YAAI,KAAK,cAAc;AAEvB,YAAI,iBAAiB,WAAW,MAAK;AACjC,gBAAM,KAAK,IAAI,MAAM,SAAS,KAAK,SAAS,SAAS;AACrD,cAAI,KAAK,iBAAiB,UAAU;AAChC,gBAAI,SAAS,IAAI;iBAEhB;AACD,gBAAI,SAAS,IAAI,CAAC;;QAE1B,CAAC;AAED,YAAI,SAAS,IAAI;AAEjB,aAAK,QAAQ;;AAGjB,UAAI,KAAK,OAAO;AACZ,aAAK,MAAM,gBAAgB;AAE3B,YAAI,KAAK,iBAAiB,UAAU;AAChC,eAAK,MAAM,MAAM,QAAQ,KAAK;;;;AAK1C,UAAM,SAAS,IAAI,SACf,KAAK,OACL,KAAK,QACL,KAAK,MACL,KAAK,OACL,KAAK,IAAI;AAEb,WAAO,YAAY,KAAK,cAAc;AACtC,WAAO,UAAU;AAEjB,QAAI,OAAO,aACJ,WAAW,OAAO,GAAG;AACxB,aAAO,iBAAiB,SAAS,MAAK;AAClC,aAAK,aAAa,KAAK,QAAQ,IAAI;AACnC,gBAAQ,IAAI;MAChB,CAAC;;AAGL,QAAI,MAAM;AACN,WAAK,IAAI,eAAe;;AAG5B,WAAO;EACX;EAEQ,MAAM,QAAQ,GAAU;AAC5B,UAAM,QAAQ,IAAI,KAAK,QAAQ,IAAI,CAAC,OAAO,MACvC,KAAK,aAAa,OAAO,GAAG,CAAC,CAAC,CAAC;AACnC,SAAK,SAAS,MAAK;EACvB;EAEQ,MAAM,aAAa,OAAiB,GAAW,GAAU;AAC7D,UAAM,cAAc,MAAM;AAC1B,UAAM,WAAW;AAEjB,UAAM,KAAK,SAAS,MAAM,QAAQ,GAAG,KAAK,CAACC,OAAa;AACpD,YAAM,KAAK,MAAM,IAAIA,KAAK,IAAIA,IAAI,GAAG,CAAC;AACtC,YAAM,OAAO,SAAS,IAAI,MAAM,SAAS,KAAK,KAAK,IAAI,IAAI;IAC/D,CAAC;AAED,UAAM,WAAW;EACrB;;;;AClaE,SAAU,iBAAiBC,MAAc,SAAgB;AAC3D,MAAIA,KAAI,mBAAmB,mBAAmB;AAC1C,IAAAA,KAAI,QAAQ,WAAW,CAAC;;AAG5B,mBAAiBA,MAAK,OAAO;AACjC;AAkBM,IAAO,SAAP,MAAa;EACf,YAAqB,SACR,QACQ,aAA6C;AAF7C,SAAA,UAAA;AACR,SAAA,SAAA;AACQ,SAAA,cAAA;EACrB;EAEA,IAAI,OAAI;AACJ,WAAO,KAAK,OAAO;EACvB;EAEA,iBAAiB,MAAc,UAA8C,SAA2C;AACpH,SAAK,QAAQ,iBAAiB,MAAM,UAAU,OAAO;EACzD;EAEA,cAAc,OAAY;AACtB,WAAO,KAAK,QAAQ,cAAc,KAAK;EAC3C;EAEA,oBAAoB,MAAc,UAA8C,SAAwC;AACpH,SAAK,QAAQ,oBAAoB,MAAM,UAAU,OAAO;EAC5D;EAEA,QAAK;AACD,SAAK,QAAQ,MAAK;EACtB;EAEA,IAAI,UAAO;AACP,WAAO,mBAAmB,IAAI;EAClC;EAEA,IAAI,QAAQ,SAAO;AACf,sBAAkB,MAAM,SAAS,KAAK,WAAW;AACjD,SAAK,OAAO,UAAU;EAC1B;;;;ACjFE,IAAO,oBAAP,cAAiC,OAAyB;EAI5D,YAAY,SAAwB,SAAiB,UAAgB;AACjE,UAAMC,KAAI,WAAW,GAAG,OAAO,IAAI,QAAQ,EAAE;AAC7C,UACI,cACIA,IACA,IAAIA,IAAG,IAAI,QAAQ,YAAY,SAAS,QAAQ,CAAC,CAAC,CAAC,GAEvD,IAAI,GAAG,IAAI,SAAS,GACpB,cAAc;AAVd,SAAA,OAAmB;AAWvB,SAAK,KAAK,SAAS,SAAS,QAAQ;EACxC;EAEQ,MAAM,KAAK,SAAwB,SAAiB,UAAgB;AACxE,SAAK,OAAO,MAAM,QAAQ,cAAc,SAAS,UAAU,GAAG;AAC9D,SAAK,KAAK,WAAW,KAAK;AAC1B,aAAS,MAAM,KAAK,IAAI;AACxB,SAAK,KAAK,OAAO,UAAU,KAAK;AAChC,SAAK,KAAK,iBAAiB,SAAS,MAAK;AACrC,WAAK,QAAQ,MAAK;IACtB,CAAC;EACL;EAEA,IAAI,WAAQ;AACR,WAAO,KAAK,QAAQ;EACxB;EAEA,IAAI,SAAS,GAAC;AACV,SAAK,QAAQ,WAAW;AACxB,QAAI,KAAK,MAAM;AACX,WAAK,KAAK,WAAW;;EAE7B;EAEA,IAAa,UAAO;AAChB,WAAO,MAAM;EACjB;EAEA,IAAa,QAAQ,GAAU;AAC3B,UAAM,UAAU;AAChB,QAAI,KAAK,MAAM;AACX,uBAAiB,KAAK,MAAM,CAAC;;EAErC;;;;AC5BG,IAAM,yBAAN,cAAqC,WAAoB;AAAA,EAC5D,YAA4B,YAAoB;AAC5C,UAAM,QAAQ;AADU;AAAA,EAE5B;AACJ;AAEO,IAAM,qBAAN,cAAiC,WAAmB;AAAA,EACvD,cAAc;AACV,UAAM,OAAO;AAAA,EACjB;AACJ;AAOO,IAAM,WAAN,cAAuB,YAA4B;AAAA,EACrC;AAAA,EACA,gBAAgB,oBAAI,IAA+B;AAAA,EACnD,gBAAgB,oBAAI,IAA+B;AAAA,EACnD,SAAS,oBAAI,IAA8B;AAAA,EAC3C,cAAiC;AAAA,EAE1C,WAA4B;AAAA,EAC5B,UAAgB;AAAA,EAChB,WAAiB;AAAA,EAEzB,YAAY,KAAkB;AAC1B,UAAM,GAAG;AAGT,SAAK,cAAc,IAAI,kBAAkB,KAAK,IAAI,WAAW,MAAM,OAAO;AAC1E,SAAK,OAAO,IAAI,KAAK,KAAK,GAAG;AAE7B,SAAK,IAAI,uBAAuB,MAAM,UAAU,CAAC,QAC7C,KAAK,KAAK,OAAO,IAAI,EAAE,CAAC;AAE5B,SAAK,IAAI,uBAAuB,MAAM,iBAAiB,CAAC,QACpD,iBAAiB,KAAK,aAAa,CAAC,IAAI,OAAO,CAAC;AAEpD,SAAK,YAAY,iBAAiB,SAAS,MACvC,KAAK,IAAI;AAAA,MACL;AAAA,MACA;AAAA,MACA,MACI,KAAK,cAAc,IAAI,mBAAmB,CAAC;AAAA,IAAC,CAAC;AAEzD,WAAO,KAAK,IAAI;AAAA,EACpB;AAAA,EAEA,MAAe,KAAK,QAA6C;AAC7D,SAAK,WAAW,OAAO,IAAI,QAAQ;AAEnC,UAAM,MAAM,KAAK,MAAM;AAAA,EAC3B;AAAA,EAEA,MAAM,KAAK,MAAkB;AACzB,UAAM,sBAAsB,MAAM;AAAA,MAC9B,CAAC,GAAG,CAAAC,UAAQ,KAAK,KAAK,KAAK,KAAK,UAAUA,KAAI,CAAC;AAAA,MAC/C,CAAC,GAAG,CAAAA,UAAQ,KAAK,aAAaA,KAAI,CAAC;AAAA,IACvC,CAAC;AAED,aAAS,KAAK,IAAI,cAAc,KAAK,IAAI;AACzC,SAAK,IAAI,KAAK,QAAQ,KAAK,aAAa,EAAE,GAAG,GAAG,GAAG,GAAG,OAAO,IAAI,CAAC;AAClE,eAAW,KAAK,IAAI,cAAc,UAAU,KAAK,WAAW;AAAA,EAChE;AAAA,EAEA,MAAc,aAAa,MAAiC;AACxD,SAAK,iBAAiB;AAEtB,UAAM,YAAY,MAAM,KAAK,IAAI,QAC5B,IAAI,cAAc,SAAS,OAAO,SAAS,KAAK,IAAI,OAAO,GAAG,EAC9D,SAAS,IAAI,EACb,OAAuB,EACvB,KAAK,cAAc;AAExB,eAAW,YAAY,WAAW;AAC9B,UAAI,UAAU,SAAS,iBAAiB,GAAG;AACvC,aAAK,IAAI,MAAM,YAAY,SAAS,iBAAiB;AAAA,MACzD;AAAA,IACJ;AAEA,UAAM,gBAAgB,MAAM,KAAK,IAAI,IAAI,UAAU,IAAI,OAAK,EAAE,gBAAgB,CAAC,CAAC;AAChF,UAAM,SAAS,oBAAI,IAAoB;AACvC,QAAI,cAAc,SAAS,GAAG;AAC1B,YAAM,WAAW,UAAU,OAAO,OAAK,kBAAkB,EAAE,QAAQ,CAAC;AACpE,YAAM,iBAAiB,IAAI,aAAmC;AAC9D,iBAAW,KAAK,UAAU;AACtB,uBAAe,IAAI,EAAE,kBAAkB,CAAC;AAAA,MAC5C;AAEA,eAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,EAAE,GAAG;AAC3C,cAAM,QAAQ,cAAc,CAAC;AAC7B,cAAM,KAAK,EAAE,IAAI;AACjB,cAAM,OAAqB;AAAA,UACvB;AAAA,UACA;AAAA,UACA,OAAO;AAAA,UACP,kBAAkB;AAAA,QACtB;AACA,eAAO,IAAI,OAAO,EAAE;AAEpB,kBAAU,KAAK,IAAI;AACnB,mBAAW,KAAK,eAAe,IAAI,KAAK,GAAG;AACvC,YAAE,WAAW;AAAA,QACjB;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,MAAM,WAAW,WAAW,OAAK,EAAE,EAAE;AAE3C,SAAK,WAAW;AAAA,MACZ;AAAA,MACA,OAAK,IAAI,IAAI,EAAE,QAAQ;AAAA,MACvB,OAAK,KAAK,EAAE,SAAS;AAAA,IACzB;AAEA,eAAW,QAAQ,KAAK,SAAS,aAAa,GAAG;AAC7C,YAAM,QAAQ,KAAK;AACnB,UAAI,UAAU,MAAM;AAChB,cAAM,OAA4B;AAAA,UAC9B,MAAM,MAAM;AAAA,UACZ,UAAU,MAAM;AAAA,UAChB,SAAS;AAAA,QACb;AACA,aAAK,cAAc,IAAI,MAAM,IAAI;AACjC,aAAK,cAAc,IAAI,MAAM,IAAI;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,MAAc,cAAc,QAAc,MAAkB;AACxD,UAAM,WAAW,MAAM,KAAK,IAAI,IAAI,OAAO,SAAS,IAAI,OAAK,EAAE,MAAM,QAAQ,CAAC,CAAC,EAC1E,OAAO,OAAK,UAAU,CAAC,KAAK,CAAC,KAAK,OAAO,IAAI,CAAC,CAAC;AAEpD,UAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA,OAAO,GAAGA,UACN,KAAK,OAAO,IAAI,GAAG,MAAM,KAAK,IAAI,QAC7B,IAAI,CAAC,EACL,SAASA,KAAI,EACb,MAAM,EACN,KAAK,cAAc,CAAC;AAAA,IAAC;AAElC,eAAW,SAAS,OAAO,UAAU;AACjC,YAAM,OAAO,KAAK,cAAc,IAAI,KAAK;AACzC,UAAI,kBAAkB,KAAK,IAAI,KACxB,KAAK,OAAO,IAAI,KAAK,QAAQ,GAAG;AACnC,cAAM,UAAU,IAAI,QAAQ,KAAK,KAAK,KAAK,WAAW,KAAK,MAAM,MAAM;AACvE,gBAAQ,cAAc,KAAK,OAAO,IAAI,KAAK,QAAQ,CAAC;AACpD,gBAAQ,KAAK,gBAAgB;AAC7B,aAAK,OAAO;AAAA,MAChB;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,MAAM,QAAQ,MAAkB;AAC5B,UAAM,YAAY,KAAK,WAAW,KAAK;AACvC,UAAM,sBAAsB,MAAM;AAAA,MAC9B,CAAC,IAAI,OAAMA,UAAQ;AACf,aAAK,IAAI,OAAO,WAAW;AAC3B,cAAMC,SAAQ,MAAM,KAAK,IAAI,QACxB,IAAI,sBAAsB,EAC1B,SAASD,KAAI,EACb,MAAM,EACN,KAAK,cAAc;AACxB,eAAO,KAAK,IAAI,OAAO,SAAS,wBAAwBC,MAAK;AAAA,MACjE,CAAC;AAAA,MACD,CAAC,GAAG,CAAAD,UAAQ,KAAK,kBAAkB,WAAWA,KAAI,CAAC;AAAA,IACvD,CAAC;AACD,SAAK,KAAK,UAAU;AACpB,SAAK,YAAY,UAAU;AAC3B,SAAK,KAAK,OAAO;AAAA,EACrB;AAAA,EAEU,SAAS;AACf,SAAK,KAAK,UAAU;AACpB,SAAK,YAAY,UAAU;AAAA,EAC/B;AAAA,EAEA,IAAI,UAAU;AACV,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EAEA,UAAU;AACN,SAAK,IAAI,YAAY,IAAI;AACzB,SAAK,IAAI,aAAa,OAAO,KAAK,IAAI;AACtC,YAAQ,KAAK,IAAI;AACjB,SAAK,KAAK,iBAAiB;AAC3B,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EAEQ,mBAAmB;AACvB,eAAW,OAAO,KAAK,OAAO,OAAO,GAAG;AACpC,cAAQ,GAAG;AAAA,IACf;AAEA,SAAK,OAAO,MAAM;AAClB,SAAK,cAAc,MAAM;AACzB,SAAK,cAAc,MAAM;AAAA,EAC7B;AAAA,EAEA,MAAc,kBAAkB,WAAiB,MAAkB;AAC/D,SAAK,UAAU;AACf,UAAM,CAAC,SAAS,QAAQ,IAAI,sBAAsB,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/D,UAAM,KAAK,cAAc,WAAW,OAAO;AAE3C,UAAM,YAAY,UACb,SACA,IAAI,WAAS,KAAK,cAAc,IAAI,KAAK,CAAC;AAE/C,UAAM,SAAS,UAAU,SACnB,OACA,MAAM,KAAK,eAAe,UAAU,MAAM;AAEhD,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,QAAI,UAAU,OAAO;AACjB,eAAS,UAAU,MAAM;AACzB,cAAQ,UAAU,MAAM;AAAA,IAC5B;AAEA,UAAM,KAAK,KAAK;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA,CAAC,SAAS;AACN,cAAM,OAAO,KAAK,cAAc,IAAI,IAAI;AACxC,aAAK,eAAe,IAAI;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,IAAQ;AAAA,EAChB;AAAA,EAEA,MAAc,eAAe,WAAiB,MAAkB;AAC5D,QAAI,UAAU,QAAQ;AAClB,WAAK,cAAc,IAAI,uBAAuB,UAAU,MAAM,UAAU,CAAC;AAAA,IAC7E,OACK;AACD,YAAM,KAAK,kBAAkB,WAAW,IAAI;AAAA,IAChD;AAAA,EACJ;AACJ;;;AC7QA,IAAO,eAAQ;",
  "names": ["obj", "obj", "obj", "obj", "start", "end", "start", "t", "obj", "obj", "name", "obj", "end", "prog", "obj", "obj", "obj", "dispose", "t", "name", "create", "obj", "name", "obj", "obj", "obj", "obj", "obj", "name", "obj", "obj", "name", "mesh", "obj", "obj", "dispose", "obj", "obj", "name", "name", "dispose", "margin", "name", "image", "name", "image", "mesh", "name", "prog", "t", "obj", "t", "prog", "image"]
}
